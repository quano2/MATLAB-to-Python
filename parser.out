Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> top
Rule 1     top -> <empty>
Rule 2     top -> stmt_list
Rule 3     top -> top func_decl stmt_list_opt
Rule 4     top -> top func_decl end semi_opt
Rule 5     top -> top func_decl stmt_list end semi_opt
Rule 6     semi_opt -> <empty>
Rule 7     semi_opt -> semi_opt SEMI
Rule 8     semi_opt -> semi_opt COMMA
Rule 9     stmt -> continue_stmt
Rule 10    stmt -> break_stmt
Rule 11    stmt -> expr_stmt
Rule 12    stmt -> global_stmt
Rule 13    stmt -> persistent_stmt
Rule 14    stmt -> command
Rule 15    stmt -> for_stmt
Rule 16    stmt -> if_stmt
Rule 17    stmt -> null_stmt
Rule 18    stmt -> return_stmt
Rule 19    stmt -> switch_stmt
Rule 20    stmt -> try_catch
Rule 21    stmt -> while_stmt
Rule 22    stmt -> foo_stmt
Rule 23    arg1 -> STRING
Rule 24    arg1 -> NUMBER
Rule 25    arg1 -> IDENTIFIER
Rule 26    arg1 -> GLOBAL
Rule 27    args -> arg1
Rule 28    args -> args arg1
Rule 29    command -> IDENTIFIER args SEMI
Rule 30    global_list -> IDENTIFIER
Rule 31    global_list -> global_list IDENTIFIER
Rule 32    global_stmt -> GLOBAL global_list SEMI
Rule 33    global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI
Rule 34    foo_stmt -> expr OROR expr SEMI
Rule 35    persistent_stmt -> PERSISTENT global_list SEMI
Rule 36    persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI
Rule 37    return_stmt -> RETURN SEMI
Rule 38    continue_stmt -> CONTINUE SEMI
Rule 39    break_stmt -> BREAK SEMI
Rule 40    switch_stmt -> SWITCH expr semi_opt case_list end
Rule 41    case_list -> <empty>
Rule 42    case_list -> CASE expr sep stmt_list_opt case_list
Rule 43    case_list -> CASE expr error stmt_list_opt case_list
Rule 44    case_list -> OTHERWISE stmt_list
Rule 45    try_catch -> TRY stmt_list CATCH stmt_list end
Rule 46    try_catch -> TRY stmt_list end
Rule 47    null_stmt -> SEMI
Rule 48    null_stmt -> COMMA
Rule 49    func_decl -> FUNCTION IDENTIFIER args_opt SEMI
Rule 50    func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI
Rule 51    args_opt -> <empty>
Rule 52    args_opt -> LBRACKET RBRACKET
Rule 53    args_opt -> LBRACKET expr_list RBRACKET
Rule 54    arg_list -> IDENTIFIER
Rule 55    arg_list -> arg_list COMMA IDENTIFIER
Rule 56    ret -> IDENTIFIER
Rule 57    ret -> LBRACKET RBRACKET
Rule 58    ret -> LBRACKET expr_list RBRACKET
Rule 59    stmt_list_opt -> <empty>
Rule 60    stmt_list_opt -> stmt_list
Rule 61    stmt_list -> stmt
Rule 62    stmt_list -> stmt_list stmt
Rule 63    concat_list -> expr_list SEMI expr_list
Rule 64    concat_list -> concat_list SEMI expr_list
Rule 65    expr_list -> exprs
Rule 66    expr_list -> exprs COMMA
Rule 67    exprs -> expr
Rule 68    exprs -> exprs COMMA expr
Rule 69    expr_stmt -> expr_list SEMI
Rule 70    while_stmt -> WHILE expr SEMI stmt_list end
Rule 71    sep -> COMMA
Rule 72    sep -> SEMI
Rule 73    if_stmt -> IF expr sep stmt_list_opt elseif_stmt end
Rule 74    if_stmt -> IF expr error stmt_list_opt elseif_stmt end
Rule 75    elseif_stmt -> <empty>
Rule 76    elseif_stmt -> ELSE stmt_list_opt
Rule 77    elseif_stmt -> ELSEIF expr sep stmt_list_opt elseif_stmt
Rule 78    for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end
Rule 79    for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
Rule 80    for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end
Rule 81    expr -> IDENTIFIER
Rule 82    expr -> number
Rule 83    expr -> string
Rule 84    expr -> colon
Rule 85    expr -> NOTEQUAL
Rule 86    expr -> matrix
Rule 87    expr -> cellarray
Rule 88    expr -> expr2
Rule 89    expr -> expr1
Rule 90    number -> NUMBER
Rule 91    end -> END
Rule 92    string -> STRING
Rule 93    colon -> COLON
Rule 94    expr1 -> MINUS expr
Rule 95    expr1 -> PLUS expr
Rule 96    expr1 -> NOTEQUAL expr
Rule 97    cellarray -> LBRACE RBRACE
Rule 98    cellarray -> LBRACE expr_list RBRACE
Rule 99    cellarray -> LBRACE concat_list RBRACE
Rule 100   cellarray -> LBRACE concat_list SEMI RBRACE
Rule 101   matrix -> LBRACKET RBRACKET
Rule 102   matrix -> LBRACKET concat_list RBRACKET
Rule 103   matrix -> LBRACKET concat_list SEMI RBRACKET
Rule 104   matrix -> LBRACKET expr_list RBRACKET
Rule 105   matrix -> LBRACKET expr_list SEMI RBRACKET
Rule 106   expr -> LBRACKET expr RBRACKET
Rule 107   expr -> expr FIELD
Rule 108   expr -> expr TRANSPOSE
Rule 109   expr -> expr LBRACE expr_list RBRACE
Rule 110   expr -> expr LBRACE RBRACE
Rule 111   expr -> expr LBRACKET expr_list RBRACKET
Rule 112   expr -> expr LBRACKET RBRACKET
Rule 113   expr2 -> expr AND expr
Rule 114   expr2 -> expr LDIV expr
Rule 115   expr2 -> expr COLON expr
Rule 116   expr2 -> expr DIV expr
Rule 117   expr2 -> expr DOT expr
Rule 118   expr2 -> expr DOTDIV expr
Rule 119   expr2 -> expr DOTEXP expr
Rule 120   expr2 -> expr DOTMUL expr
Rule 121   expr2 -> expr EQUALEQUAL expr
Rule 122   expr2 -> expr EXP expr
Rule 123   expr2 -> expr GREATEREQUAL expr
Rule 124   expr2 -> expr GREATERTHAN expr
Rule 125   expr2 -> expr LESSEQUAL expr
Rule 126   expr2 -> expr LESSTHAN expr
Rule 127   expr2 -> expr MINUS expr
Rule 128   expr2 -> expr TIMES expr
Rule 129   expr2 -> expr NOTEQUAL expr
Rule 130   expr2 -> expr OR expr
Rule 131   expr2 -> expr OROR expr
Rule 132   expr2 -> expr PLUS expr
Rule 133   expr2 -> expr EQUALS expr
Rule 134   expr2 -> expr OREQUALS expr

Terminals, with rules where they appear

AND                  : 113
BREAK                : 39
CASE                 : 42 43
CATCH                : 45
COLON                : 93 115
COMMA                : 8 48 55 66 68 71
COMMENT              : 
CONTINUE             : 38
DIV                  : 116
DOT                  : 117
DOTDIV               : 118
DOTEXP               : 119
DOTMUL               : 120
ELSE                 : 76
ELSEIF               : 77
END                  : 91
EQUALEQUAL           : 121
EQUALS               : 33 36 50 78 79 80 133
EXP                  : 122
FIELD                : 107
FOR                  : 78 79 80
FUNCTION             : 49 50
GLOBAL               : 26 32 33
GREATEREQUAL         : 123
GREATERTHAN          : 124
IDENTIFIER           : 25 29 30 31 33 36 49 50 54 55 56 78 79 81
IF                   : 73 74
LBRACE               : 97 98 99 100 109 110
LBRACKET             : 52 53 57 58 79 101 102 103 104 105 106 111 112
LDIV                 : 114
LESSEQUAL            : 125
LESSTHAN             : 126
MINUS                : 94 127
NOTEQUAL             : 85 96 129
NUMBER               : 24 90
OR                   : 130
OREQUALS             : 134
OROR                 : 34 131
OTHERWISE            : 44
PERSISTENT           : 35 36
PLUS                 : 95 132
RBRACE               : 97 98 99 100 109 110
RBRACKET             : 52 53 57 58 79 101 102 103 104 105 106 111 112
RETURN               : 37
SEMI                 : 7 29 32 33 34 35 36 37 38 39 47 49 50 63 64 69 70 72 78 79 80 100 103 105
STRING               : 23 92
SWITCH               : 40
TIMES                : 128
TRANSPOSE            : 108
TRY                  : 45 46
WHILE                : 70
error                : 43 74

Nonterminals, with rules where they appear

arg1                 : 27 28
arg_list             : 55
args                 : 28 29
args_opt             : 49 50
break_stmt           : 10
case_list            : 40 42 43
cellarray            : 87
colon                : 84
command              : 14
concat_list          : 64 99 100 102 103
continue_stmt        : 9
elseif_stmt          : 73 74 77
end                  : 4 5 40 45 46 70 73 74 78 79 80
expr                 : 33 34 34 36 40 42 43 67 68 70 73 74 77 78 79 80 94 95 96 106 107 108 109 110 111 112 113 113 114 114 115 115 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 132 133 133 134 134
expr1                : 89
expr2                : 88
expr_list            : 53 58 63 63 64 69 98 104 105 109 111
expr_stmt            : 11
exprs                : 65 66 68
foo_stmt             : 22
for_stmt             : 15
func_decl            : 3 4 5
global_list          : 31 32 35
global_stmt          : 12
if_stmt              : 16
matrix               : 80 86
null_stmt            : 17
number               : 82
persistent_stmt      : 13
ret                  : 50
return_stmt          : 18
semi_opt             : 4 5 7 8 40
sep                  : 42 73 77
stmt                 : 61 62
stmt_list            : 2 5 44 45 45 46 60 62 70 78 79 80
stmt_list_opt        : 3 42 43 73 74 76 77
string               : 83
switch_stmt          : 19
top                  : 3 4 5 0
try_catch            : 20
while_stmt           : 21

Parsing method: LALR

state 0

    (0) S' -> . top
    (1) top -> .
    (2) top -> . stmt_list
    (3) top -> . top func_decl stmt_list_opt
    (4) top -> . top func_decl end semi_opt
    (5) top -> . top func_decl stmt_list end semi_opt
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    FUNCTION        reduce using rule 1 (top -> .)
    $end            reduce using rule 1 (top -> .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    expr_list                      shift and go to state 27
    return_stmt                    shift and go to state 14
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    colon                          shift and go to state 28
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list                      shift and go to state 12
    persistent_stmt                shift and go to state 23
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    command                        shift and go to state 37
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    top                            shift and go to state 4
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 1

    (19) stmt -> switch_stmt .

    END             reduce using rule 19 (stmt -> switch_stmt .)
    CONTINUE        reduce using rule 19 (stmt -> switch_stmt .)
    BREAK           reduce using rule 19 (stmt -> switch_stmt .)
    GLOBAL          reduce using rule 19 (stmt -> switch_stmt .)
    PERSISTENT      reduce using rule 19 (stmt -> switch_stmt .)
    IDENTIFIER      reduce using rule 19 (stmt -> switch_stmt .)
    FOR             reduce using rule 19 (stmt -> switch_stmt .)
    IF              reduce using rule 19 (stmt -> switch_stmt .)
    SEMI            reduce using rule 19 (stmt -> switch_stmt .)
    COMMA           reduce using rule 19 (stmt -> switch_stmt .)
    RETURN          reduce using rule 19 (stmt -> switch_stmt .)
    SWITCH          reduce using rule 19 (stmt -> switch_stmt .)
    TRY             reduce using rule 19 (stmt -> switch_stmt .)
    WHILE           reduce using rule 19 (stmt -> switch_stmt .)
    NOTEQUAL        reduce using rule 19 (stmt -> switch_stmt .)
    LBRACKET        reduce using rule 19 (stmt -> switch_stmt .)
    NUMBER          reduce using rule 19 (stmt -> switch_stmt .)
    STRING          reduce using rule 19 (stmt -> switch_stmt .)
    COLON           reduce using rule 19 (stmt -> switch_stmt .)
    LBRACE          reduce using rule 19 (stmt -> switch_stmt .)
    MINUS           reduce using rule 19 (stmt -> switch_stmt .)
    PLUS            reduce using rule 19 (stmt -> switch_stmt .)
    ELSE            reduce using rule 19 (stmt -> switch_stmt .)
    ELSEIF          reduce using rule 19 (stmt -> switch_stmt .)
    FUNCTION        reduce using rule 19 (stmt -> switch_stmt .)
    $end            reduce using rule 19 (stmt -> switch_stmt .)
    CATCH           reduce using rule 19 (stmt -> switch_stmt .)
    CASE            reduce using rule 19 (stmt -> switch_stmt .)
    OTHERWISE       reduce using rule 19 (stmt -> switch_stmt .)


state 2

    (45) try_catch -> TRY . stmt_list CATCH stmt_list end
    (46) try_catch -> TRY . stmt_list end
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list                      shift and go to state 49
    persistent_stmt                shift and go to state 23
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 3

    (78) for_stmt -> FOR . IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> FOR . LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> FOR . matrix EQUALS expr SEMI stmt_list end
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET

    IDENTIFIER      shift and go to state 51
    LBRACKET        shift and go to state 52

    matrix                         shift and go to state 50

state 4

    (0) S' -> top .
    (3) top -> top . func_decl stmt_list_opt
    (4) top -> top . func_decl end semi_opt
    (5) top -> top . func_decl stmt_list end semi_opt
    (49) func_decl -> . FUNCTION IDENTIFIER args_opt SEMI
    (50) func_decl -> . FUNCTION ret EQUALS IDENTIFIER args_opt SEMI

    FUNCTION        shift and go to state 54

    func_decl                      shift and go to state 53

state 5

    (35) persistent_stmt -> PERSISTENT . global_list SEMI
    (36) persistent_stmt -> PERSISTENT . IDENTIFIER EQUALS expr SEMI
    (30) global_list -> . IDENTIFIER
    (31) global_list -> . global_list IDENTIFIER

    IDENTIFIER      shift and go to state 56

    global_list                    shift and go to state 55

state 6

    (40) switch_stmt -> SWITCH . expr semi_opt case_list end
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    colon                          shift and go to state 28
    string                         shift and go to state 42
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    expr                           shift and go to state 58

state 7

    (90) number -> NUMBER .

    OROR            reduce using rule 90 (number -> NUMBER .)
    FIELD           reduce using rule 90 (number -> NUMBER .)
    TRANSPOSE       reduce using rule 90 (number -> NUMBER .)
    LBRACE          reduce using rule 90 (number -> NUMBER .)
    LBRACKET        reduce using rule 90 (number -> NUMBER .)
    AND             reduce using rule 90 (number -> NUMBER .)
    LDIV            reduce using rule 90 (number -> NUMBER .)
    COLON           reduce using rule 90 (number -> NUMBER .)
    DIV             reduce using rule 90 (number -> NUMBER .)
    DOT             reduce using rule 90 (number -> NUMBER .)
    DOTDIV          reduce using rule 90 (number -> NUMBER .)
    DOTEXP          reduce using rule 90 (number -> NUMBER .)
    DOTMUL          reduce using rule 90 (number -> NUMBER .)
    EQUALEQUAL      reduce using rule 90 (number -> NUMBER .)
    EXP             reduce using rule 90 (number -> NUMBER .)
    GREATEREQUAL    reduce using rule 90 (number -> NUMBER .)
    GREATERTHAN     reduce using rule 90 (number -> NUMBER .)
    LESSEQUAL       reduce using rule 90 (number -> NUMBER .)
    LESSTHAN        reduce using rule 90 (number -> NUMBER .)
    MINUS           reduce using rule 90 (number -> NUMBER .)
    TIMES           reduce using rule 90 (number -> NUMBER .)
    NOTEQUAL        reduce using rule 90 (number -> NUMBER .)
    OR              reduce using rule 90 (number -> NUMBER .)
    PLUS            reduce using rule 90 (number -> NUMBER .)
    EQUALS          reduce using rule 90 (number -> NUMBER .)
    OREQUALS        reduce using rule 90 (number -> NUMBER .)
    COMMA           reduce using rule 90 (number -> NUMBER .)
    SEMI            reduce using rule 90 (number -> NUMBER .)
    RBRACE          reduce using rule 90 (number -> NUMBER .)
    RBRACKET        reduce using rule 90 (number -> NUMBER .)
    CASE            reduce using rule 90 (number -> NUMBER .)
    OTHERWISE       reduce using rule 90 (number -> NUMBER .)
    END             reduce using rule 90 (number -> NUMBER .)
    error           reduce using rule 90 (number -> NUMBER .)


state 8

    (73) if_stmt -> IF . expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> IF . expr error stmt_list_opt elseif_stmt end
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    expr2                          shift and go to state 16
    string                         shift and go to state 42
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    colon                          shift and go to state 28
    expr                           shift and go to state 59

state 9

    (9) stmt -> continue_stmt .

    END             reduce using rule 9 (stmt -> continue_stmt .)
    CONTINUE        reduce using rule 9 (stmt -> continue_stmt .)
    BREAK           reduce using rule 9 (stmt -> continue_stmt .)
    GLOBAL          reduce using rule 9 (stmt -> continue_stmt .)
    PERSISTENT      reduce using rule 9 (stmt -> continue_stmt .)
    IDENTIFIER      reduce using rule 9 (stmt -> continue_stmt .)
    FOR             reduce using rule 9 (stmt -> continue_stmt .)
    IF              reduce using rule 9 (stmt -> continue_stmt .)
    SEMI            reduce using rule 9 (stmt -> continue_stmt .)
    COMMA           reduce using rule 9 (stmt -> continue_stmt .)
    RETURN          reduce using rule 9 (stmt -> continue_stmt .)
    SWITCH          reduce using rule 9 (stmt -> continue_stmt .)
    TRY             reduce using rule 9 (stmt -> continue_stmt .)
    WHILE           reduce using rule 9 (stmt -> continue_stmt .)
    NOTEQUAL        reduce using rule 9 (stmt -> continue_stmt .)
    LBRACKET        reduce using rule 9 (stmt -> continue_stmt .)
    NUMBER          reduce using rule 9 (stmt -> continue_stmt .)
    STRING          reduce using rule 9 (stmt -> continue_stmt .)
    COLON           reduce using rule 9 (stmt -> continue_stmt .)
    LBRACE          reduce using rule 9 (stmt -> continue_stmt .)
    MINUS           reduce using rule 9 (stmt -> continue_stmt .)
    PLUS            reduce using rule 9 (stmt -> continue_stmt .)
    ELSE            reduce using rule 9 (stmt -> continue_stmt .)
    ELSEIF          reduce using rule 9 (stmt -> continue_stmt .)
    FUNCTION        reduce using rule 9 (stmt -> continue_stmt .)
    $end            reduce using rule 9 (stmt -> continue_stmt .)
    CATCH           reduce using rule 9 (stmt -> continue_stmt .)
    CASE            reduce using rule 9 (stmt -> continue_stmt .)
    OTHERWISE       reduce using rule 9 (stmt -> continue_stmt .)


state 10

    (29) command -> IDENTIFIER . args SEMI
    (81) expr -> IDENTIFIER .
    (27) args -> . arg1
    (28) args -> . args arg1
    (23) arg1 -> . STRING
    (24) arg1 -> . NUMBER
    (25) arg1 -> . IDENTIFIER
    (26) arg1 -> . GLOBAL

    OROR            reduce using rule 81 (expr -> IDENTIFIER .)
    FIELD           reduce using rule 81 (expr -> IDENTIFIER .)
    TRANSPOSE       reduce using rule 81 (expr -> IDENTIFIER .)
    LBRACE          reduce using rule 81 (expr -> IDENTIFIER .)
    LBRACKET        reduce using rule 81 (expr -> IDENTIFIER .)
    AND             reduce using rule 81 (expr -> IDENTIFIER .)
    LDIV            reduce using rule 81 (expr -> IDENTIFIER .)
    COLON           reduce using rule 81 (expr -> IDENTIFIER .)
    DIV             reduce using rule 81 (expr -> IDENTIFIER .)
    DOT             reduce using rule 81 (expr -> IDENTIFIER .)
    DOTDIV          reduce using rule 81 (expr -> IDENTIFIER .)
    DOTEXP          reduce using rule 81 (expr -> IDENTIFIER .)
    DOTMUL          reduce using rule 81 (expr -> IDENTIFIER .)
    EQUALEQUAL      reduce using rule 81 (expr -> IDENTIFIER .)
    EXP             reduce using rule 81 (expr -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 81 (expr -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 81 (expr -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 81 (expr -> IDENTIFIER .)
    LESSTHAN        reduce using rule 81 (expr -> IDENTIFIER .)
    MINUS           reduce using rule 81 (expr -> IDENTIFIER .)
    TIMES           reduce using rule 81 (expr -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 81 (expr -> IDENTIFIER .)
    OR              reduce using rule 81 (expr -> IDENTIFIER .)
    PLUS            reduce using rule 81 (expr -> IDENTIFIER .)
    EQUALS          reduce using rule 81 (expr -> IDENTIFIER .)
    OREQUALS        reduce using rule 81 (expr -> IDENTIFIER .)
    COMMA           reduce using rule 81 (expr -> IDENTIFIER .)
    SEMI            reduce using rule 81 (expr -> IDENTIFIER .)
    STRING          shift and go to state 62
    NUMBER          shift and go to state 60
    IDENTIFIER      shift and go to state 63
    GLOBAL          shift and go to state 61

    args                           shift and go to state 64
    arg1                           shift and go to state 65

state 11

    (22) stmt -> foo_stmt .

    END             reduce using rule 22 (stmt -> foo_stmt .)
    CONTINUE        reduce using rule 22 (stmt -> foo_stmt .)
    BREAK           reduce using rule 22 (stmt -> foo_stmt .)
    GLOBAL          reduce using rule 22 (stmt -> foo_stmt .)
    PERSISTENT      reduce using rule 22 (stmt -> foo_stmt .)
    IDENTIFIER      reduce using rule 22 (stmt -> foo_stmt .)
    FOR             reduce using rule 22 (stmt -> foo_stmt .)
    IF              reduce using rule 22 (stmt -> foo_stmt .)
    SEMI            reduce using rule 22 (stmt -> foo_stmt .)
    COMMA           reduce using rule 22 (stmt -> foo_stmt .)
    RETURN          reduce using rule 22 (stmt -> foo_stmt .)
    SWITCH          reduce using rule 22 (stmt -> foo_stmt .)
    TRY             reduce using rule 22 (stmt -> foo_stmt .)
    WHILE           reduce using rule 22 (stmt -> foo_stmt .)
    NOTEQUAL        reduce using rule 22 (stmt -> foo_stmt .)
    LBRACKET        reduce using rule 22 (stmt -> foo_stmt .)
    NUMBER          reduce using rule 22 (stmt -> foo_stmt .)
    STRING          reduce using rule 22 (stmt -> foo_stmt .)
    COLON           reduce using rule 22 (stmt -> foo_stmt .)
    LBRACE          reduce using rule 22 (stmt -> foo_stmt .)
    MINUS           reduce using rule 22 (stmt -> foo_stmt .)
    PLUS            reduce using rule 22 (stmt -> foo_stmt .)
    ELSE            reduce using rule 22 (stmt -> foo_stmt .)
    ELSEIF          reduce using rule 22 (stmt -> foo_stmt .)
    FUNCTION        reduce using rule 22 (stmt -> foo_stmt .)
    $end            reduce using rule 22 (stmt -> foo_stmt .)
    CATCH           reduce using rule 22 (stmt -> foo_stmt .)
    CASE            reduce using rule 22 (stmt -> foo_stmt .)
    OTHERWISE       reduce using rule 22 (stmt -> foo_stmt .)


state 12

    (2) top -> stmt_list .
    (62) stmt_list -> stmt_list . stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    FUNCTION        reduce using rule 2 (top -> stmt_list .)
    $end            reduce using rule 2 (top -> stmt_list .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    for_stmt                       shift and go to state 13
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    persistent_stmt                shift and go to state 23
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 13

    (15) stmt -> for_stmt .

    END             reduce using rule 15 (stmt -> for_stmt .)
    CONTINUE        reduce using rule 15 (stmt -> for_stmt .)
    BREAK           reduce using rule 15 (stmt -> for_stmt .)
    GLOBAL          reduce using rule 15 (stmt -> for_stmt .)
    PERSISTENT      reduce using rule 15 (stmt -> for_stmt .)
    IDENTIFIER      reduce using rule 15 (stmt -> for_stmt .)
    FOR             reduce using rule 15 (stmt -> for_stmt .)
    IF              reduce using rule 15 (stmt -> for_stmt .)
    SEMI            reduce using rule 15 (stmt -> for_stmt .)
    COMMA           reduce using rule 15 (stmt -> for_stmt .)
    RETURN          reduce using rule 15 (stmt -> for_stmt .)
    SWITCH          reduce using rule 15 (stmt -> for_stmt .)
    TRY             reduce using rule 15 (stmt -> for_stmt .)
    WHILE           reduce using rule 15 (stmt -> for_stmt .)
    NOTEQUAL        reduce using rule 15 (stmt -> for_stmt .)
    LBRACKET        reduce using rule 15 (stmt -> for_stmt .)
    NUMBER          reduce using rule 15 (stmt -> for_stmt .)
    STRING          reduce using rule 15 (stmt -> for_stmt .)
    COLON           reduce using rule 15 (stmt -> for_stmt .)
    LBRACE          reduce using rule 15 (stmt -> for_stmt .)
    MINUS           reduce using rule 15 (stmt -> for_stmt .)
    PLUS            reduce using rule 15 (stmt -> for_stmt .)
    ELSE            reduce using rule 15 (stmt -> for_stmt .)
    ELSEIF          reduce using rule 15 (stmt -> for_stmt .)
    FUNCTION        reduce using rule 15 (stmt -> for_stmt .)
    $end            reduce using rule 15 (stmt -> for_stmt .)
    CATCH           reduce using rule 15 (stmt -> for_stmt .)
    CASE            reduce using rule 15 (stmt -> for_stmt .)
    OTHERWISE       reduce using rule 15 (stmt -> for_stmt .)


state 14

    (18) stmt -> return_stmt .

    END             reduce using rule 18 (stmt -> return_stmt .)
    CONTINUE        reduce using rule 18 (stmt -> return_stmt .)
    BREAK           reduce using rule 18 (stmt -> return_stmt .)
    GLOBAL          reduce using rule 18 (stmt -> return_stmt .)
    PERSISTENT      reduce using rule 18 (stmt -> return_stmt .)
    IDENTIFIER      reduce using rule 18 (stmt -> return_stmt .)
    FOR             reduce using rule 18 (stmt -> return_stmt .)
    IF              reduce using rule 18 (stmt -> return_stmt .)
    SEMI            reduce using rule 18 (stmt -> return_stmt .)
    COMMA           reduce using rule 18 (stmt -> return_stmt .)
    RETURN          reduce using rule 18 (stmt -> return_stmt .)
    SWITCH          reduce using rule 18 (stmt -> return_stmt .)
    TRY             reduce using rule 18 (stmt -> return_stmt .)
    WHILE           reduce using rule 18 (stmt -> return_stmt .)
    NOTEQUAL        reduce using rule 18 (stmt -> return_stmt .)
    LBRACKET        reduce using rule 18 (stmt -> return_stmt .)
    NUMBER          reduce using rule 18 (stmt -> return_stmt .)
    STRING          reduce using rule 18 (stmt -> return_stmt .)
    COLON           reduce using rule 18 (stmt -> return_stmt .)
    LBRACE          reduce using rule 18 (stmt -> return_stmt .)
    MINUS           reduce using rule 18 (stmt -> return_stmt .)
    PLUS            reduce using rule 18 (stmt -> return_stmt .)
    ELSE            reduce using rule 18 (stmt -> return_stmt .)
    ELSEIF          reduce using rule 18 (stmt -> return_stmt .)
    FUNCTION        reduce using rule 18 (stmt -> return_stmt .)
    $end            reduce using rule 18 (stmt -> return_stmt .)
    CATCH           reduce using rule 18 (stmt -> return_stmt .)
    CASE            reduce using rule 18 (stmt -> return_stmt .)
    OTHERWISE       reduce using rule 18 (stmt -> return_stmt .)


state 15

    (70) while_stmt -> WHILE . expr SEMI stmt_list end
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    expr2                          shift and go to state 16
    string                         shift and go to state 42
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    colon                          shift and go to state 28
    expr                           shift and go to state 67

state 16

    (88) expr -> expr2 .

    FIELD           reduce using rule 88 (expr -> expr2 .)
    TRANSPOSE       reduce using rule 88 (expr -> expr2 .)
    LBRACE          reduce using rule 88 (expr -> expr2 .)
    LBRACKET        reduce using rule 88 (expr -> expr2 .)
    AND             reduce using rule 88 (expr -> expr2 .)
    LDIV            reduce using rule 88 (expr -> expr2 .)
    COLON           reduce using rule 88 (expr -> expr2 .)
    DIV             reduce using rule 88 (expr -> expr2 .)
    DOT             reduce using rule 88 (expr -> expr2 .)
    DOTDIV          reduce using rule 88 (expr -> expr2 .)
    DOTEXP          reduce using rule 88 (expr -> expr2 .)
    DOTMUL          reduce using rule 88 (expr -> expr2 .)
    EQUALEQUAL      reduce using rule 88 (expr -> expr2 .)
    EXP             reduce using rule 88 (expr -> expr2 .)
    GREATEREQUAL    reduce using rule 88 (expr -> expr2 .)
    GREATERTHAN     reduce using rule 88 (expr -> expr2 .)
    LESSEQUAL       reduce using rule 88 (expr -> expr2 .)
    LESSTHAN        reduce using rule 88 (expr -> expr2 .)
    MINUS           reduce using rule 88 (expr -> expr2 .)
    TIMES           reduce using rule 88 (expr -> expr2 .)
    NOTEQUAL        reduce using rule 88 (expr -> expr2 .)
    OR              reduce using rule 88 (expr -> expr2 .)
    OROR            reduce using rule 88 (expr -> expr2 .)
    PLUS            reduce using rule 88 (expr -> expr2 .)
    EQUALS          reduce using rule 88 (expr -> expr2 .)
    OREQUALS        reduce using rule 88 (expr -> expr2 .)
    COMMA           reduce using rule 88 (expr -> expr2 .)
    SEMI            reduce using rule 88 (expr -> expr2 .)
    CASE            reduce using rule 88 (expr -> expr2 .)
    OTHERWISE       reduce using rule 88 (expr -> expr2 .)
    END             reduce using rule 88 (expr -> expr2 .)
    error           reduce using rule 88 (expr -> expr2 .)
    RBRACKET        reduce using rule 88 (expr -> expr2 .)
    RBRACE          reduce using rule 88 (expr -> expr2 .)


state 17

    (39) break_stmt -> BREAK . SEMI

    SEMI            shift and go to state 68


state 18

    (20) stmt -> try_catch .

    END             reduce using rule 20 (stmt -> try_catch .)
    CONTINUE        reduce using rule 20 (stmt -> try_catch .)
    BREAK           reduce using rule 20 (stmt -> try_catch .)
    GLOBAL          reduce using rule 20 (stmt -> try_catch .)
    PERSISTENT      reduce using rule 20 (stmt -> try_catch .)
    IDENTIFIER      reduce using rule 20 (stmt -> try_catch .)
    FOR             reduce using rule 20 (stmt -> try_catch .)
    IF              reduce using rule 20 (stmt -> try_catch .)
    SEMI            reduce using rule 20 (stmt -> try_catch .)
    COMMA           reduce using rule 20 (stmt -> try_catch .)
    RETURN          reduce using rule 20 (stmt -> try_catch .)
    SWITCH          reduce using rule 20 (stmt -> try_catch .)
    TRY             reduce using rule 20 (stmt -> try_catch .)
    WHILE           reduce using rule 20 (stmt -> try_catch .)
    NOTEQUAL        reduce using rule 20 (stmt -> try_catch .)
    LBRACKET        reduce using rule 20 (stmt -> try_catch .)
    NUMBER          reduce using rule 20 (stmt -> try_catch .)
    STRING          reduce using rule 20 (stmt -> try_catch .)
    COLON           reduce using rule 20 (stmt -> try_catch .)
    LBRACE          reduce using rule 20 (stmt -> try_catch .)
    MINUS           reduce using rule 20 (stmt -> try_catch .)
    PLUS            reduce using rule 20 (stmt -> try_catch .)
    ELSE            reduce using rule 20 (stmt -> try_catch .)
    ELSEIF          reduce using rule 20 (stmt -> try_catch .)
    FUNCTION        reduce using rule 20 (stmt -> try_catch .)
    $end            reduce using rule 20 (stmt -> try_catch .)
    CATCH           reduce using rule 20 (stmt -> try_catch .)
    CASE            reduce using rule 20 (stmt -> try_catch .)
    OTHERWISE       reduce using rule 20 (stmt -> try_catch .)


state 19

    (61) stmt_list -> stmt .

    CONTINUE        reduce using rule 61 (stmt_list -> stmt .)
    BREAK           reduce using rule 61 (stmt_list -> stmt .)
    GLOBAL          reduce using rule 61 (stmt_list -> stmt .)
    PERSISTENT      reduce using rule 61 (stmt_list -> stmt .)
    IDENTIFIER      reduce using rule 61 (stmt_list -> stmt .)
    FOR             reduce using rule 61 (stmt_list -> stmt .)
    IF              reduce using rule 61 (stmt_list -> stmt .)
    SEMI            reduce using rule 61 (stmt_list -> stmt .)
    COMMA           reduce using rule 61 (stmt_list -> stmt .)
    RETURN          reduce using rule 61 (stmt_list -> stmt .)
    SWITCH          reduce using rule 61 (stmt_list -> stmt .)
    TRY             reduce using rule 61 (stmt_list -> stmt .)
    WHILE           reduce using rule 61 (stmt_list -> stmt .)
    NOTEQUAL        reduce using rule 61 (stmt_list -> stmt .)
    LBRACKET        reduce using rule 61 (stmt_list -> stmt .)
    NUMBER          reduce using rule 61 (stmt_list -> stmt .)
    STRING          reduce using rule 61 (stmt_list -> stmt .)
    COLON           reduce using rule 61 (stmt_list -> stmt .)
    LBRACE          reduce using rule 61 (stmt_list -> stmt .)
    MINUS           reduce using rule 61 (stmt_list -> stmt .)
    PLUS            reduce using rule 61 (stmt_list -> stmt .)
    ELSE            reduce using rule 61 (stmt_list -> stmt .)
    ELSEIF          reduce using rule 61 (stmt_list -> stmt .)
    END             reduce using rule 61 (stmt_list -> stmt .)
    CASE            reduce using rule 61 (stmt_list -> stmt .)
    OTHERWISE       reduce using rule 61 (stmt_list -> stmt .)
    CATCH           reduce using rule 61 (stmt_list -> stmt .)
    FUNCTION        reduce using rule 61 (stmt_list -> stmt .)
    $end            reduce using rule 61 (stmt_list -> stmt .)


state 20

    (37) return_stmt -> RETURN . SEMI

    SEMI            shift and go to state 69


state 21

    (89) expr -> expr1 .

    FIELD           reduce using rule 89 (expr -> expr1 .)
    TRANSPOSE       reduce using rule 89 (expr -> expr1 .)
    LBRACE          reduce using rule 89 (expr -> expr1 .)
    LBRACKET        reduce using rule 89 (expr -> expr1 .)
    AND             reduce using rule 89 (expr -> expr1 .)
    LDIV            reduce using rule 89 (expr -> expr1 .)
    COLON           reduce using rule 89 (expr -> expr1 .)
    DIV             reduce using rule 89 (expr -> expr1 .)
    DOT             reduce using rule 89 (expr -> expr1 .)
    DOTDIV          reduce using rule 89 (expr -> expr1 .)
    DOTEXP          reduce using rule 89 (expr -> expr1 .)
    DOTMUL          reduce using rule 89 (expr -> expr1 .)
    EQUALEQUAL      reduce using rule 89 (expr -> expr1 .)
    EXP             reduce using rule 89 (expr -> expr1 .)
    GREATEREQUAL    reduce using rule 89 (expr -> expr1 .)
    GREATERTHAN     reduce using rule 89 (expr -> expr1 .)
    LESSEQUAL       reduce using rule 89 (expr -> expr1 .)
    LESSTHAN        reduce using rule 89 (expr -> expr1 .)
    MINUS           reduce using rule 89 (expr -> expr1 .)
    TIMES           reduce using rule 89 (expr -> expr1 .)
    NOTEQUAL        reduce using rule 89 (expr -> expr1 .)
    OR              reduce using rule 89 (expr -> expr1 .)
    OROR            reduce using rule 89 (expr -> expr1 .)
    PLUS            reduce using rule 89 (expr -> expr1 .)
    EQUALS          reduce using rule 89 (expr -> expr1 .)
    OREQUALS        reduce using rule 89 (expr -> expr1 .)
    COMMA           reduce using rule 89 (expr -> expr1 .)
    SEMI            reduce using rule 89 (expr -> expr1 .)
    CASE            reduce using rule 89 (expr -> expr1 .)
    OTHERWISE       reduce using rule 89 (expr -> expr1 .)
    END             reduce using rule 89 (expr -> expr1 .)
    error           reduce using rule 89 (expr -> expr1 .)
    RBRACKET        reduce using rule 89 (expr -> expr1 .)
    RBRACE          reduce using rule 89 (expr -> expr1 .)


state 22

    (17) stmt -> null_stmt .

    END             reduce using rule 17 (stmt -> null_stmt .)
    CONTINUE        reduce using rule 17 (stmt -> null_stmt .)
    BREAK           reduce using rule 17 (stmt -> null_stmt .)
    GLOBAL          reduce using rule 17 (stmt -> null_stmt .)
    PERSISTENT      reduce using rule 17 (stmt -> null_stmt .)
    IDENTIFIER      reduce using rule 17 (stmt -> null_stmt .)
    FOR             reduce using rule 17 (stmt -> null_stmt .)
    IF              reduce using rule 17 (stmt -> null_stmt .)
    SEMI            reduce using rule 17 (stmt -> null_stmt .)
    COMMA           reduce using rule 17 (stmt -> null_stmt .)
    RETURN          reduce using rule 17 (stmt -> null_stmt .)
    SWITCH          reduce using rule 17 (stmt -> null_stmt .)
    TRY             reduce using rule 17 (stmt -> null_stmt .)
    WHILE           reduce using rule 17 (stmt -> null_stmt .)
    NOTEQUAL        reduce using rule 17 (stmt -> null_stmt .)
    LBRACKET        reduce using rule 17 (stmt -> null_stmt .)
    NUMBER          reduce using rule 17 (stmt -> null_stmt .)
    STRING          reduce using rule 17 (stmt -> null_stmt .)
    COLON           reduce using rule 17 (stmt -> null_stmt .)
    LBRACE          reduce using rule 17 (stmt -> null_stmt .)
    MINUS           reduce using rule 17 (stmt -> null_stmt .)
    PLUS            reduce using rule 17 (stmt -> null_stmt .)
    ELSE            reduce using rule 17 (stmt -> null_stmt .)
    ELSEIF          reduce using rule 17 (stmt -> null_stmt .)
    FUNCTION        reduce using rule 17 (stmt -> null_stmt .)
    $end            reduce using rule 17 (stmt -> null_stmt .)
    CATCH           reduce using rule 17 (stmt -> null_stmt .)
    CASE            reduce using rule 17 (stmt -> null_stmt .)
    OTHERWISE       reduce using rule 17 (stmt -> null_stmt .)


state 23

    (13) stmt -> persistent_stmt .

    END             reduce using rule 13 (stmt -> persistent_stmt .)
    CONTINUE        reduce using rule 13 (stmt -> persistent_stmt .)
    BREAK           reduce using rule 13 (stmt -> persistent_stmt .)
    GLOBAL          reduce using rule 13 (stmt -> persistent_stmt .)
    PERSISTENT      reduce using rule 13 (stmt -> persistent_stmt .)
    IDENTIFIER      reduce using rule 13 (stmt -> persistent_stmt .)
    FOR             reduce using rule 13 (stmt -> persistent_stmt .)
    IF              reduce using rule 13 (stmt -> persistent_stmt .)
    SEMI            reduce using rule 13 (stmt -> persistent_stmt .)
    COMMA           reduce using rule 13 (stmt -> persistent_stmt .)
    RETURN          reduce using rule 13 (stmt -> persistent_stmt .)
    SWITCH          reduce using rule 13 (stmt -> persistent_stmt .)
    TRY             reduce using rule 13 (stmt -> persistent_stmt .)
    WHILE           reduce using rule 13 (stmt -> persistent_stmt .)
    NOTEQUAL        reduce using rule 13 (stmt -> persistent_stmt .)
    LBRACKET        reduce using rule 13 (stmt -> persistent_stmt .)
    NUMBER          reduce using rule 13 (stmt -> persistent_stmt .)
    STRING          reduce using rule 13 (stmt -> persistent_stmt .)
    COLON           reduce using rule 13 (stmt -> persistent_stmt .)
    LBRACE          reduce using rule 13 (stmt -> persistent_stmt .)
    MINUS           reduce using rule 13 (stmt -> persistent_stmt .)
    PLUS            reduce using rule 13 (stmt -> persistent_stmt .)
    ELSE            reduce using rule 13 (stmt -> persistent_stmt .)
    ELSEIF          reduce using rule 13 (stmt -> persistent_stmt .)
    FUNCTION        reduce using rule 13 (stmt -> persistent_stmt .)
    $end            reduce using rule 13 (stmt -> persistent_stmt .)
    CATCH           reduce using rule 13 (stmt -> persistent_stmt .)
    CASE            reduce using rule 13 (stmt -> persistent_stmt .)
    OTHERWISE       reduce using rule 13 (stmt -> persistent_stmt .)


state 24

    (34) foo_stmt -> expr . OROR expr SEMI
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (67) exprs -> expr .
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    OROR            shift and go to state 86
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    COMMA           reduce using rule 67 (exprs -> expr .)
    SEMI            reduce using rule 67 (exprs -> expr .)
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85


state 25

    (87) expr -> cellarray .

    FIELD           reduce using rule 87 (expr -> cellarray .)
    TRANSPOSE       reduce using rule 87 (expr -> cellarray .)
    LBRACE          reduce using rule 87 (expr -> cellarray .)
    LBRACKET        reduce using rule 87 (expr -> cellarray .)
    AND             reduce using rule 87 (expr -> cellarray .)
    LDIV            reduce using rule 87 (expr -> cellarray .)
    COLON           reduce using rule 87 (expr -> cellarray .)
    DIV             reduce using rule 87 (expr -> cellarray .)
    DOT             reduce using rule 87 (expr -> cellarray .)
    DOTDIV          reduce using rule 87 (expr -> cellarray .)
    DOTEXP          reduce using rule 87 (expr -> cellarray .)
    DOTMUL          reduce using rule 87 (expr -> cellarray .)
    EQUALEQUAL      reduce using rule 87 (expr -> cellarray .)
    EXP             reduce using rule 87 (expr -> cellarray .)
    GREATEREQUAL    reduce using rule 87 (expr -> cellarray .)
    GREATERTHAN     reduce using rule 87 (expr -> cellarray .)
    LESSEQUAL       reduce using rule 87 (expr -> cellarray .)
    LESSTHAN        reduce using rule 87 (expr -> cellarray .)
    MINUS           reduce using rule 87 (expr -> cellarray .)
    TIMES           reduce using rule 87 (expr -> cellarray .)
    NOTEQUAL        reduce using rule 87 (expr -> cellarray .)
    OR              reduce using rule 87 (expr -> cellarray .)
    OROR            reduce using rule 87 (expr -> cellarray .)
    PLUS            reduce using rule 87 (expr -> cellarray .)
    EQUALS          reduce using rule 87 (expr -> cellarray .)
    OREQUALS        reduce using rule 87 (expr -> cellarray .)
    COMMA           reduce using rule 87 (expr -> cellarray .)
    SEMI            reduce using rule 87 (expr -> cellarray .)
    CASE            reduce using rule 87 (expr -> cellarray .)
    OTHERWISE       reduce using rule 87 (expr -> cellarray .)
    END             reduce using rule 87 (expr -> cellarray .)
    error           reduce using rule 87 (expr -> cellarray .)
    RBRACKET        reduce using rule 87 (expr -> cellarray .)
    RBRACE          reduce using rule 87 (expr -> cellarray .)


state 26

    (94) expr1 -> MINUS . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 96

state 27

    (69) expr_stmt -> expr_list . SEMI

    SEMI            shift and go to state 97


state 28

    (84) expr -> colon .

    FIELD           reduce using rule 84 (expr -> colon .)
    TRANSPOSE       reduce using rule 84 (expr -> colon .)
    LBRACE          reduce using rule 84 (expr -> colon .)
    LBRACKET        reduce using rule 84 (expr -> colon .)
    AND             reduce using rule 84 (expr -> colon .)
    LDIV            reduce using rule 84 (expr -> colon .)
    COLON           reduce using rule 84 (expr -> colon .)
    DIV             reduce using rule 84 (expr -> colon .)
    DOT             reduce using rule 84 (expr -> colon .)
    DOTDIV          reduce using rule 84 (expr -> colon .)
    DOTEXP          reduce using rule 84 (expr -> colon .)
    DOTMUL          reduce using rule 84 (expr -> colon .)
    EQUALEQUAL      reduce using rule 84 (expr -> colon .)
    EXP             reduce using rule 84 (expr -> colon .)
    GREATEREQUAL    reduce using rule 84 (expr -> colon .)
    GREATERTHAN     reduce using rule 84 (expr -> colon .)
    LESSEQUAL       reduce using rule 84 (expr -> colon .)
    LESSTHAN        reduce using rule 84 (expr -> colon .)
    MINUS           reduce using rule 84 (expr -> colon .)
    TIMES           reduce using rule 84 (expr -> colon .)
    NOTEQUAL        reduce using rule 84 (expr -> colon .)
    OR              reduce using rule 84 (expr -> colon .)
    OROR            reduce using rule 84 (expr -> colon .)
    PLUS            reduce using rule 84 (expr -> colon .)
    EQUALS          reduce using rule 84 (expr -> colon .)
    OREQUALS        reduce using rule 84 (expr -> colon .)
    COMMA           reduce using rule 84 (expr -> colon .)
    SEMI            reduce using rule 84 (expr -> colon .)
    CASE            reduce using rule 84 (expr -> colon .)
    OTHERWISE       reduce using rule 84 (expr -> colon .)
    END             reduce using rule 84 (expr -> colon .)
    error           reduce using rule 84 (expr -> colon .)
    RBRACKET        reduce using rule 84 (expr -> colon .)
    RBRACE          reduce using rule 84 (expr -> colon .)


state 29

    (10) stmt -> break_stmt .

    END             reduce using rule 10 (stmt -> break_stmt .)
    CONTINUE        reduce using rule 10 (stmt -> break_stmt .)
    BREAK           reduce using rule 10 (stmt -> break_stmt .)
    GLOBAL          reduce using rule 10 (stmt -> break_stmt .)
    PERSISTENT      reduce using rule 10 (stmt -> break_stmt .)
    IDENTIFIER      reduce using rule 10 (stmt -> break_stmt .)
    FOR             reduce using rule 10 (stmt -> break_stmt .)
    IF              reduce using rule 10 (stmt -> break_stmt .)
    SEMI            reduce using rule 10 (stmt -> break_stmt .)
    COMMA           reduce using rule 10 (stmt -> break_stmt .)
    RETURN          reduce using rule 10 (stmt -> break_stmt .)
    SWITCH          reduce using rule 10 (stmt -> break_stmt .)
    TRY             reduce using rule 10 (stmt -> break_stmt .)
    WHILE           reduce using rule 10 (stmt -> break_stmt .)
    NOTEQUAL        reduce using rule 10 (stmt -> break_stmt .)
    LBRACKET        reduce using rule 10 (stmt -> break_stmt .)
    NUMBER          reduce using rule 10 (stmt -> break_stmt .)
    STRING          reduce using rule 10 (stmt -> break_stmt .)
    COLON           reduce using rule 10 (stmt -> break_stmt .)
    LBRACE          reduce using rule 10 (stmt -> break_stmt .)
    MINUS           reduce using rule 10 (stmt -> break_stmt .)
    PLUS            reduce using rule 10 (stmt -> break_stmt .)
    ELSE            reduce using rule 10 (stmt -> break_stmt .)
    ELSEIF          reduce using rule 10 (stmt -> break_stmt .)
    FUNCTION        reduce using rule 10 (stmt -> break_stmt .)
    $end            reduce using rule 10 (stmt -> break_stmt .)
    CATCH           reduce using rule 10 (stmt -> break_stmt .)
    CASE            reduce using rule 10 (stmt -> break_stmt .)
    OTHERWISE       reduce using rule 10 (stmt -> break_stmt .)


state 30

    (12) stmt -> global_stmt .

    END             reduce using rule 12 (stmt -> global_stmt .)
    CONTINUE        reduce using rule 12 (stmt -> global_stmt .)
    BREAK           reduce using rule 12 (stmt -> global_stmt .)
    GLOBAL          reduce using rule 12 (stmt -> global_stmt .)
    PERSISTENT      reduce using rule 12 (stmt -> global_stmt .)
    IDENTIFIER      reduce using rule 12 (stmt -> global_stmt .)
    FOR             reduce using rule 12 (stmt -> global_stmt .)
    IF              reduce using rule 12 (stmt -> global_stmt .)
    SEMI            reduce using rule 12 (stmt -> global_stmt .)
    COMMA           reduce using rule 12 (stmt -> global_stmt .)
    RETURN          reduce using rule 12 (stmt -> global_stmt .)
    SWITCH          reduce using rule 12 (stmt -> global_stmt .)
    TRY             reduce using rule 12 (stmt -> global_stmt .)
    WHILE           reduce using rule 12 (stmt -> global_stmt .)
    NOTEQUAL        reduce using rule 12 (stmt -> global_stmt .)
    LBRACKET        reduce using rule 12 (stmt -> global_stmt .)
    NUMBER          reduce using rule 12 (stmt -> global_stmt .)
    STRING          reduce using rule 12 (stmt -> global_stmt .)
    COLON           reduce using rule 12 (stmt -> global_stmt .)
    LBRACE          reduce using rule 12 (stmt -> global_stmt .)
    MINUS           reduce using rule 12 (stmt -> global_stmt .)
    PLUS            reduce using rule 12 (stmt -> global_stmt .)
    ELSE            reduce using rule 12 (stmt -> global_stmt .)
    ELSEIF          reduce using rule 12 (stmt -> global_stmt .)
    FUNCTION        reduce using rule 12 (stmt -> global_stmt .)
    $end            reduce using rule 12 (stmt -> global_stmt .)
    CATCH           reduce using rule 12 (stmt -> global_stmt .)
    CASE            reduce using rule 12 (stmt -> global_stmt .)
    OTHERWISE       reduce using rule 12 (stmt -> global_stmt .)


state 31

    (65) expr_list -> exprs .
    (66) expr_list -> exprs . COMMA
    (68) exprs -> exprs . COMMA expr

    SEMI            reduce using rule 65 (expr_list -> exprs .)
    RBRACKET        reduce using rule 65 (expr_list -> exprs .)
    RBRACE          reduce using rule 65 (expr_list -> exprs .)
    COMMA           shift and go to state 98


state 32

    (21) stmt -> while_stmt .

    END             reduce using rule 21 (stmt -> while_stmt .)
    CONTINUE        reduce using rule 21 (stmt -> while_stmt .)
    BREAK           reduce using rule 21 (stmt -> while_stmt .)
    GLOBAL          reduce using rule 21 (stmt -> while_stmt .)
    PERSISTENT      reduce using rule 21 (stmt -> while_stmt .)
    IDENTIFIER      reduce using rule 21 (stmt -> while_stmt .)
    FOR             reduce using rule 21 (stmt -> while_stmt .)
    IF              reduce using rule 21 (stmt -> while_stmt .)
    SEMI            reduce using rule 21 (stmt -> while_stmt .)
    COMMA           reduce using rule 21 (stmt -> while_stmt .)
    RETURN          reduce using rule 21 (stmt -> while_stmt .)
    SWITCH          reduce using rule 21 (stmt -> while_stmt .)
    TRY             reduce using rule 21 (stmt -> while_stmt .)
    WHILE           reduce using rule 21 (stmt -> while_stmt .)
    NOTEQUAL        reduce using rule 21 (stmt -> while_stmt .)
    LBRACKET        reduce using rule 21 (stmt -> while_stmt .)
    NUMBER          reduce using rule 21 (stmt -> while_stmt .)
    STRING          reduce using rule 21 (stmt -> while_stmt .)
    COLON           reduce using rule 21 (stmt -> while_stmt .)
    LBRACE          reduce using rule 21 (stmt -> while_stmt .)
    MINUS           reduce using rule 21 (stmt -> while_stmt .)
    PLUS            reduce using rule 21 (stmt -> while_stmt .)
    ELSE            reduce using rule 21 (stmt -> while_stmt .)
    ELSEIF          reduce using rule 21 (stmt -> while_stmt .)
    FUNCTION        reduce using rule 21 (stmt -> while_stmt .)
    $end            reduce using rule 21 (stmt -> while_stmt .)
    CATCH           reduce using rule 21 (stmt -> while_stmt .)
    CASE            reduce using rule 21 (stmt -> while_stmt .)
    OTHERWISE       reduce using rule 21 (stmt -> while_stmt .)


state 33

    (106) expr -> LBRACKET . expr RBRACKET
    (101) matrix -> LBRACKET . RBRACKET
    (102) matrix -> LBRACKET . concat_list RBRACKET
    (103) matrix -> LBRACKET . concat_list SEMI RBRACKET
    (104) matrix -> LBRACKET . expr_list RBRACKET
    (105) matrix -> LBRACKET . expr_list SEMI RBRACKET
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (63) concat_list -> . expr_list SEMI expr_list
    (64) concat_list -> . concat_list SEMI expr_list
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr

    RBRACKET        shift and go to state 99
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    concat_list                    shift and go to state 100
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    expr_list                      shift and go to state 102
    colon                          shift and go to state 28
    matrix                         shift and go to state 43
    exprs                          shift and go to state 31
    expr                           shift and go to state 101

state 34

    (11) stmt -> expr_stmt .

    END             reduce using rule 11 (stmt -> expr_stmt .)
    CONTINUE        reduce using rule 11 (stmt -> expr_stmt .)
    BREAK           reduce using rule 11 (stmt -> expr_stmt .)
    GLOBAL          reduce using rule 11 (stmt -> expr_stmt .)
    PERSISTENT      reduce using rule 11 (stmt -> expr_stmt .)
    IDENTIFIER      reduce using rule 11 (stmt -> expr_stmt .)
    FOR             reduce using rule 11 (stmt -> expr_stmt .)
    IF              reduce using rule 11 (stmt -> expr_stmt .)
    SEMI            reduce using rule 11 (stmt -> expr_stmt .)
    COMMA           reduce using rule 11 (stmt -> expr_stmt .)
    RETURN          reduce using rule 11 (stmt -> expr_stmt .)
    SWITCH          reduce using rule 11 (stmt -> expr_stmt .)
    TRY             reduce using rule 11 (stmt -> expr_stmt .)
    WHILE           reduce using rule 11 (stmt -> expr_stmt .)
    NOTEQUAL        reduce using rule 11 (stmt -> expr_stmt .)
    LBRACKET        reduce using rule 11 (stmt -> expr_stmt .)
    NUMBER          reduce using rule 11 (stmt -> expr_stmt .)
    STRING          reduce using rule 11 (stmt -> expr_stmt .)
    COLON           reduce using rule 11 (stmt -> expr_stmt .)
    LBRACE          reduce using rule 11 (stmt -> expr_stmt .)
    MINUS           reduce using rule 11 (stmt -> expr_stmt .)
    PLUS            reduce using rule 11 (stmt -> expr_stmt .)
    ELSE            reduce using rule 11 (stmt -> expr_stmt .)
    ELSEIF          reduce using rule 11 (stmt -> expr_stmt .)
    FUNCTION        reduce using rule 11 (stmt -> expr_stmt .)
    $end            reduce using rule 11 (stmt -> expr_stmt .)
    CATCH           reduce using rule 11 (stmt -> expr_stmt .)
    CASE            reduce using rule 11 (stmt -> expr_stmt .)
    OTHERWISE       reduce using rule 11 (stmt -> expr_stmt .)


state 35

    (48) null_stmt -> COMMA .

    CONTINUE        reduce using rule 48 (null_stmt -> COMMA .)
    BREAK           reduce using rule 48 (null_stmt -> COMMA .)
    GLOBAL          reduce using rule 48 (null_stmt -> COMMA .)
    PERSISTENT      reduce using rule 48 (null_stmt -> COMMA .)
    IDENTIFIER      reduce using rule 48 (null_stmt -> COMMA .)
    FOR             reduce using rule 48 (null_stmt -> COMMA .)
    IF              reduce using rule 48 (null_stmt -> COMMA .)
    SEMI            reduce using rule 48 (null_stmt -> COMMA .)
    COMMA           reduce using rule 48 (null_stmt -> COMMA .)
    RETURN          reduce using rule 48 (null_stmt -> COMMA .)
    SWITCH          reduce using rule 48 (null_stmt -> COMMA .)
    TRY             reduce using rule 48 (null_stmt -> COMMA .)
    WHILE           reduce using rule 48 (null_stmt -> COMMA .)
    NOTEQUAL        reduce using rule 48 (null_stmt -> COMMA .)
    LBRACKET        reduce using rule 48 (null_stmt -> COMMA .)
    NUMBER          reduce using rule 48 (null_stmt -> COMMA .)
    STRING          reduce using rule 48 (null_stmt -> COMMA .)
    COLON           reduce using rule 48 (null_stmt -> COMMA .)
    LBRACE          reduce using rule 48 (null_stmt -> COMMA .)
    MINUS           reduce using rule 48 (null_stmt -> COMMA .)
    PLUS            reduce using rule 48 (null_stmt -> COMMA .)
    ELSE            reduce using rule 48 (null_stmt -> COMMA .)
    ELSEIF          reduce using rule 48 (null_stmt -> COMMA .)
    END             reduce using rule 48 (null_stmt -> COMMA .)
    CASE            reduce using rule 48 (null_stmt -> COMMA .)
    OTHERWISE       reduce using rule 48 (null_stmt -> COMMA .)
    FUNCTION        reduce using rule 48 (null_stmt -> COMMA .)
    $end            reduce using rule 48 (null_stmt -> COMMA .)
    CATCH           reduce using rule 48 (null_stmt -> COMMA .)


state 36

    (32) global_stmt -> GLOBAL . global_list SEMI
    (33) global_stmt -> GLOBAL . IDENTIFIER EQUALS expr SEMI
    (30) global_list -> . IDENTIFIER
    (31) global_list -> . global_list IDENTIFIER

    IDENTIFIER      shift and go to state 103

    global_list                    shift and go to state 104

state 37

    (14) stmt -> command .

    END             reduce using rule 14 (stmt -> command .)
    CONTINUE        reduce using rule 14 (stmt -> command .)
    BREAK           reduce using rule 14 (stmt -> command .)
    GLOBAL          reduce using rule 14 (stmt -> command .)
    PERSISTENT      reduce using rule 14 (stmt -> command .)
    IDENTIFIER      reduce using rule 14 (stmt -> command .)
    FOR             reduce using rule 14 (stmt -> command .)
    IF              reduce using rule 14 (stmt -> command .)
    SEMI            reduce using rule 14 (stmt -> command .)
    COMMA           reduce using rule 14 (stmt -> command .)
    RETURN          reduce using rule 14 (stmt -> command .)
    SWITCH          reduce using rule 14 (stmt -> command .)
    TRY             reduce using rule 14 (stmt -> command .)
    WHILE           reduce using rule 14 (stmt -> command .)
    NOTEQUAL        reduce using rule 14 (stmt -> command .)
    LBRACKET        reduce using rule 14 (stmt -> command .)
    NUMBER          reduce using rule 14 (stmt -> command .)
    STRING          reduce using rule 14 (stmt -> command .)
    COLON           reduce using rule 14 (stmt -> command .)
    LBRACE          reduce using rule 14 (stmt -> command .)
    MINUS           reduce using rule 14 (stmt -> command .)
    PLUS            reduce using rule 14 (stmt -> command .)
    ELSE            reduce using rule 14 (stmt -> command .)
    ELSEIF          reduce using rule 14 (stmt -> command .)
    FUNCTION        reduce using rule 14 (stmt -> command .)
    $end            reduce using rule 14 (stmt -> command .)
    CATCH           reduce using rule 14 (stmt -> command .)
    CASE            reduce using rule 14 (stmt -> command .)
    OTHERWISE       reduce using rule 14 (stmt -> command .)


state 38

    (97) cellarray -> LBRACE . RBRACE
    (98) cellarray -> LBRACE . expr_list RBRACE
    (99) cellarray -> LBRACE . concat_list RBRACE
    (100) cellarray -> LBRACE . concat_list SEMI RBRACE
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (63) concat_list -> . expr_list SEMI expr_list
    (64) concat_list -> . concat_list SEMI expr_list
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    RBRACE          shift and go to state 105
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    exprs                          shift and go to state 31
    cellarray                      shift and go to state 25
    concat_list                    shift and go to state 106
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    expr_list                      shift and go to state 108
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    matrix                         shift and go to state 43
    expr                           shift and go to state 107

state 39

    (92) string -> STRING .

    FIELD           reduce using rule 92 (string -> STRING .)
    TRANSPOSE       reduce using rule 92 (string -> STRING .)
    LBRACE          reduce using rule 92 (string -> STRING .)
    LBRACKET        reduce using rule 92 (string -> STRING .)
    AND             reduce using rule 92 (string -> STRING .)
    LDIV            reduce using rule 92 (string -> STRING .)
    COLON           reduce using rule 92 (string -> STRING .)
    DIV             reduce using rule 92 (string -> STRING .)
    DOT             reduce using rule 92 (string -> STRING .)
    DOTDIV          reduce using rule 92 (string -> STRING .)
    DOTEXP          reduce using rule 92 (string -> STRING .)
    DOTMUL          reduce using rule 92 (string -> STRING .)
    EQUALEQUAL      reduce using rule 92 (string -> STRING .)
    EXP             reduce using rule 92 (string -> STRING .)
    GREATEREQUAL    reduce using rule 92 (string -> STRING .)
    GREATERTHAN     reduce using rule 92 (string -> STRING .)
    LESSEQUAL       reduce using rule 92 (string -> STRING .)
    LESSTHAN        reduce using rule 92 (string -> STRING .)
    MINUS           reduce using rule 92 (string -> STRING .)
    TIMES           reduce using rule 92 (string -> STRING .)
    NOTEQUAL        reduce using rule 92 (string -> STRING .)
    OR              reduce using rule 92 (string -> STRING .)
    OROR            reduce using rule 92 (string -> STRING .)
    PLUS            reduce using rule 92 (string -> STRING .)
    EQUALS          reduce using rule 92 (string -> STRING .)
    OREQUALS        reduce using rule 92 (string -> STRING .)
    COMMA           reduce using rule 92 (string -> STRING .)
    RBRACE          reduce using rule 92 (string -> STRING .)
    SEMI            reduce using rule 92 (string -> STRING .)
    CASE            reduce using rule 92 (string -> STRING .)
    OTHERWISE       reduce using rule 92 (string -> STRING .)
    END             reduce using rule 92 (string -> STRING .)
    error           reduce using rule 92 (string -> STRING .)
    RBRACKET        reduce using rule 92 (string -> STRING .)


state 40

    (85) expr -> NOTEQUAL .
    (96) expr1 -> NOTEQUAL . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    FIELD           reduce using rule 85 (expr -> NOTEQUAL .)
    TRANSPOSE       reduce using rule 85 (expr -> NOTEQUAL .)
    AND             reduce using rule 85 (expr -> NOTEQUAL .)
    LDIV            reduce using rule 85 (expr -> NOTEQUAL .)
    DIV             reduce using rule 85 (expr -> NOTEQUAL .)
    DOT             reduce using rule 85 (expr -> NOTEQUAL .)
    DOTDIV          reduce using rule 85 (expr -> NOTEQUAL .)
    DOTEXP          reduce using rule 85 (expr -> NOTEQUAL .)
    DOTMUL          reduce using rule 85 (expr -> NOTEQUAL .)
    EQUALEQUAL      reduce using rule 85 (expr -> NOTEQUAL .)
    EXP             reduce using rule 85 (expr -> NOTEQUAL .)
    GREATEREQUAL    reduce using rule 85 (expr -> NOTEQUAL .)
    GREATERTHAN     reduce using rule 85 (expr -> NOTEQUAL .)
    LESSEQUAL       reduce using rule 85 (expr -> NOTEQUAL .)
    LESSTHAN        reduce using rule 85 (expr -> NOTEQUAL .)
    TIMES           reduce using rule 85 (expr -> NOTEQUAL .)
    OR              reduce using rule 85 (expr -> NOTEQUAL .)
    OROR            reduce using rule 85 (expr -> NOTEQUAL .)
    EQUALS          reduce using rule 85 (expr -> NOTEQUAL .)
    OREQUALS        reduce using rule 85 (expr -> NOTEQUAL .)
    COMMA           reduce using rule 85 (expr -> NOTEQUAL .)
    SEMI            reduce using rule 85 (expr -> NOTEQUAL .)
    CASE            reduce using rule 85 (expr -> NOTEQUAL .)
    OTHERWISE       reduce using rule 85 (expr -> NOTEQUAL .)
    END             reduce using rule 85 (expr -> NOTEQUAL .)
    error           reduce using rule 85 (expr -> NOTEQUAL .)
    RBRACKET        reduce using rule 85 (expr -> NOTEQUAL .)
    RBRACE          reduce using rule 85 (expr -> NOTEQUAL .)
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

  ! LBRACE          [ reduce using rule 85 (expr -> NOTEQUAL .) ]
  ! LBRACKET        [ reduce using rule 85 (expr -> NOTEQUAL .) ]
  ! COLON           [ reduce using rule 85 (expr -> NOTEQUAL .) ]
  ! MINUS           [ reduce using rule 85 (expr -> NOTEQUAL .) ]
  ! NOTEQUAL        [ reduce using rule 85 (expr -> NOTEQUAL .) ]
  ! PLUS            [ reduce using rule 85 (expr -> NOTEQUAL .) ]

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 109

state 41

    (38) continue_stmt -> CONTINUE . SEMI

    SEMI            shift and go to state 110


state 42

    (83) expr -> string .

    FIELD           reduce using rule 83 (expr -> string .)
    TRANSPOSE       reduce using rule 83 (expr -> string .)
    LBRACE          reduce using rule 83 (expr -> string .)
    LBRACKET        reduce using rule 83 (expr -> string .)
    AND             reduce using rule 83 (expr -> string .)
    LDIV            reduce using rule 83 (expr -> string .)
    COLON           reduce using rule 83 (expr -> string .)
    DIV             reduce using rule 83 (expr -> string .)
    DOT             reduce using rule 83 (expr -> string .)
    DOTDIV          reduce using rule 83 (expr -> string .)
    DOTEXP          reduce using rule 83 (expr -> string .)
    DOTMUL          reduce using rule 83 (expr -> string .)
    EQUALEQUAL      reduce using rule 83 (expr -> string .)
    EXP             reduce using rule 83 (expr -> string .)
    GREATEREQUAL    reduce using rule 83 (expr -> string .)
    GREATERTHAN     reduce using rule 83 (expr -> string .)
    LESSEQUAL       reduce using rule 83 (expr -> string .)
    LESSTHAN        reduce using rule 83 (expr -> string .)
    MINUS           reduce using rule 83 (expr -> string .)
    TIMES           reduce using rule 83 (expr -> string .)
    NOTEQUAL        reduce using rule 83 (expr -> string .)
    OR              reduce using rule 83 (expr -> string .)
    OROR            reduce using rule 83 (expr -> string .)
    PLUS            reduce using rule 83 (expr -> string .)
    EQUALS          reduce using rule 83 (expr -> string .)
    OREQUALS        reduce using rule 83 (expr -> string .)
    COMMA           reduce using rule 83 (expr -> string .)
    SEMI            reduce using rule 83 (expr -> string .)
    CASE            reduce using rule 83 (expr -> string .)
    OTHERWISE       reduce using rule 83 (expr -> string .)
    END             reduce using rule 83 (expr -> string .)
    error           reduce using rule 83 (expr -> string .)
    RBRACKET        reduce using rule 83 (expr -> string .)
    RBRACE          reduce using rule 83 (expr -> string .)


state 43

    (86) expr -> matrix .

    FIELD           reduce using rule 86 (expr -> matrix .)
    TRANSPOSE       reduce using rule 86 (expr -> matrix .)
    LBRACE          reduce using rule 86 (expr -> matrix .)
    LBRACKET        reduce using rule 86 (expr -> matrix .)
    AND             reduce using rule 86 (expr -> matrix .)
    LDIV            reduce using rule 86 (expr -> matrix .)
    COLON           reduce using rule 86 (expr -> matrix .)
    DIV             reduce using rule 86 (expr -> matrix .)
    DOT             reduce using rule 86 (expr -> matrix .)
    DOTDIV          reduce using rule 86 (expr -> matrix .)
    DOTEXP          reduce using rule 86 (expr -> matrix .)
    DOTMUL          reduce using rule 86 (expr -> matrix .)
    EQUALEQUAL      reduce using rule 86 (expr -> matrix .)
    EXP             reduce using rule 86 (expr -> matrix .)
    GREATEREQUAL    reduce using rule 86 (expr -> matrix .)
    GREATERTHAN     reduce using rule 86 (expr -> matrix .)
    LESSEQUAL       reduce using rule 86 (expr -> matrix .)
    LESSTHAN        reduce using rule 86 (expr -> matrix .)
    MINUS           reduce using rule 86 (expr -> matrix .)
    TIMES           reduce using rule 86 (expr -> matrix .)
    NOTEQUAL        reduce using rule 86 (expr -> matrix .)
    OR              reduce using rule 86 (expr -> matrix .)
    OROR            reduce using rule 86 (expr -> matrix .)
    PLUS            reduce using rule 86 (expr -> matrix .)
    EQUALS          reduce using rule 86 (expr -> matrix .)
    OREQUALS        reduce using rule 86 (expr -> matrix .)
    COMMA           reduce using rule 86 (expr -> matrix .)
    SEMI            reduce using rule 86 (expr -> matrix .)
    CASE            reduce using rule 86 (expr -> matrix .)
    OTHERWISE       reduce using rule 86 (expr -> matrix .)
    END             reduce using rule 86 (expr -> matrix .)
    error           reduce using rule 86 (expr -> matrix .)
    RBRACKET        reduce using rule 86 (expr -> matrix .)
    RBRACE          reduce using rule 86 (expr -> matrix .)


state 44

    (47) null_stmt -> SEMI .

    CONTINUE        reduce using rule 47 (null_stmt -> SEMI .)
    BREAK           reduce using rule 47 (null_stmt -> SEMI .)
    GLOBAL          reduce using rule 47 (null_stmt -> SEMI .)
    PERSISTENT      reduce using rule 47 (null_stmt -> SEMI .)
    IDENTIFIER      reduce using rule 47 (null_stmt -> SEMI .)
    FOR             reduce using rule 47 (null_stmt -> SEMI .)
    IF              reduce using rule 47 (null_stmt -> SEMI .)
    SEMI            reduce using rule 47 (null_stmt -> SEMI .)
    COMMA           reduce using rule 47 (null_stmt -> SEMI .)
    RETURN          reduce using rule 47 (null_stmt -> SEMI .)
    SWITCH          reduce using rule 47 (null_stmt -> SEMI .)
    TRY             reduce using rule 47 (null_stmt -> SEMI .)
    WHILE           reduce using rule 47 (null_stmt -> SEMI .)
    NOTEQUAL        reduce using rule 47 (null_stmt -> SEMI .)
    LBRACKET        reduce using rule 47 (null_stmt -> SEMI .)
    NUMBER          reduce using rule 47 (null_stmt -> SEMI .)
    STRING          reduce using rule 47 (null_stmt -> SEMI .)
    COLON           reduce using rule 47 (null_stmt -> SEMI .)
    LBRACE          reduce using rule 47 (null_stmt -> SEMI .)
    MINUS           reduce using rule 47 (null_stmt -> SEMI .)
    PLUS            reduce using rule 47 (null_stmt -> SEMI .)
    ELSE            reduce using rule 47 (null_stmt -> SEMI .)
    ELSEIF          reduce using rule 47 (null_stmt -> SEMI .)
    END             reduce using rule 47 (null_stmt -> SEMI .)
    CASE            reduce using rule 47 (null_stmt -> SEMI .)
    OTHERWISE       reduce using rule 47 (null_stmt -> SEMI .)
    FUNCTION        reduce using rule 47 (null_stmt -> SEMI .)
    $end            reduce using rule 47 (null_stmt -> SEMI .)
    CATCH           reduce using rule 47 (null_stmt -> SEMI .)


state 45

    (93) colon -> COLON .

    OROR            reduce using rule 93 (colon -> COLON .)
    FIELD           reduce using rule 93 (colon -> COLON .)
    TRANSPOSE       reduce using rule 93 (colon -> COLON .)
    LBRACE          reduce using rule 93 (colon -> COLON .)
    LBRACKET        reduce using rule 93 (colon -> COLON .)
    AND             reduce using rule 93 (colon -> COLON .)
    LDIV            reduce using rule 93 (colon -> COLON .)
    COLON           reduce using rule 93 (colon -> COLON .)
    DIV             reduce using rule 93 (colon -> COLON .)
    DOT             reduce using rule 93 (colon -> COLON .)
    DOTDIV          reduce using rule 93 (colon -> COLON .)
    DOTEXP          reduce using rule 93 (colon -> COLON .)
    DOTMUL          reduce using rule 93 (colon -> COLON .)
    EQUALEQUAL      reduce using rule 93 (colon -> COLON .)
    EXP             reduce using rule 93 (colon -> COLON .)
    GREATEREQUAL    reduce using rule 93 (colon -> COLON .)
    GREATERTHAN     reduce using rule 93 (colon -> COLON .)
    LESSEQUAL       reduce using rule 93 (colon -> COLON .)
    LESSTHAN        reduce using rule 93 (colon -> COLON .)
    MINUS           reduce using rule 93 (colon -> COLON .)
    TIMES           reduce using rule 93 (colon -> COLON .)
    NOTEQUAL        reduce using rule 93 (colon -> COLON .)
    OR              reduce using rule 93 (colon -> COLON .)
    PLUS            reduce using rule 93 (colon -> COLON .)
    EQUALS          reduce using rule 93 (colon -> COLON .)
    OREQUALS        reduce using rule 93 (colon -> COLON .)
    COMMA           reduce using rule 93 (colon -> COLON .)
    SEMI            reduce using rule 93 (colon -> COLON .)
    CASE            reduce using rule 93 (colon -> COLON .)
    OTHERWISE       reduce using rule 93 (colon -> COLON .)
    END             reduce using rule 93 (colon -> COLON .)
    error           reduce using rule 93 (colon -> COLON .)
    RBRACKET        reduce using rule 93 (colon -> COLON .)
    RBRACE          reduce using rule 93 (colon -> COLON .)


state 46

    (82) expr -> number .

    FIELD           reduce using rule 82 (expr -> number .)
    TRANSPOSE       reduce using rule 82 (expr -> number .)
    LBRACE          reduce using rule 82 (expr -> number .)
    LBRACKET        reduce using rule 82 (expr -> number .)
    AND             reduce using rule 82 (expr -> number .)
    LDIV            reduce using rule 82 (expr -> number .)
    COLON           reduce using rule 82 (expr -> number .)
    DIV             reduce using rule 82 (expr -> number .)
    DOT             reduce using rule 82 (expr -> number .)
    DOTDIV          reduce using rule 82 (expr -> number .)
    DOTEXP          reduce using rule 82 (expr -> number .)
    DOTMUL          reduce using rule 82 (expr -> number .)
    EQUALEQUAL      reduce using rule 82 (expr -> number .)
    EXP             reduce using rule 82 (expr -> number .)
    GREATEREQUAL    reduce using rule 82 (expr -> number .)
    GREATERTHAN     reduce using rule 82 (expr -> number .)
    LESSEQUAL       reduce using rule 82 (expr -> number .)
    LESSTHAN        reduce using rule 82 (expr -> number .)
    MINUS           reduce using rule 82 (expr -> number .)
    TIMES           reduce using rule 82 (expr -> number .)
    NOTEQUAL        reduce using rule 82 (expr -> number .)
    OR              reduce using rule 82 (expr -> number .)
    OROR            reduce using rule 82 (expr -> number .)
    PLUS            reduce using rule 82 (expr -> number .)
    EQUALS          reduce using rule 82 (expr -> number .)
    OREQUALS        reduce using rule 82 (expr -> number .)
    COMMA           reduce using rule 82 (expr -> number .)
    SEMI            reduce using rule 82 (expr -> number .)
    CASE            reduce using rule 82 (expr -> number .)
    OTHERWISE       reduce using rule 82 (expr -> number .)
    END             reduce using rule 82 (expr -> number .)
    error           reduce using rule 82 (expr -> number .)
    RBRACKET        reduce using rule 82 (expr -> number .)
    RBRACE          reduce using rule 82 (expr -> number .)


state 47

    (16) stmt -> if_stmt .

    END             reduce using rule 16 (stmt -> if_stmt .)
    CONTINUE        reduce using rule 16 (stmt -> if_stmt .)
    BREAK           reduce using rule 16 (stmt -> if_stmt .)
    GLOBAL          reduce using rule 16 (stmt -> if_stmt .)
    PERSISTENT      reduce using rule 16 (stmt -> if_stmt .)
    IDENTIFIER      reduce using rule 16 (stmt -> if_stmt .)
    FOR             reduce using rule 16 (stmt -> if_stmt .)
    IF              reduce using rule 16 (stmt -> if_stmt .)
    SEMI            reduce using rule 16 (stmt -> if_stmt .)
    COMMA           reduce using rule 16 (stmt -> if_stmt .)
    RETURN          reduce using rule 16 (stmt -> if_stmt .)
    SWITCH          reduce using rule 16 (stmt -> if_stmt .)
    TRY             reduce using rule 16 (stmt -> if_stmt .)
    WHILE           reduce using rule 16 (stmt -> if_stmt .)
    NOTEQUAL        reduce using rule 16 (stmt -> if_stmt .)
    LBRACKET        reduce using rule 16 (stmt -> if_stmt .)
    NUMBER          reduce using rule 16 (stmt -> if_stmt .)
    STRING          reduce using rule 16 (stmt -> if_stmt .)
    COLON           reduce using rule 16 (stmt -> if_stmt .)
    LBRACE          reduce using rule 16 (stmt -> if_stmt .)
    MINUS           reduce using rule 16 (stmt -> if_stmt .)
    PLUS            reduce using rule 16 (stmt -> if_stmt .)
    ELSE            reduce using rule 16 (stmt -> if_stmt .)
    ELSEIF          reduce using rule 16 (stmt -> if_stmt .)
    FUNCTION        reduce using rule 16 (stmt -> if_stmt .)
    $end            reduce using rule 16 (stmt -> if_stmt .)
    CATCH           reduce using rule 16 (stmt -> if_stmt .)
    CASE            reduce using rule 16 (stmt -> if_stmt .)
    OTHERWISE       reduce using rule 16 (stmt -> if_stmt .)


state 48

    (95) expr1 -> PLUS . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 111

state 49

    (45) try_catch -> TRY stmt_list . CATCH stmt_list end
    (46) try_catch -> TRY stmt_list . end
    (62) stmt_list -> stmt_list . stmt
    (91) end -> . END
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CATCH           shift and go to state 114
    END             shift and go to state 112
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    end                            shift and go to state 113
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    persistent_stmt                shift and go to state 23
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 50

    (80) for_stmt -> FOR matrix . EQUALS expr SEMI stmt_list end

    EQUALS          shift and go to state 115


state 51

    (78) for_stmt -> FOR IDENTIFIER . EQUALS expr SEMI stmt_list end

    EQUALS          shift and go to state 116


state 52

    (79) for_stmt -> FOR LBRACKET . IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (101) matrix -> LBRACKET . RBRACKET
    (102) matrix -> LBRACKET . concat_list RBRACKET
    (103) matrix -> LBRACKET . concat_list SEMI RBRACKET
    (104) matrix -> LBRACKET . expr_list RBRACKET
    (105) matrix -> LBRACKET . expr_list SEMI RBRACKET
    (63) concat_list -> . expr_list SEMI expr_list
    (64) concat_list -> . concat_list SEMI expr_list
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 117
    RBRACKET        shift and go to state 99
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    string                         shift and go to state 42
    expr_list                      shift and go to state 102
    colon                          shift and go to state 28
    matrix                         shift and go to state 43
    exprs                          shift and go to state 31
    concat_list                    shift and go to state 100
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    expr                           shift and go to state 107

state 53

    (3) top -> top func_decl . stmt_list_opt
    (4) top -> top func_decl . end semi_opt
    (5) top -> top func_decl . stmt_list end semi_opt
    (59) stmt_list_opt -> .
    (60) stmt_list_opt -> . stmt_list
    (91) end -> . END
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    FUNCTION        reduce using rule 59 (stmt_list_opt -> .)
    $end            reduce using rule 59 (stmt_list_opt -> .)
    END             shift and go to state 112
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    end                            shift and go to state 119
    expr_list                      shift and go to state 27
    return_stmt                    shift and go to state 14
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    colon                          shift and go to state 28
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list_opt                  shift and go to state 120
    stmt_list                      shift and go to state 118
    persistent_stmt                shift and go to state 23
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    command                        shift and go to state 37
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 54

    (49) func_decl -> FUNCTION . IDENTIFIER args_opt SEMI
    (50) func_decl -> FUNCTION . ret EQUALS IDENTIFIER args_opt SEMI
    (56) ret -> . IDENTIFIER
    (57) ret -> . LBRACKET RBRACKET
    (58) ret -> . LBRACKET expr_list RBRACKET

    IDENTIFIER      shift and go to state 121
    LBRACKET        shift and go to state 122

    ret                            shift and go to state 123

state 55

    (35) persistent_stmt -> PERSISTENT global_list . SEMI
    (31) global_list -> global_list . IDENTIFIER

    SEMI            shift and go to state 125
    IDENTIFIER      shift and go to state 124


state 56

    (36) persistent_stmt -> PERSISTENT IDENTIFIER . EQUALS expr SEMI
    (30) global_list -> IDENTIFIER .

    EQUALS          shift and go to state 126
    SEMI            reduce using rule 30 (global_list -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 30 (global_list -> IDENTIFIER .)


state 57

    (81) expr -> IDENTIFIER .

    FIELD           reduce using rule 81 (expr -> IDENTIFIER .)
    TRANSPOSE       reduce using rule 81 (expr -> IDENTIFIER .)
    LBRACE          reduce using rule 81 (expr -> IDENTIFIER .)
    LBRACKET        reduce using rule 81 (expr -> IDENTIFIER .)
    AND             reduce using rule 81 (expr -> IDENTIFIER .)
    LDIV            reduce using rule 81 (expr -> IDENTIFIER .)
    COLON           reduce using rule 81 (expr -> IDENTIFIER .)
    DIV             reduce using rule 81 (expr -> IDENTIFIER .)
    DOT             reduce using rule 81 (expr -> IDENTIFIER .)
    DOTDIV          reduce using rule 81 (expr -> IDENTIFIER .)
    DOTEXP          reduce using rule 81 (expr -> IDENTIFIER .)
    DOTMUL          reduce using rule 81 (expr -> IDENTIFIER .)
    EQUALEQUAL      reduce using rule 81 (expr -> IDENTIFIER .)
    EXP             reduce using rule 81 (expr -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 81 (expr -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 81 (expr -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 81 (expr -> IDENTIFIER .)
    LESSTHAN        reduce using rule 81 (expr -> IDENTIFIER .)
    MINUS           reduce using rule 81 (expr -> IDENTIFIER .)
    TIMES           reduce using rule 81 (expr -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 81 (expr -> IDENTIFIER .)
    OR              reduce using rule 81 (expr -> IDENTIFIER .)
    OROR            reduce using rule 81 (expr -> IDENTIFIER .)
    PLUS            reduce using rule 81 (expr -> IDENTIFIER .)
    EQUALS          reduce using rule 81 (expr -> IDENTIFIER .)
    OREQUALS        reduce using rule 81 (expr -> IDENTIFIER .)
    COMMA           reduce using rule 81 (expr -> IDENTIFIER .)
    SEMI            reduce using rule 81 (expr -> IDENTIFIER .)
    CASE            reduce using rule 81 (expr -> IDENTIFIER .)
    OTHERWISE       reduce using rule 81 (expr -> IDENTIFIER .)
    END             reduce using rule 81 (expr -> IDENTIFIER .)
    error           reduce using rule 81 (expr -> IDENTIFIER .)
    RBRACKET        reduce using rule 81 (expr -> IDENTIFIER .)
    RBRACE          reduce using rule 81 (expr -> IDENTIFIER .)


state 58

    (40) switch_stmt -> SWITCH expr . semi_opt case_list end
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr
    (6) semi_opt -> .
    (7) semi_opt -> . semi_opt SEMI
    (8) semi_opt -> . semi_opt COMMA

    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85
    SEMI            reduce using rule 6 (semi_opt -> .)
    COMMA           reduce using rule 6 (semi_opt -> .)
    CASE            reduce using rule 6 (semi_opt -> .)
    OTHERWISE       reduce using rule 6 (semi_opt -> .)
    END             reduce using rule 6 (semi_opt -> .)

    semi_opt                       shift and go to state 128

state 59

    (73) if_stmt -> IF expr . sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> IF expr . error stmt_list_opt elseif_stmt end
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr
    (71) sep -> . COMMA
    (72) sep -> . SEMI

    error           shift and go to state 130
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85
    COMMA           shift and go to state 129
    SEMI            shift and go to state 131

    sep                            shift and go to state 132

state 60

    (24) arg1 -> NUMBER .

    SEMI            reduce using rule 24 (arg1 -> NUMBER .)
    STRING          reduce using rule 24 (arg1 -> NUMBER .)
    NUMBER          reduce using rule 24 (arg1 -> NUMBER .)
    IDENTIFIER      reduce using rule 24 (arg1 -> NUMBER .)
    GLOBAL          reduce using rule 24 (arg1 -> NUMBER .)


state 61

    (26) arg1 -> GLOBAL .

    SEMI            reduce using rule 26 (arg1 -> GLOBAL .)
    STRING          reduce using rule 26 (arg1 -> GLOBAL .)
    NUMBER          reduce using rule 26 (arg1 -> GLOBAL .)
    IDENTIFIER      reduce using rule 26 (arg1 -> GLOBAL .)
    GLOBAL          reduce using rule 26 (arg1 -> GLOBAL .)


state 62

    (23) arg1 -> STRING .

    SEMI            reduce using rule 23 (arg1 -> STRING .)
    STRING          reduce using rule 23 (arg1 -> STRING .)
    NUMBER          reduce using rule 23 (arg1 -> STRING .)
    IDENTIFIER      reduce using rule 23 (arg1 -> STRING .)
    GLOBAL          reduce using rule 23 (arg1 -> STRING .)


state 63

    (25) arg1 -> IDENTIFIER .

    SEMI            reduce using rule 25 (arg1 -> IDENTIFIER .)
    STRING          reduce using rule 25 (arg1 -> IDENTIFIER .)
    NUMBER          reduce using rule 25 (arg1 -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 25 (arg1 -> IDENTIFIER .)
    GLOBAL          reduce using rule 25 (arg1 -> IDENTIFIER .)


state 64

    (29) command -> IDENTIFIER args . SEMI
    (28) args -> args . arg1
    (23) arg1 -> . STRING
    (24) arg1 -> . NUMBER
    (25) arg1 -> . IDENTIFIER
    (26) arg1 -> . GLOBAL

    SEMI            shift and go to state 133
    STRING          shift and go to state 62
    NUMBER          shift and go to state 60
    IDENTIFIER      shift and go to state 63
    GLOBAL          shift and go to state 61

    arg1                           shift and go to state 134

state 65

    (27) args -> arg1 .

    SEMI            reduce using rule 27 (args -> arg1 .)
    STRING          reduce using rule 27 (args -> arg1 .)
    NUMBER          reduce using rule 27 (args -> arg1 .)
    IDENTIFIER      reduce using rule 27 (args -> arg1 .)
    GLOBAL          reduce using rule 27 (args -> arg1 .)


state 66

    (62) stmt_list -> stmt_list stmt .

    CONTINUE        reduce using rule 62 (stmt_list -> stmt_list stmt .)
    BREAK           reduce using rule 62 (stmt_list -> stmt_list stmt .)
    GLOBAL          reduce using rule 62 (stmt_list -> stmt_list stmt .)
    PERSISTENT      reduce using rule 62 (stmt_list -> stmt_list stmt .)
    IDENTIFIER      reduce using rule 62 (stmt_list -> stmt_list stmt .)
    FOR             reduce using rule 62 (stmt_list -> stmt_list stmt .)
    IF              reduce using rule 62 (stmt_list -> stmt_list stmt .)
    SEMI            reduce using rule 62 (stmt_list -> stmt_list stmt .)
    COMMA           reduce using rule 62 (stmt_list -> stmt_list stmt .)
    RETURN          reduce using rule 62 (stmt_list -> stmt_list stmt .)
    SWITCH          reduce using rule 62 (stmt_list -> stmt_list stmt .)
    TRY             reduce using rule 62 (stmt_list -> stmt_list stmt .)
    WHILE           reduce using rule 62 (stmt_list -> stmt_list stmt .)
    NOTEQUAL        reduce using rule 62 (stmt_list -> stmt_list stmt .)
    LBRACKET        reduce using rule 62 (stmt_list -> stmt_list stmt .)
    NUMBER          reduce using rule 62 (stmt_list -> stmt_list stmt .)
    STRING          reduce using rule 62 (stmt_list -> stmt_list stmt .)
    COLON           reduce using rule 62 (stmt_list -> stmt_list stmt .)
    LBRACE          reduce using rule 62 (stmt_list -> stmt_list stmt .)
    MINUS           reduce using rule 62 (stmt_list -> stmt_list stmt .)
    PLUS            reduce using rule 62 (stmt_list -> stmt_list stmt .)
    ELSE            reduce using rule 62 (stmt_list -> stmt_list stmt .)
    ELSEIF          reduce using rule 62 (stmt_list -> stmt_list stmt .)
    END             reduce using rule 62 (stmt_list -> stmt_list stmt .)
    CASE            reduce using rule 62 (stmt_list -> stmt_list stmt .)
    OTHERWISE       reduce using rule 62 (stmt_list -> stmt_list stmt .)
    CATCH           reduce using rule 62 (stmt_list -> stmt_list stmt .)
    FUNCTION        reduce using rule 62 (stmt_list -> stmt_list stmt .)
    $end            reduce using rule 62 (stmt_list -> stmt_list stmt .)


state 67

    (70) while_stmt -> WHILE expr . SEMI stmt_list end
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    SEMI            shift and go to state 135
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85


state 68

    (39) break_stmt -> BREAK SEMI .

    CONTINUE        reduce using rule 39 (break_stmt -> BREAK SEMI .)
    BREAK           reduce using rule 39 (break_stmt -> BREAK SEMI .)
    GLOBAL          reduce using rule 39 (break_stmt -> BREAK SEMI .)
    PERSISTENT      reduce using rule 39 (break_stmt -> BREAK SEMI .)
    IDENTIFIER      reduce using rule 39 (break_stmt -> BREAK SEMI .)
    FOR             reduce using rule 39 (break_stmt -> BREAK SEMI .)
    IF              reduce using rule 39 (break_stmt -> BREAK SEMI .)
    SEMI            reduce using rule 39 (break_stmt -> BREAK SEMI .)
    COMMA           reduce using rule 39 (break_stmt -> BREAK SEMI .)
    RETURN          reduce using rule 39 (break_stmt -> BREAK SEMI .)
    SWITCH          reduce using rule 39 (break_stmt -> BREAK SEMI .)
    TRY             reduce using rule 39 (break_stmt -> BREAK SEMI .)
    WHILE           reduce using rule 39 (break_stmt -> BREAK SEMI .)
    NOTEQUAL        reduce using rule 39 (break_stmt -> BREAK SEMI .)
    LBRACKET        reduce using rule 39 (break_stmt -> BREAK SEMI .)
    NUMBER          reduce using rule 39 (break_stmt -> BREAK SEMI .)
    STRING          reduce using rule 39 (break_stmt -> BREAK SEMI .)
    COLON           reduce using rule 39 (break_stmt -> BREAK SEMI .)
    LBRACE          reduce using rule 39 (break_stmt -> BREAK SEMI .)
    MINUS           reduce using rule 39 (break_stmt -> BREAK SEMI .)
    PLUS            reduce using rule 39 (break_stmt -> BREAK SEMI .)
    FUNCTION        reduce using rule 39 (break_stmt -> BREAK SEMI .)
    $end            reduce using rule 39 (break_stmt -> BREAK SEMI .)
    CATCH           reduce using rule 39 (break_stmt -> BREAK SEMI .)
    END             reduce using rule 39 (break_stmt -> BREAK SEMI .)
    ELSE            reduce using rule 39 (break_stmt -> BREAK SEMI .)
    ELSEIF          reduce using rule 39 (break_stmt -> BREAK SEMI .)
    CASE            reduce using rule 39 (break_stmt -> BREAK SEMI .)
    OTHERWISE       reduce using rule 39 (break_stmt -> BREAK SEMI .)


state 69

    (37) return_stmt -> RETURN SEMI .

    END             reduce using rule 37 (return_stmt -> RETURN SEMI .)
    CONTINUE        reduce using rule 37 (return_stmt -> RETURN SEMI .)
    BREAK           reduce using rule 37 (return_stmt -> RETURN SEMI .)
    GLOBAL          reduce using rule 37 (return_stmt -> RETURN SEMI .)
    PERSISTENT      reduce using rule 37 (return_stmt -> RETURN SEMI .)
    IDENTIFIER      reduce using rule 37 (return_stmt -> RETURN SEMI .)
    FOR             reduce using rule 37 (return_stmt -> RETURN SEMI .)
    IF              reduce using rule 37 (return_stmt -> RETURN SEMI .)
    SEMI            reduce using rule 37 (return_stmt -> RETURN SEMI .)
    COMMA           reduce using rule 37 (return_stmt -> RETURN SEMI .)
    RETURN          reduce using rule 37 (return_stmt -> RETURN SEMI .)
    SWITCH          reduce using rule 37 (return_stmt -> RETURN SEMI .)
    TRY             reduce using rule 37 (return_stmt -> RETURN SEMI .)
    WHILE           reduce using rule 37 (return_stmt -> RETURN SEMI .)
    NOTEQUAL        reduce using rule 37 (return_stmt -> RETURN SEMI .)
    LBRACKET        reduce using rule 37 (return_stmt -> RETURN SEMI .)
    NUMBER          reduce using rule 37 (return_stmt -> RETURN SEMI .)
    STRING          reduce using rule 37 (return_stmt -> RETURN SEMI .)
    COLON           reduce using rule 37 (return_stmt -> RETURN SEMI .)
    LBRACE          reduce using rule 37 (return_stmt -> RETURN SEMI .)
    MINUS           reduce using rule 37 (return_stmt -> RETURN SEMI .)
    PLUS            reduce using rule 37 (return_stmt -> RETURN SEMI .)
    FUNCTION        reduce using rule 37 (return_stmt -> RETURN SEMI .)
    $end            reduce using rule 37 (return_stmt -> RETURN SEMI .)
    ELSE            reduce using rule 37 (return_stmt -> RETURN SEMI .)
    ELSEIF          reduce using rule 37 (return_stmt -> RETURN SEMI .)
    CASE            reduce using rule 37 (return_stmt -> RETURN SEMI .)
    OTHERWISE       reduce using rule 37 (return_stmt -> RETURN SEMI .)
    CATCH           reduce using rule 37 (return_stmt -> RETURN SEMI .)


state 70

    (130) expr2 -> expr OR . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 136

state 71

    (113) expr2 -> expr AND . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 137

state 72

    (124) expr2 -> expr GREATERTHAN . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 138

state 73

    (116) expr2 -> expr DIV . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 139

state 74

    (123) expr2 -> expr GREATEREQUAL . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 140

state 75

    (128) expr2 -> expr TIMES . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 141

state 76

    (119) expr2 -> expr DOTEXP . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 142

state 77

    (132) expr2 -> expr PLUS . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 143

state 78

    (114) expr2 -> expr LDIV . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 144

state 79

    (133) expr2 -> expr EQUALS . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 145

state 80

    (111) expr -> expr LBRACKET . expr_list RBRACKET
    (112) expr -> expr LBRACKET . RBRACKET
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    RBRACKET        shift and go to state 146
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    exprs                          shift and go to state 31
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    expr_list                      shift and go to state 147
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    expr                           shift and go to state 107

state 81

    (127) expr2 -> expr MINUS . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 148

state 82

    (120) expr2 -> expr DOTMUL . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 149

state 83

    (118) expr2 -> expr DOTDIV . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 150

state 84

    (122) expr2 -> expr EXP . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 151

state 85

    (134) expr2 -> expr OREQUALS . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 152

state 86

    (34) foo_stmt -> expr OROR . expr SEMI
    (131) expr2 -> expr OROR . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 153

state 87

    (126) expr2 -> expr LESSTHAN . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 154

state 88

    (129) expr2 -> expr NOTEQUAL . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 155

state 89

    (108) expr -> expr TRANSPOSE .

    FIELD           reduce using rule 108 (expr -> expr TRANSPOSE .)
    TRANSPOSE       reduce using rule 108 (expr -> expr TRANSPOSE .)
    LBRACE          reduce using rule 108 (expr -> expr TRANSPOSE .)
    LBRACKET        reduce using rule 108 (expr -> expr TRANSPOSE .)
    AND             reduce using rule 108 (expr -> expr TRANSPOSE .)
    LDIV            reduce using rule 108 (expr -> expr TRANSPOSE .)
    COLON           reduce using rule 108 (expr -> expr TRANSPOSE .)
    DIV             reduce using rule 108 (expr -> expr TRANSPOSE .)
    DOT             reduce using rule 108 (expr -> expr TRANSPOSE .)
    DOTDIV          reduce using rule 108 (expr -> expr TRANSPOSE .)
    DOTEXP          reduce using rule 108 (expr -> expr TRANSPOSE .)
    DOTMUL          reduce using rule 108 (expr -> expr TRANSPOSE .)
    EQUALEQUAL      reduce using rule 108 (expr -> expr TRANSPOSE .)
    EXP             reduce using rule 108 (expr -> expr TRANSPOSE .)
    GREATEREQUAL    reduce using rule 108 (expr -> expr TRANSPOSE .)
    GREATERTHAN     reduce using rule 108 (expr -> expr TRANSPOSE .)
    LESSEQUAL       reduce using rule 108 (expr -> expr TRANSPOSE .)
    LESSTHAN        reduce using rule 108 (expr -> expr TRANSPOSE .)
    MINUS           reduce using rule 108 (expr -> expr TRANSPOSE .)
    TIMES           reduce using rule 108 (expr -> expr TRANSPOSE .)
    NOTEQUAL        reduce using rule 108 (expr -> expr TRANSPOSE .)
    OR              reduce using rule 108 (expr -> expr TRANSPOSE .)
    OROR            reduce using rule 108 (expr -> expr TRANSPOSE .)
    PLUS            reduce using rule 108 (expr -> expr TRANSPOSE .)
    EQUALS          reduce using rule 108 (expr -> expr TRANSPOSE .)
    OREQUALS        reduce using rule 108 (expr -> expr TRANSPOSE .)
    COMMA           reduce using rule 108 (expr -> expr TRANSPOSE .)
    SEMI            reduce using rule 108 (expr -> expr TRANSPOSE .)
    CASE            reduce using rule 108 (expr -> expr TRANSPOSE .)
    OTHERWISE       reduce using rule 108 (expr -> expr TRANSPOSE .)
    END             reduce using rule 108 (expr -> expr TRANSPOSE .)
    error           reduce using rule 108 (expr -> expr TRANSPOSE .)
    RBRACKET        reduce using rule 108 (expr -> expr TRANSPOSE .)
    RBRACE          reduce using rule 108 (expr -> expr TRANSPOSE .)


state 90

    (117) expr2 -> expr DOT . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 156

state 91

    (125) expr2 -> expr LESSEQUAL . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 157

state 92

    (121) expr2 -> expr EQUALEQUAL . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 158

state 93

    (109) expr -> expr LBRACE . expr_list RBRACE
    (110) expr -> expr LBRACE . RBRACE
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    RBRACE          shift and go to state 159
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    exprs                          shift and go to state 31
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    expr_list                      shift and go to state 160
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    expr                           shift and go to state 107

state 94

    (107) expr -> expr FIELD .

    FIELD           reduce using rule 107 (expr -> expr FIELD .)
    TRANSPOSE       reduce using rule 107 (expr -> expr FIELD .)
    LBRACE          reduce using rule 107 (expr -> expr FIELD .)
    LBRACKET        reduce using rule 107 (expr -> expr FIELD .)
    AND             reduce using rule 107 (expr -> expr FIELD .)
    LDIV            reduce using rule 107 (expr -> expr FIELD .)
    COLON           reduce using rule 107 (expr -> expr FIELD .)
    DIV             reduce using rule 107 (expr -> expr FIELD .)
    DOT             reduce using rule 107 (expr -> expr FIELD .)
    DOTDIV          reduce using rule 107 (expr -> expr FIELD .)
    DOTEXP          reduce using rule 107 (expr -> expr FIELD .)
    DOTMUL          reduce using rule 107 (expr -> expr FIELD .)
    EQUALEQUAL      reduce using rule 107 (expr -> expr FIELD .)
    EXP             reduce using rule 107 (expr -> expr FIELD .)
    GREATEREQUAL    reduce using rule 107 (expr -> expr FIELD .)
    GREATERTHAN     reduce using rule 107 (expr -> expr FIELD .)
    LESSEQUAL       reduce using rule 107 (expr -> expr FIELD .)
    LESSTHAN        reduce using rule 107 (expr -> expr FIELD .)
    MINUS           reduce using rule 107 (expr -> expr FIELD .)
    TIMES           reduce using rule 107 (expr -> expr FIELD .)
    NOTEQUAL        reduce using rule 107 (expr -> expr FIELD .)
    OR              reduce using rule 107 (expr -> expr FIELD .)
    OROR            reduce using rule 107 (expr -> expr FIELD .)
    PLUS            reduce using rule 107 (expr -> expr FIELD .)
    EQUALS          reduce using rule 107 (expr -> expr FIELD .)
    OREQUALS        reduce using rule 107 (expr -> expr FIELD .)
    COMMA           reduce using rule 107 (expr -> expr FIELD .)
    SEMI            reduce using rule 107 (expr -> expr FIELD .)
    CASE            reduce using rule 107 (expr -> expr FIELD .)
    OTHERWISE       reduce using rule 107 (expr -> expr FIELD .)
    END             reduce using rule 107 (expr -> expr FIELD .)
    error           reduce using rule 107 (expr -> expr FIELD .)
    RBRACKET        reduce using rule 107 (expr -> expr FIELD .)
    RBRACE          reduce using rule 107 (expr -> expr FIELD .)


state 95

    (115) expr2 -> expr COLON . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 161

state 96

    (94) expr1 -> MINUS expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    error           reduce using rule 94 (expr1 -> MINUS expr .)
    FIELD           reduce using rule 94 (expr1 -> MINUS expr .)
    TRANSPOSE       reduce using rule 94 (expr1 -> MINUS expr .)
    LBRACE          reduce using rule 94 (expr1 -> MINUS expr .)
    LBRACKET        reduce using rule 94 (expr1 -> MINUS expr .)
    AND             reduce using rule 94 (expr1 -> MINUS expr .)
    LDIV            reduce using rule 94 (expr1 -> MINUS expr .)
    COLON           reduce using rule 94 (expr1 -> MINUS expr .)
    DIV             reduce using rule 94 (expr1 -> MINUS expr .)
    DOT             reduce using rule 94 (expr1 -> MINUS expr .)
    DOTDIV          reduce using rule 94 (expr1 -> MINUS expr .)
    DOTEXP          reduce using rule 94 (expr1 -> MINUS expr .)
    DOTMUL          reduce using rule 94 (expr1 -> MINUS expr .)
    EQUALEQUAL      reduce using rule 94 (expr1 -> MINUS expr .)
    EXP             reduce using rule 94 (expr1 -> MINUS expr .)
    GREATEREQUAL    reduce using rule 94 (expr1 -> MINUS expr .)
    GREATERTHAN     reduce using rule 94 (expr1 -> MINUS expr .)
    LESSEQUAL       reduce using rule 94 (expr1 -> MINUS expr .)
    LESSTHAN        reduce using rule 94 (expr1 -> MINUS expr .)
    MINUS           reduce using rule 94 (expr1 -> MINUS expr .)
    TIMES           reduce using rule 94 (expr1 -> MINUS expr .)
    NOTEQUAL        reduce using rule 94 (expr1 -> MINUS expr .)
    OR              reduce using rule 94 (expr1 -> MINUS expr .)
    OROR            reduce using rule 94 (expr1 -> MINUS expr .)
    PLUS            reduce using rule 94 (expr1 -> MINUS expr .)
    EQUALS          reduce using rule 94 (expr1 -> MINUS expr .)
    OREQUALS        reduce using rule 94 (expr1 -> MINUS expr .)
    COMMA           reduce using rule 94 (expr1 -> MINUS expr .)
    SEMI            reduce using rule 94 (expr1 -> MINUS expr .)
    CASE            reduce using rule 94 (expr1 -> MINUS expr .)
    OTHERWISE       reduce using rule 94 (expr1 -> MINUS expr .)
    END             reduce using rule 94 (expr1 -> MINUS expr .)
    RBRACKET        reduce using rule 94 (expr1 -> MINUS expr .)
    RBRACE          reduce using rule 94 (expr1 -> MINUS expr .)

  ! FIELD           [ shift and go to state 94 ]
  ! TRANSPOSE       [ shift and go to state 89 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DIV             [ shift and go to state 73 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 81 ]
  ! TIMES           [ shift and go to state 75 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! PLUS            [ shift and go to state 77 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 97

    (69) expr_stmt -> expr_list SEMI .

    END             reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    CONTINUE        reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    BREAK           reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    GLOBAL          reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    PERSISTENT      reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    IDENTIFIER      reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    FOR             reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    IF              reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    SEMI            reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    COMMA           reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    RETURN          reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    SWITCH          reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    TRY             reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    WHILE           reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    NOTEQUAL        reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    LBRACKET        reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    NUMBER          reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    STRING          reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    COLON           reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    LBRACE          reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    MINUS           reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    PLUS            reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    ELSE            reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    ELSEIF          reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    FUNCTION        reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    $end            reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    CATCH           reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    CASE            reduce using rule 69 (expr_stmt -> expr_list SEMI .)
    OTHERWISE       reduce using rule 69 (expr_stmt -> expr_list SEMI .)


state 98

    (66) expr_list -> exprs COMMA .
    (68) exprs -> exprs COMMA . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    SEMI            reduce using rule 66 (expr_list -> exprs COMMA .)
    RBRACKET        reduce using rule 66 (expr_list -> exprs COMMA .)
    RBRACE          reduce using rule 66 (expr_list -> exprs COMMA .)
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    expr                           shift and go to state 162

state 99

    (101) matrix -> LBRACKET RBRACKET .

    SEMI            reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    FIELD           reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    TRANSPOSE       reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    LBRACE          reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    AND             reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    LDIV            reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    COLON           reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    DIV             reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    DOT             reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    DOTDIV          reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    DOTEXP          reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    DOTMUL          reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    EQUALEQUAL      reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    EXP             reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    GREATERTHAN     reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    LESSTHAN        reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    OR              reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    OROR            reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    EQUALS          reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    OREQUALS        reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    CASE            reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    OTHERWISE       reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    END             reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    error           reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 101 (matrix -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 101 (matrix -> LBRACKET RBRACKET .)


state 100

    (102) matrix -> LBRACKET concat_list . RBRACKET
    (103) matrix -> LBRACKET concat_list . SEMI RBRACKET
    (64) concat_list -> concat_list . SEMI expr_list

    RBRACKET        shift and go to state 163
    SEMI            shift and go to state 164


state 101

    (106) expr -> LBRACKET expr . RBRACKET
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr
    (67) exprs -> expr .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 165
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85
    COMMA           reduce using rule 67 (exprs -> expr .)
    SEMI            reduce using rule 67 (exprs -> expr .)

  ! RBRACKET        [ reduce using rule 67 (exprs -> expr .) ]


state 102

    (104) matrix -> LBRACKET expr_list . RBRACKET
    (105) matrix -> LBRACKET expr_list . SEMI RBRACKET
    (63) concat_list -> expr_list . SEMI expr_list

    RBRACKET        shift and go to state 166
    SEMI            shift and go to state 167


state 103

    (33) global_stmt -> GLOBAL IDENTIFIER . EQUALS expr SEMI
    (30) global_list -> IDENTIFIER .

    EQUALS          shift and go to state 168
    SEMI            reduce using rule 30 (global_list -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 30 (global_list -> IDENTIFIER .)


state 104

    (32) global_stmt -> GLOBAL global_list . SEMI
    (31) global_list -> global_list . IDENTIFIER

    SEMI            shift and go to state 169
    IDENTIFIER      shift and go to state 124


state 105

    (97) cellarray -> LBRACE RBRACE .

    FIELD           reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    TRANSPOSE       reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    LBRACE          reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    AND             reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    LDIV            reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    COLON           reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    DIV             reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    DOT             reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    DOTDIV          reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    DOTEXP          reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    DOTMUL          reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    EQUALEQUAL      reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    EXP             reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    GREATEREQUAL    reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    GREATERTHAN     reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    LESSEQUAL       reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    LESSTHAN        reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    MINUS           reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    TIMES           reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    NOTEQUAL        reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    OR              reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    OROR            reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    PLUS            reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    EQUALS          reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    OREQUALS        reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    COMMA           reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    SEMI            reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    CASE            reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    OTHERWISE       reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    END             reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    error           reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 97 (cellarray -> LBRACE RBRACE .)
    RBRACE          reduce using rule 97 (cellarray -> LBRACE RBRACE .)


state 106

    (99) cellarray -> LBRACE concat_list . RBRACE
    (100) cellarray -> LBRACE concat_list . SEMI RBRACE
    (64) concat_list -> concat_list . SEMI expr_list

    RBRACE          shift and go to state 171
    SEMI            shift and go to state 170


state 107

    (67) exprs -> expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    COMMA           reduce using rule 67 (exprs -> expr .)
    RBRACKET        reduce using rule 67 (exprs -> expr .)
    SEMI            reduce using rule 67 (exprs -> expr .)
    RBRACE          reduce using rule 67 (exprs -> expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85


state 108

    (98) cellarray -> LBRACE expr_list . RBRACE
    (63) concat_list -> expr_list . SEMI expr_list

    RBRACE          shift and go to state 173
    SEMI            shift and go to state 172


state 109

    (96) expr1 -> NOTEQUAL expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    error           reduce using rule 96 (expr1 -> NOTEQUAL expr .)
    COMMA           reduce using rule 96 (expr1 -> NOTEQUAL expr .)
    SEMI            reduce using rule 96 (expr1 -> NOTEQUAL expr .)
    CASE            reduce using rule 96 (expr1 -> NOTEQUAL expr .)
    OTHERWISE       reduce using rule 96 (expr1 -> NOTEQUAL expr .)
    END             reduce using rule 96 (expr1 -> NOTEQUAL expr .)
    RBRACKET        reduce using rule 96 (expr1 -> NOTEQUAL expr .)
    RBRACE          reduce using rule 96 (expr1 -> NOTEQUAL expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! TRANSPOSE       [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! LBRACE          [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! LBRACKET        [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! AND             [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! LDIV            [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! COLON           [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! DIV             [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! DOT             [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! DOTDIV          [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! DOTEXP          [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! DOTMUL          [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! EQUALEQUAL      [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! EXP             [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! GREATEREQUAL    [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! GREATERTHAN     [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! LESSEQUAL       [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! LESSTHAN        [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! MINUS           [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! TIMES           [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! NOTEQUAL        [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! OR              [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! OROR            [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! PLUS            [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! EQUALS          [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]
  ! OREQUALS        [ reduce using rule 96 (expr1 -> NOTEQUAL expr .) ]


state 110

    (38) continue_stmt -> CONTINUE SEMI .

    CONTINUE        reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    BREAK           reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    GLOBAL          reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    PERSISTENT      reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    IDENTIFIER      reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    FOR             reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    IF              reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    SEMI            reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    COMMA           reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    RETURN          reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    SWITCH          reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    TRY             reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    WHILE           reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    NOTEQUAL        reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    LBRACKET        reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    NUMBER          reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    STRING          reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    COLON           reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    LBRACE          reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    MINUS           reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    PLUS            reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    END             reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    CATCH           reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    FUNCTION        reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    $end            reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    ELSE            reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    ELSEIF          reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    CASE            reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)
    OTHERWISE       reduce using rule 38 (continue_stmt -> CONTINUE SEMI .)


state 111

    (95) expr1 -> PLUS expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    error           reduce using rule 95 (expr1 -> PLUS expr .)
    FIELD           reduce using rule 95 (expr1 -> PLUS expr .)
    TRANSPOSE       reduce using rule 95 (expr1 -> PLUS expr .)
    LBRACE          reduce using rule 95 (expr1 -> PLUS expr .)
    LBRACKET        reduce using rule 95 (expr1 -> PLUS expr .)
    AND             reduce using rule 95 (expr1 -> PLUS expr .)
    LDIV            reduce using rule 95 (expr1 -> PLUS expr .)
    COLON           reduce using rule 95 (expr1 -> PLUS expr .)
    DIV             reduce using rule 95 (expr1 -> PLUS expr .)
    DOT             reduce using rule 95 (expr1 -> PLUS expr .)
    DOTDIV          reduce using rule 95 (expr1 -> PLUS expr .)
    DOTEXP          reduce using rule 95 (expr1 -> PLUS expr .)
    DOTMUL          reduce using rule 95 (expr1 -> PLUS expr .)
    EQUALEQUAL      reduce using rule 95 (expr1 -> PLUS expr .)
    EXP             reduce using rule 95 (expr1 -> PLUS expr .)
    GREATEREQUAL    reduce using rule 95 (expr1 -> PLUS expr .)
    GREATERTHAN     reduce using rule 95 (expr1 -> PLUS expr .)
    LESSEQUAL       reduce using rule 95 (expr1 -> PLUS expr .)
    LESSTHAN        reduce using rule 95 (expr1 -> PLUS expr .)
    MINUS           reduce using rule 95 (expr1 -> PLUS expr .)
    TIMES           reduce using rule 95 (expr1 -> PLUS expr .)
    NOTEQUAL        reduce using rule 95 (expr1 -> PLUS expr .)
    OR              reduce using rule 95 (expr1 -> PLUS expr .)
    OROR            reduce using rule 95 (expr1 -> PLUS expr .)
    PLUS            reduce using rule 95 (expr1 -> PLUS expr .)
    EQUALS          reduce using rule 95 (expr1 -> PLUS expr .)
    OREQUALS        reduce using rule 95 (expr1 -> PLUS expr .)
    COMMA           reduce using rule 95 (expr1 -> PLUS expr .)
    SEMI            reduce using rule 95 (expr1 -> PLUS expr .)
    CASE            reduce using rule 95 (expr1 -> PLUS expr .)
    OTHERWISE       reduce using rule 95 (expr1 -> PLUS expr .)
    END             reduce using rule 95 (expr1 -> PLUS expr .)
    RBRACKET        reduce using rule 95 (expr1 -> PLUS expr .)
    RBRACE          reduce using rule 95 (expr1 -> PLUS expr .)

  ! FIELD           [ shift and go to state 94 ]
  ! TRANSPOSE       [ shift and go to state 89 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DIV             [ shift and go to state 73 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 81 ]
  ! TIMES           [ shift and go to state 75 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! PLUS            [ shift and go to state 77 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 112

    (91) end -> END .

    CONTINUE        reduce using rule 91 (end -> END .)
    BREAK           reduce using rule 91 (end -> END .)
    GLOBAL          reduce using rule 91 (end -> END .)
    PERSISTENT      reduce using rule 91 (end -> END .)
    IDENTIFIER      reduce using rule 91 (end -> END .)
    FOR             reduce using rule 91 (end -> END .)
    IF              reduce using rule 91 (end -> END .)
    SEMI            reduce using rule 91 (end -> END .)
    COMMA           reduce using rule 91 (end -> END .)
    RETURN          reduce using rule 91 (end -> END .)
    SWITCH          reduce using rule 91 (end -> END .)
    TRY             reduce using rule 91 (end -> END .)
    WHILE           reduce using rule 91 (end -> END .)
    NOTEQUAL        reduce using rule 91 (end -> END .)
    LBRACKET        reduce using rule 91 (end -> END .)
    NUMBER          reduce using rule 91 (end -> END .)
    STRING          reduce using rule 91 (end -> END .)
    COLON           reduce using rule 91 (end -> END .)
    LBRACE          reduce using rule 91 (end -> END .)
    MINUS           reduce using rule 91 (end -> END .)
    PLUS            reduce using rule 91 (end -> END .)
    FUNCTION        reduce using rule 91 (end -> END .)
    $end            reduce using rule 91 (end -> END .)
    CATCH           reduce using rule 91 (end -> END .)
    END             reduce using rule 91 (end -> END .)
    ELSE            reduce using rule 91 (end -> END .)
    ELSEIF          reduce using rule 91 (end -> END .)
    CASE            reduce using rule 91 (end -> END .)
    OTHERWISE       reduce using rule 91 (end -> END .)


state 113

    (46) try_catch -> TRY stmt_list end .

    END             reduce using rule 46 (try_catch -> TRY stmt_list end .)
    CONTINUE        reduce using rule 46 (try_catch -> TRY stmt_list end .)
    BREAK           reduce using rule 46 (try_catch -> TRY stmt_list end .)
    GLOBAL          reduce using rule 46 (try_catch -> TRY stmt_list end .)
    PERSISTENT      reduce using rule 46 (try_catch -> TRY stmt_list end .)
    IDENTIFIER      reduce using rule 46 (try_catch -> TRY stmt_list end .)
    FOR             reduce using rule 46 (try_catch -> TRY stmt_list end .)
    IF              reduce using rule 46 (try_catch -> TRY stmt_list end .)
    SEMI            reduce using rule 46 (try_catch -> TRY stmt_list end .)
    COMMA           reduce using rule 46 (try_catch -> TRY stmt_list end .)
    RETURN          reduce using rule 46 (try_catch -> TRY stmt_list end .)
    SWITCH          reduce using rule 46 (try_catch -> TRY stmt_list end .)
    TRY             reduce using rule 46 (try_catch -> TRY stmt_list end .)
    WHILE           reduce using rule 46 (try_catch -> TRY stmt_list end .)
    NOTEQUAL        reduce using rule 46 (try_catch -> TRY stmt_list end .)
    LBRACKET        reduce using rule 46 (try_catch -> TRY stmt_list end .)
    NUMBER          reduce using rule 46 (try_catch -> TRY stmt_list end .)
    STRING          reduce using rule 46 (try_catch -> TRY stmt_list end .)
    COLON           reduce using rule 46 (try_catch -> TRY stmt_list end .)
    LBRACE          reduce using rule 46 (try_catch -> TRY stmt_list end .)
    MINUS           reduce using rule 46 (try_catch -> TRY stmt_list end .)
    PLUS            reduce using rule 46 (try_catch -> TRY stmt_list end .)
    ELSE            reduce using rule 46 (try_catch -> TRY stmt_list end .)
    ELSEIF          reduce using rule 46 (try_catch -> TRY stmt_list end .)
    FUNCTION        reduce using rule 46 (try_catch -> TRY stmt_list end .)
    $end            reduce using rule 46 (try_catch -> TRY stmt_list end .)
    CATCH           reduce using rule 46 (try_catch -> TRY stmt_list end .)
    CASE            reduce using rule 46 (try_catch -> TRY stmt_list end .)
    OTHERWISE       reduce using rule 46 (try_catch -> TRY stmt_list end .)


state 114

    (45) try_catch -> TRY stmt_list CATCH . stmt_list end
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list                      shift and go to state 174
    persistent_stmt                shift and go to state 23
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 115

    (80) for_stmt -> FOR matrix EQUALS . expr SEMI stmt_list end
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    expr2                          shift and go to state 16
    string                         shift and go to state 42
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    colon                          shift and go to state 28
    expr                           shift and go to state 175

state 116

    (78) for_stmt -> FOR IDENTIFIER EQUALS . expr SEMI stmt_list end
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    expr2                          shift and go to state 16
    string                         shift and go to state 42
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    colon                          shift and go to state 28
    expr                           shift and go to state 176

state 117

    (79) for_stmt -> FOR LBRACKET IDENTIFIER . EQUALS expr RBRACKET SEMI stmt_list end
    (81) expr -> IDENTIFIER .

  ! shift/reduce conflict for EQUALS resolved as shift
    EQUALS          shift and go to state 177
    FIELD           reduce using rule 81 (expr -> IDENTIFIER .)
    TRANSPOSE       reduce using rule 81 (expr -> IDENTIFIER .)
    LBRACE          reduce using rule 81 (expr -> IDENTIFIER .)
    LBRACKET        reduce using rule 81 (expr -> IDENTIFIER .)
    AND             reduce using rule 81 (expr -> IDENTIFIER .)
    LDIV            reduce using rule 81 (expr -> IDENTIFIER .)
    COLON           reduce using rule 81 (expr -> IDENTIFIER .)
    DIV             reduce using rule 81 (expr -> IDENTIFIER .)
    DOT             reduce using rule 81 (expr -> IDENTIFIER .)
    DOTDIV          reduce using rule 81 (expr -> IDENTIFIER .)
    DOTEXP          reduce using rule 81 (expr -> IDENTIFIER .)
    DOTMUL          reduce using rule 81 (expr -> IDENTIFIER .)
    EQUALEQUAL      reduce using rule 81 (expr -> IDENTIFIER .)
    EXP             reduce using rule 81 (expr -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 81 (expr -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 81 (expr -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 81 (expr -> IDENTIFIER .)
    LESSTHAN        reduce using rule 81 (expr -> IDENTIFIER .)
    MINUS           reduce using rule 81 (expr -> IDENTIFIER .)
    TIMES           reduce using rule 81 (expr -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 81 (expr -> IDENTIFIER .)
    OR              reduce using rule 81 (expr -> IDENTIFIER .)
    OROR            reduce using rule 81 (expr -> IDENTIFIER .)
    PLUS            reduce using rule 81 (expr -> IDENTIFIER .)
    OREQUALS        reduce using rule 81 (expr -> IDENTIFIER .)
    COMMA           reduce using rule 81 (expr -> IDENTIFIER .)
    RBRACKET        reduce using rule 81 (expr -> IDENTIFIER .)
    SEMI            reduce using rule 81 (expr -> IDENTIFIER .)

  ! EQUALS          [ reduce using rule 81 (expr -> IDENTIFIER .) ]


state 118

    (5) top -> top func_decl stmt_list . end semi_opt
    (60) stmt_list_opt -> stmt_list .
    (62) stmt_list -> stmt_list . stmt
    (91) end -> . END
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    FUNCTION        reduce using rule 60 (stmt_list_opt -> stmt_list .)
    $end            reduce using rule 60 (stmt_list_opt -> stmt_list .)
    END             shift and go to state 112
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    end                            shift and go to state 178
    expr_list                      shift and go to state 27
    return_stmt                    shift and go to state 14
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    colon                          shift and go to state 28
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    command                        shift and go to state 37
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 119

    (4) top -> top func_decl end . semi_opt
    (6) semi_opt -> .
    (7) semi_opt -> . semi_opt SEMI
    (8) semi_opt -> . semi_opt COMMA

    SEMI            reduce using rule 6 (semi_opt -> .)
    COMMA           reduce using rule 6 (semi_opt -> .)
    FUNCTION        reduce using rule 6 (semi_opt -> .)
    $end            reduce using rule 6 (semi_opt -> .)

    semi_opt                       shift and go to state 179

state 120

    (3) top -> top func_decl stmt_list_opt .

    FUNCTION        reduce using rule 3 (top -> top func_decl stmt_list_opt .)
    $end            reduce using rule 3 (top -> top func_decl stmt_list_opt .)


state 121

    (49) func_decl -> FUNCTION IDENTIFIER . args_opt SEMI
    (56) ret -> IDENTIFIER .
    (51) args_opt -> .
    (52) args_opt -> . LBRACKET RBRACKET
    (53) args_opt -> . LBRACKET expr_list RBRACKET

    EQUALS          reduce using rule 56 (ret -> IDENTIFIER .)
    SEMI            reduce using rule 51 (args_opt -> .)
    LBRACKET        shift and go to state 181

    args_opt                       shift and go to state 180

state 122

    (57) ret -> LBRACKET . RBRACKET
    (58) ret -> LBRACKET . expr_list RBRACKET
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    RBRACKET        shift and go to state 182
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    exprs                          shift and go to state 31
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    expr_list                      shift and go to state 183
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    expr                           shift and go to state 107

state 123

    (50) func_decl -> FUNCTION ret . EQUALS IDENTIFIER args_opt SEMI

    EQUALS          shift and go to state 184


state 124

    (31) global_list -> global_list IDENTIFIER .

    SEMI            reduce using rule 31 (global_list -> global_list IDENTIFIER .)
    IDENTIFIER      reduce using rule 31 (global_list -> global_list IDENTIFIER .)


state 125

    (35) persistent_stmt -> PERSISTENT global_list SEMI .

    CONTINUE        reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    BREAK           reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    GLOBAL          reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    PERSISTENT      reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    IDENTIFIER      reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    FOR             reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    IF              reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    SEMI            reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    COMMA           reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    RETURN          reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    SWITCH          reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    TRY             reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    WHILE           reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    NOTEQUAL        reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    LBRACKET        reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    NUMBER          reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    STRING          reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    COLON           reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    LBRACE          reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    MINUS           reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    PLUS            reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    END             reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    FUNCTION        reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    $end            reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    ELSE            reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    ELSEIF          reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    CATCH           reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    CASE            reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)
    OTHERWISE       reduce using rule 35 (persistent_stmt -> PERSISTENT global_list SEMI .)


state 126

    (36) persistent_stmt -> PERSISTENT IDENTIFIER EQUALS . expr SEMI
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 185

state 127

    (131) expr2 -> expr OROR . expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 186

state 128

    (40) switch_stmt -> SWITCH expr semi_opt . case_list end
    (7) semi_opt -> semi_opt . SEMI
    (8) semi_opt -> semi_opt . COMMA
    (41) case_list -> .
    (42) case_list -> . CASE expr sep stmt_list_opt case_list
    (43) case_list -> . CASE expr error stmt_list_opt case_list
    (44) case_list -> . OTHERWISE stmt_list

    SEMI            shift and go to state 191
    COMMA           shift and go to state 187
    END             reduce using rule 41 (case_list -> .)
    CASE            shift and go to state 190
    OTHERWISE       shift and go to state 188

    case_list                      shift and go to state 189

state 129

    (71) sep -> COMMA .

    CONTINUE        reduce using rule 71 (sep -> COMMA .)
    BREAK           reduce using rule 71 (sep -> COMMA .)
    GLOBAL          reduce using rule 71 (sep -> COMMA .)
    PERSISTENT      reduce using rule 71 (sep -> COMMA .)
    IDENTIFIER      reduce using rule 71 (sep -> COMMA .)
    FOR             reduce using rule 71 (sep -> COMMA .)
    IF              reduce using rule 71 (sep -> COMMA .)
    SEMI            reduce using rule 71 (sep -> COMMA .)
    COMMA           reduce using rule 71 (sep -> COMMA .)
    RETURN          reduce using rule 71 (sep -> COMMA .)
    SWITCH          reduce using rule 71 (sep -> COMMA .)
    TRY             reduce using rule 71 (sep -> COMMA .)
    WHILE           reduce using rule 71 (sep -> COMMA .)
    NOTEQUAL        reduce using rule 71 (sep -> COMMA .)
    LBRACKET        reduce using rule 71 (sep -> COMMA .)
    NUMBER          reduce using rule 71 (sep -> COMMA .)
    STRING          reduce using rule 71 (sep -> COMMA .)
    COLON           reduce using rule 71 (sep -> COMMA .)
    LBRACE          reduce using rule 71 (sep -> COMMA .)
    MINUS           reduce using rule 71 (sep -> COMMA .)
    PLUS            reduce using rule 71 (sep -> COMMA .)
    ELSE            reduce using rule 71 (sep -> COMMA .)
    ELSEIF          reduce using rule 71 (sep -> COMMA .)
    END             reduce using rule 71 (sep -> COMMA .)
    CASE            reduce using rule 71 (sep -> COMMA .)
    OTHERWISE       reduce using rule 71 (sep -> COMMA .)


state 130

    (74) if_stmt -> IF expr error . stmt_list_opt elseif_stmt end
    (59) stmt_list_opt -> .
    (60) stmt_list_opt -> . stmt_list
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    ELSE            reduce using rule 59 (stmt_list_opt -> .)
    ELSEIF          reduce using rule 59 (stmt_list_opt -> .)
    END             reduce using rule 59 (stmt_list_opt -> .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list_opt                  shift and go to state 193
    stmt_list                      shift and go to state 192
    persistent_stmt                shift and go to state 23
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 131

    (72) sep -> SEMI .

    CONTINUE        reduce using rule 72 (sep -> SEMI .)
    BREAK           reduce using rule 72 (sep -> SEMI .)
    GLOBAL          reduce using rule 72 (sep -> SEMI .)
    PERSISTENT      reduce using rule 72 (sep -> SEMI .)
    IDENTIFIER      reduce using rule 72 (sep -> SEMI .)
    FOR             reduce using rule 72 (sep -> SEMI .)
    IF              reduce using rule 72 (sep -> SEMI .)
    SEMI            reduce using rule 72 (sep -> SEMI .)
    COMMA           reduce using rule 72 (sep -> SEMI .)
    RETURN          reduce using rule 72 (sep -> SEMI .)
    SWITCH          reduce using rule 72 (sep -> SEMI .)
    TRY             reduce using rule 72 (sep -> SEMI .)
    WHILE           reduce using rule 72 (sep -> SEMI .)
    NOTEQUAL        reduce using rule 72 (sep -> SEMI .)
    LBRACKET        reduce using rule 72 (sep -> SEMI .)
    NUMBER          reduce using rule 72 (sep -> SEMI .)
    STRING          reduce using rule 72 (sep -> SEMI .)
    COLON           reduce using rule 72 (sep -> SEMI .)
    LBRACE          reduce using rule 72 (sep -> SEMI .)
    MINUS           reduce using rule 72 (sep -> SEMI .)
    PLUS            reduce using rule 72 (sep -> SEMI .)
    ELSE            reduce using rule 72 (sep -> SEMI .)
    ELSEIF          reduce using rule 72 (sep -> SEMI .)
    END             reduce using rule 72 (sep -> SEMI .)
    CASE            reduce using rule 72 (sep -> SEMI .)
    OTHERWISE       reduce using rule 72 (sep -> SEMI .)


state 132

    (73) if_stmt -> IF expr sep . stmt_list_opt elseif_stmt end
    (59) stmt_list_opt -> .
    (60) stmt_list_opt -> . stmt_list
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    ELSE            reduce using rule 59 (stmt_list_opt -> .)
    ELSEIF          reduce using rule 59 (stmt_list_opt -> .)
    END             reduce using rule 59 (stmt_list_opt -> .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list_opt                  shift and go to state 194
    stmt_list                      shift and go to state 192
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 133

    (29) command -> IDENTIFIER args SEMI .

    END             reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    CONTINUE        reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    BREAK           reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    GLOBAL          reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    PERSISTENT      reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    IDENTIFIER      reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    FOR             reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    IF              reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    SEMI            reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    COMMA           reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    RETURN          reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    SWITCH          reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    TRY             reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    WHILE           reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    NOTEQUAL        reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    LBRACKET        reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    NUMBER          reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    STRING          reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    COLON           reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    LBRACE          reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    MINUS           reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    PLUS            reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    ELSE            reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    ELSEIF          reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    FUNCTION        reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    $end            reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    CASE            reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    OTHERWISE       reduce using rule 29 (command -> IDENTIFIER args SEMI .)
    CATCH           reduce using rule 29 (command -> IDENTIFIER args SEMI .)


state 134

    (28) args -> args arg1 .

    SEMI            reduce using rule 28 (args -> args arg1 .)
    STRING          reduce using rule 28 (args -> args arg1 .)
    NUMBER          reduce using rule 28 (args -> args arg1 .)
    IDENTIFIER      reduce using rule 28 (args -> args arg1 .)
    GLOBAL          reduce using rule 28 (args -> args arg1 .)


state 135

    (70) while_stmt -> WHILE expr SEMI . stmt_list end
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list                      shift and go to state 195
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 136

    (130) expr2 -> expr OR expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 130 (expr2 -> expr OR expr .)
    SEMI            reduce using rule 130 (expr2 -> expr OR expr .)
    RBRACKET        reduce using rule 130 (expr2 -> expr OR expr .)
    RBRACE          reduce using rule 130 (expr2 -> expr OR expr .)
    CASE            reduce using rule 130 (expr2 -> expr OR expr .)
    OTHERWISE       reduce using rule 130 (expr2 -> expr OR expr .)
    END             reduce using rule 130 (expr2 -> expr OR expr .)
    error           reduce using rule 130 (expr2 -> expr OR expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! TRANSPOSE       [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! LBRACE          [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! LBRACKET        [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! AND             [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! LDIV            [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! COLON           [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! DIV             [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! DOT             [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! DOTDIV          [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! DOTEXP          [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! DOTMUL          [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! EQUALEQUAL      [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! EXP             [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! GREATEREQUAL    [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! GREATERTHAN     [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! LESSEQUAL       [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! LESSTHAN        [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! TIMES           [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! NOTEQUAL        [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! OR              [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! OROR            [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! PLUS            [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! EQUALS          [ reduce using rule 130 (expr2 -> expr OR expr .) ]
  ! OREQUALS        [ reduce using rule 130 (expr2 -> expr OR expr .) ]


state 137

    (113) expr2 -> expr AND expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 113 (expr2 -> expr AND expr .)
    SEMI            reduce using rule 113 (expr2 -> expr AND expr .)
    RBRACKET        reduce using rule 113 (expr2 -> expr AND expr .)
    RBRACE          reduce using rule 113 (expr2 -> expr AND expr .)
    CASE            reduce using rule 113 (expr2 -> expr AND expr .)
    OTHERWISE       reduce using rule 113 (expr2 -> expr AND expr .)
    END             reduce using rule 113 (expr2 -> expr AND expr .)
    error           reduce using rule 113 (expr2 -> expr AND expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! TRANSPOSE       [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! LBRACE          [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! LBRACKET        [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! AND             [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! LDIV            [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! COLON           [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! DIV             [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! DOT             [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! DOTDIV          [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! DOTEXP          [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! DOTMUL          [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! EQUALEQUAL      [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! EXP             [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! GREATEREQUAL    [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! GREATERTHAN     [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! LESSEQUAL       [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! LESSTHAN        [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! MINUS           [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! TIMES           [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! NOTEQUAL        [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! OR              [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! OROR            [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! PLUS            [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! EQUALS          [ reduce using rule 113 (expr2 -> expr AND expr .) ]
  ! OREQUALS        [ reduce using rule 113 (expr2 -> expr AND expr .) ]


state 138

    (124) expr2 -> expr GREATERTHAN expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    FIELD           reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    LBRACE          reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    LBRACKET        reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    AND             reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    LDIV            reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    COLON           reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    DOT             reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    DOTDIV          reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    DOTEXP          reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    DOTMUL          reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    EQUALEQUAL      reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    EXP             reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    GREATEREQUAL    reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    GREATERTHAN     reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    LESSEQUAL       reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    LESSTHAN        reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    NOTEQUAL        reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    OR              reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    OROR            reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    EQUALS          reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    OREQUALS        reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    COMMA           reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    SEMI            reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    RBRACKET        reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    RBRACE          reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    CASE            reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    OTHERWISE       reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    END             reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    error           reduce using rule 124 (expr2 -> expr GREATERTHAN expr .)
    TRANSPOSE       shift and go to state 89
    DIV             shift and go to state 73
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    PLUS            shift and go to state 77

  ! TRANSPOSE       [ reduce using rule 124 (expr2 -> expr GREATERTHAN expr .) ]
  ! DIV             [ reduce using rule 124 (expr2 -> expr GREATERTHAN expr .) ]
  ! MINUS           [ reduce using rule 124 (expr2 -> expr GREATERTHAN expr .) ]
  ! TIMES           [ reduce using rule 124 (expr2 -> expr GREATERTHAN expr .) ]
  ! PLUS            [ reduce using rule 124 (expr2 -> expr GREATERTHAN expr .) ]
  ! FIELD           [ shift and go to state 94 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 139

    (116) expr2 -> expr DIV expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    FIELD           reduce using rule 116 (expr2 -> expr DIV expr .)
    LBRACE          reduce using rule 116 (expr2 -> expr DIV expr .)
    LBRACKET        reduce using rule 116 (expr2 -> expr DIV expr .)
    AND             reduce using rule 116 (expr2 -> expr DIV expr .)
    LDIV            reduce using rule 116 (expr2 -> expr DIV expr .)
    COLON           reduce using rule 116 (expr2 -> expr DIV expr .)
    DIV             reduce using rule 116 (expr2 -> expr DIV expr .)
    DOT             reduce using rule 116 (expr2 -> expr DIV expr .)
    DOTDIV          reduce using rule 116 (expr2 -> expr DIV expr .)
    DOTEXP          reduce using rule 116 (expr2 -> expr DIV expr .)
    DOTMUL          reduce using rule 116 (expr2 -> expr DIV expr .)
    EQUALEQUAL      reduce using rule 116 (expr2 -> expr DIV expr .)
    EXP             reduce using rule 116 (expr2 -> expr DIV expr .)
    GREATEREQUAL    reduce using rule 116 (expr2 -> expr DIV expr .)
    GREATERTHAN     reduce using rule 116 (expr2 -> expr DIV expr .)
    LESSEQUAL       reduce using rule 116 (expr2 -> expr DIV expr .)
    LESSTHAN        reduce using rule 116 (expr2 -> expr DIV expr .)
    MINUS           reduce using rule 116 (expr2 -> expr DIV expr .)
    TIMES           reduce using rule 116 (expr2 -> expr DIV expr .)
    NOTEQUAL        reduce using rule 116 (expr2 -> expr DIV expr .)
    OR              reduce using rule 116 (expr2 -> expr DIV expr .)
    OROR            reduce using rule 116 (expr2 -> expr DIV expr .)
    PLUS            reduce using rule 116 (expr2 -> expr DIV expr .)
    EQUALS          reduce using rule 116 (expr2 -> expr DIV expr .)
    OREQUALS        reduce using rule 116 (expr2 -> expr DIV expr .)
    COMMA           reduce using rule 116 (expr2 -> expr DIV expr .)
    SEMI            reduce using rule 116 (expr2 -> expr DIV expr .)
    RBRACKET        reduce using rule 116 (expr2 -> expr DIV expr .)
    RBRACE          reduce using rule 116 (expr2 -> expr DIV expr .)
    CASE            reduce using rule 116 (expr2 -> expr DIV expr .)
    OTHERWISE       reduce using rule 116 (expr2 -> expr DIV expr .)
    END             reduce using rule 116 (expr2 -> expr DIV expr .)
    error           reduce using rule 116 (expr2 -> expr DIV expr .)
    TRANSPOSE       shift and go to state 89

  ! TRANSPOSE       [ reduce using rule 116 (expr2 -> expr DIV expr .) ]
  ! FIELD           [ shift and go to state 94 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DIV             [ shift and go to state 73 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 81 ]
  ! TIMES           [ shift and go to state 75 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! PLUS            [ shift and go to state 77 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 140

    (123) expr2 -> expr GREATEREQUAL expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    FIELD           reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    LBRACE          reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    LBRACKET        reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    AND             reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    LDIV            reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    COLON           reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    DOT             reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    DOTDIV          reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    DOTEXP          reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    DOTMUL          reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    EQUALEQUAL      reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    EXP             reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    GREATEREQUAL    reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    GREATERTHAN     reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    LESSEQUAL       reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    LESSTHAN        reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    NOTEQUAL        reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    OR              reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    OROR            reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    EQUALS          reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    OREQUALS        reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    COMMA           reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    SEMI            reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    RBRACKET        reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    RBRACE          reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    CASE            reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    OTHERWISE       reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    END             reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    error           reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .)
    TRANSPOSE       shift and go to state 89
    DIV             shift and go to state 73
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    PLUS            shift and go to state 77

  ! TRANSPOSE       [ reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .) ]
  ! DIV             [ reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .) ]
  ! MINUS           [ reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .) ]
  ! TIMES           [ reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .) ]
  ! PLUS            [ reduce using rule 123 (expr2 -> expr GREATEREQUAL expr .) ]
  ! FIELD           [ shift and go to state 94 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 141

    (128) expr2 -> expr TIMES expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    FIELD           reduce using rule 128 (expr2 -> expr TIMES expr .)
    LBRACE          reduce using rule 128 (expr2 -> expr TIMES expr .)
    LBRACKET        reduce using rule 128 (expr2 -> expr TIMES expr .)
    AND             reduce using rule 128 (expr2 -> expr TIMES expr .)
    LDIV            reduce using rule 128 (expr2 -> expr TIMES expr .)
    COLON           reduce using rule 128 (expr2 -> expr TIMES expr .)
    DIV             reduce using rule 128 (expr2 -> expr TIMES expr .)
    DOT             reduce using rule 128 (expr2 -> expr TIMES expr .)
    DOTDIV          reduce using rule 128 (expr2 -> expr TIMES expr .)
    DOTEXP          reduce using rule 128 (expr2 -> expr TIMES expr .)
    DOTMUL          reduce using rule 128 (expr2 -> expr TIMES expr .)
    EQUALEQUAL      reduce using rule 128 (expr2 -> expr TIMES expr .)
    EXP             reduce using rule 128 (expr2 -> expr TIMES expr .)
    GREATEREQUAL    reduce using rule 128 (expr2 -> expr TIMES expr .)
    GREATERTHAN     reduce using rule 128 (expr2 -> expr TIMES expr .)
    LESSEQUAL       reduce using rule 128 (expr2 -> expr TIMES expr .)
    LESSTHAN        reduce using rule 128 (expr2 -> expr TIMES expr .)
    MINUS           reduce using rule 128 (expr2 -> expr TIMES expr .)
    TIMES           reduce using rule 128 (expr2 -> expr TIMES expr .)
    NOTEQUAL        reduce using rule 128 (expr2 -> expr TIMES expr .)
    OR              reduce using rule 128 (expr2 -> expr TIMES expr .)
    OROR            reduce using rule 128 (expr2 -> expr TIMES expr .)
    PLUS            reduce using rule 128 (expr2 -> expr TIMES expr .)
    EQUALS          reduce using rule 128 (expr2 -> expr TIMES expr .)
    OREQUALS        reduce using rule 128 (expr2 -> expr TIMES expr .)
    COMMA           reduce using rule 128 (expr2 -> expr TIMES expr .)
    SEMI            reduce using rule 128 (expr2 -> expr TIMES expr .)
    RBRACKET        reduce using rule 128 (expr2 -> expr TIMES expr .)
    RBRACE          reduce using rule 128 (expr2 -> expr TIMES expr .)
    CASE            reduce using rule 128 (expr2 -> expr TIMES expr .)
    OTHERWISE       reduce using rule 128 (expr2 -> expr TIMES expr .)
    END             reduce using rule 128 (expr2 -> expr TIMES expr .)
    error           reduce using rule 128 (expr2 -> expr TIMES expr .)
    TRANSPOSE       shift and go to state 89

  ! TRANSPOSE       [ reduce using rule 128 (expr2 -> expr TIMES expr .) ]
  ! FIELD           [ shift and go to state 94 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DIV             [ shift and go to state 73 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 81 ]
  ! TIMES           [ shift and go to state 75 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! PLUS            [ shift and go to state 77 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 142

    (119) expr2 -> expr DOTEXP expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 119 (expr2 -> expr DOTEXP expr .)
    SEMI            reduce using rule 119 (expr2 -> expr DOTEXP expr .)
    RBRACKET        reduce using rule 119 (expr2 -> expr DOTEXP expr .)
    RBRACE          reduce using rule 119 (expr2 -> expr DOTEXP expr .)
    CASE            reduce using rule 119 (expr2 -> expr DOTEXP expr .)
    OTHERWISE       reduce using rule 119 (expr2 -> expr DOTEXP expr .)
    END             reduce using rule 119 (expr2 -> expr DOTEXP expr .)
    error           reduce using rule 119 (expr2 -> expr DOTEXP expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! TRANSPOSE       [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! LBRACE          [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! LBRACKET        [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! AND             [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! LDIV            [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! COLON           [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! DIV             [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! DOT             [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! DOTDIV          [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! DOTEXP          [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! DOTMUL          [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! EQUALEQUAL      [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! EXP             [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! GREATEREQUAL    [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! GREATERTHAN     [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! LESSEQUAL       [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! LESSTHAN        [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! MINUS           [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! TIMES           [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! NOTEQUAL        [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! OR              [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! OROR            [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! PLUS            [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! EQUALS          [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]
  ! OREQUALS        [ reduce using rule 119 (expr2 -> expr DOTEXP expr .) ]


state 143

    (132) expr2 -> expr PLUS expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    FIELD           reduce using rule 132 (expr2 -> expr PLUS expr .)
    LBRACE          reduce using rule 132 (expr2 -> expr PLUS expr .)
    LBRACKET        reduce using rule 132 (expr2 -> expr PLUS expr .)
    AND             reduce using rule 132 (expr2 -> expr PLUS expr .)
    LDIV            reduce using rule 132 (expr2 -> expr PLUS expr .)
    COLON           reduce using rule 132 (expr2 -> expr PLUS expr .)
    DOT             reduce using rule 132 (expr2 -> expr PLUS expr .)
    DOTDIV          reduce using rule 132 (expr2 -> expr PLUS expr .)
    DOTEXP          reduce using rule 132 (expr2 -> expr PLUS expr .)
    DOTMUL          reduce using rule 132 (expr2 -> expr PLUS expr .)
    EQUALEQUAL      reduce using rule 132 (expr2 -> expr PLUS expr .)
    EXP             reduce using rule 132 (expr2 -> expr PLUS expr .)
    GREATEREQUAL    reduce using rule 132 (expr2 -> expr PLUS expr .)
    GREATERTHAN     reduce using rule 132 (expr2 -> expr PLUS expr .)
    LESSEQUAL       reduce using rule 132 (expr2 -> expr PLUS expr .)
    LESSTHAN        reduce using rule 132 (expr2 -> expr PLUS expr .)
    MINUS           reduce using rule 132 (expr2 -> expr PLUS expr .)
    NOTEQUAL        reduce using rule 132 (expr2 -> expr PLUS expr .)
    OR              reduce using rule 132 (expr2 -> expr PLUS expr .)
    OROR            reduce using rule 132 (expr2 -> expr PLUS expr .)
    PLUS            reduce using rule 132 (expr2 -> expr PLUS expr .)
    EQUALS          reduce using rule 132 (expr2 -> expr PLUS expr .)
    OREQUALS        reduce using rule 132 (expr2 -> expr PLUS expr .)
    COMMA           reduce using rule 132 (expr2 -> expr PLUS expr .)
    SEMI            reduce using rule 132 (expr2 -> expr PLUS expr .)
    RBRACKET        reduce using rule 132 (expr2 -> expr PLUS expr .)
    RBRACE          reduce using rule 132 (expr2 -> expr PLUS expr .)
    CASE            reduce using rule 132 (expr2 -> expr PLUS expr .)
    OTHERWISE       reduce using rule 132 (expr2 -> expr PLUS expr .)
    END             reduce using rule 132 (expr2 -> expr PLUS expr .)
    error           reduce using rule 132 (expr2 -> expr PLUS expr .)
    TRANSPOSE       shift and go to state 89
    DIV             shift and go to state 73
    TIMES           shift and go to state 75

  ! TRANSPOSE       [ reduce using rule 132 (expr2 -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 132 (expr2 -> expr PLUS expr .) ]
  ! TIMES           [ reduce using rule 132 (expr2 -> expr PLUS expr .) ]
  ! FIELD           [ shift and go to state 94 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 81 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! PLUS            [ shift and go to state 77 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 144

    (114) expr2 -> expr LDIV expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 114 (expr2 -> expr LDIV expr .)
    SEMI            reduce using rule 114 (expr2 -> expr LDIV expr .)
    RBRACKET        reduce using rule 114 (expr2 -> expr LDIV expr .)
    RBRACE          reduce using rule 114 (expr2 -> expr LDIV expr .)
    CASE            reduce using rule 114 (expr2 -> expr LDIV expr .)
    OTHERWISE       reduce using rule 114 (expr2 -> expr LDIV expr .)
    END             reduce using rule 114 (expr2 -> expr LDIV expr .)
    error           reduce using rule 114 (expr2 -> expr LDIV expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! TRANSPOSE       [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! LBRACE          [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! LBRACKET        [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! AND             [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! LDIV            [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! COLON           [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! DIV             [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! DOT             [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! DOTDIV          [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! DOTEXP          [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! DOTMUL          [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! EQUALEQUAL      [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! EXP             [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! GREATEREQUAL    [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! GREATERTHAN     [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! LESSEQUAL       [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! LESSTHAN        [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! MINUS           [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! TIMES           [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! NOTEQUAL        [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! OR              [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! OROR            [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! PLUS            [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! EQUALS          [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]
  ! OREQUALS        [ reduce using rule 114 (expr2 -> expr LDIV expr .) ]


state 145

    (133) expr2 -> expr EQUALS expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 133 (expr2 -> expr EQUALS expr .)
    SEMI            reduce using rule 133 (expr2 -> expr EQUALS expr .)
    RBRACKET        reduce using rule 133 (expr2 -> expr EQUALS expr .)
    RBRACE          reduce using rule 133 (expr2 -> expr EQUALS expr .)
    CASE            reduce using rule 133 (expr2 -> expr EQUALS expr .)
    OTHERWISE       reduce using rule 133 (expr2 -> expr EQUALS expr .)
    END             reduce using rule 133 (expr2 -> expr EQUALS expr .)
    error           reduce using rule 133 (expr2 -> expr EQUALS expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! TRANSPOSE       [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! LBRACE          [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! LBRACKET        [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! AND             [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! LDIV            [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! COLON           [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! DIV             [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! DOT             [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! DOTDIV          [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! DOTEXP          [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! DOTMUL          [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! EQUALEQUAL      [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! EXP             [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! GREATEREQUAL    [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! GREATERTHAN     [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! LESSEQUAL       [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! LESSTHAN        [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! MINUS           [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! TIMES           [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! NOTEQUAL        [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! OR              [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! OROR            [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! PLUS            [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! EQUALS          [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]
  ! OREQUALS        [ reduce using rule 133 (expr2 -> expr EQUALS expr .) ]


state 146

    (112) expr -> expr LBRACKET RBRACKET .

    FIELD           reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    TRANSPOSE       reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    LBRACE          reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    AND             reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    LDIV            reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    COLON           reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    DIV             reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    DOT             reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    DOTDIV          reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    DOTEXP          reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    DOTMUL          reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    EQUALEQUAL      reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    EXP             reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    GREATERTHAN     reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    LESSTHAN        reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    MINUS           reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    TIMES           reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    OR              reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    OROR            reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    PLUS            reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    EQUALS          reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    OREQUALS        reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    COMMA           reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    SEMI            reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    CASE            reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    OTHERWISE       reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    END             reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    error           reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)
    RBRACE          reduce using rule 112 (expr -> expr LBRACKET RBRACKET .)


state 147

    (111) expr -> expr LBRACKET expr_list . RBRACKET

    RBRACKET        shift and go to state 196


state 148

    (127) expr2 -> expr MINUS expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    FIELD           reduce using rule 127 (expr2 -> expr MINUS expr .)
    LBRACE          reduce using rule 127 (expr2 -> expr MINUS expr .)
    LBRACKET        reduce using rule 127 (expr2 -> expr MINUS expr .)
    AND             reduce using rule 127 (expr2 -> expr MINUS expr .)
    LDIV            reduce using rule 127 (expr2 -> expr MINUS expr .)
    COLON           reduce using rule 127 (expr2 -> expr MINUS expr .)
    DOT             reduce using rule 127 (expr2 -> expr MINUS expr .)
    DOTDIV          reduce using rule 127 (expr2 -> expr MINUS expr .)
    DOTEXP          reduce using rule 127 (expr2 -> expr MINUS expr .)
    DOTMUL          reduce using rule 127 (expr2 -> expr MINUS expr .)
    EQUALEQUAL      reduce using rule 127 (expr2 -> expr MINUS expr .)
    EXP             reduce using rule 127 (expr2 -> expr MINUS expr .)
    GREATEREQUAL    reduce using rule 127 (expr2 -> expr MINUS expr .)
    GREATERTHAN     reduce using rule 127 (expr2 -> expr MINUS expr .)
    LESSEQUAL       reduce using rule 127 (expr2 -> expr MINUS expr .)
    LESSTHAN        reduce using rule 127 (expr2 -> expr MINUS expr .)
    MINUS           reduce using rule 127 (expr2 -> expr MINUS expr .)
    NOTEQUAL        reduce using rule 127 (expr2 -> expr MINUS expr .)
    OR              reduce using rule 127 (expr2 -> expr MINUS expr .)
    OROR            reduce using rule 127 (expr2 -> expr MINUS expr .)
    PLUS            reduce using rule 127 (expr2 -> expr MINUS expr .)
    EQUALS          reduce using rule 127 (expr2 -> expr MINUS expr .)
    OREQUALS        reduce using rule 127 (expr2 -> expr MINUS expr .)
    COMMA           reduce using rule 127 (expr2 -> expr MINUS expr .)
    SEMI            reduce using rule 127 (expr2 -> expr MINUS expr .)
    RBRACKET        reduce using rule 127 (expr2 -> expr MINUS expr .)
    RBRACE          reduce using rule 127 (expr2 -> expr MINUS expr .)
    CASE            reduce using rule 127 (expr2 -> expr MINUS expr .)
    OTHERWISE       reduce using rule 127 (expr2 -> expr MINUS expr .)
    END             reduce using rule 127 (expr2 -> expr MINUS expr .)
    error           reduce using rule 127 (expr2 -> expr MINUS expr .)
    TRANSPOSE       shift and go to state 89
    DIV             shift and go to state 73
    TIMES           shift and go to state 75

  ! TRANSPOSE       [ reduce using rule 127 (expr2 -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 127 (expr2 -> expr MINUS expr .) ]
  ! TIMES           [ reduce using rule 127 (expr2 -> expr MINUS expr .) ]
  ! FIELD           [ shift and go to state 94 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 81 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! PLUS            [ shift and go to state 77 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 149

    (120) expr2 -> expr DOTMUL expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 120 (expr2 -> expr DOTMUL expr .)
    SEMI            reduce using rule 120 (expr2 -> expr DOTMUL expr .)
    RBRACKET        reduce using rule 120 (expr2 -> expr DOTMUL expr .)
    RBRACE          reduce using rule 120 (expr2 -> expr DOTMUL expr .)
    CASE            reduce using rule 120 (expr2 -> expr DOTMUL expr .)
    OTHERWISE       reduce using rule 120 (expr2 -> expr DOTMUL expr .)
    END             reduce using rule 120 (expr2 -> expr DOTMUL expr .)
    error           reduce using rule 120 (expr2 -> expr DOTMUL expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! TRANSPOSE       [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! LBRACE          [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! LBRACKET        [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! AND             [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! LDIV            [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! COLON           [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! DIV             [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! DOT             [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! DOTDIV          [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! DOTEXP          [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! DOTMUL          [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! EQUALEQUAL      [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! EXP             [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! GREATEREQUAL    [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! GREATERTHAN     [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! LESSEQUAL       [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! LESSTHAN        [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! MINUS           [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! TIMES           [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! NOTEQUAL        [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! OR              [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! OROR            [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! PLUS            [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! EQUALS          [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]
  ! OREQUALS        [ reduce using rule 120 (expr2 -> expr DOTMUL expr .) ]


state 150

    (118) expr2 -> expr DOTDIV expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 118 (expr2 -> expr DOTDIV expr .)
    SEMI            reduce using rule 118 (expr2 -> expr DOTDIV expr .)
    RBRACKET        reduce using rule 118 (expr2 -> expr DOTDIV expr .)
    RBRACE          reduce using rule 118 (expr2 -> expr DOTDIV expr .)
    CASE            reduce using rule 118 (expr2 -> expr DOTDIV expr .)
    OTHERWISE       reduce using rule 118 (expr2 -> expr DOTDIV expr .)
    END             reduce using rule 118 (expr2 -> expr DOTDIV expr .)
    error           reduce using rule 118 (expr2 -> expr DOTDIV expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! TRANSPOSE       [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! LBRACE          [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! LBRACKET        [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! AND             [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! LDIV            [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! COLON           [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! DIV             [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! DOT             [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! DOTDIV          [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! DOTEXP          [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! DOTMUL          [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! EQUALEQUAL      [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! EXP             [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! GREATEREQUAL    [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! GREATERTHAN     [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! LESSEQUAL       [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! LESSTHAN        [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! MINUS           [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! TIMES           [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! NOTEQUAL        [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! OR              [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! OROR            [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! PLUS            [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! EQUALS          [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]
  ! OREQUALS        [ reduce using rule 118 (expr2 -> expr DOTDIV expr .) ]


state 151

    (122) expr2 -> expr EXP expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 122 (expr2 -> expr EXP expr .)
    SEMI            reduce using rule 122 (expr2 -> expr EXP expr .)
    RBRACKET        reduce using rule 122 (expr2 -> expr EXP expr .)
    RBRACE          reduce using rule 122 (expr2 -> expr EXP expr .)
    CASE            reduce using rule 122 (expr2 -> expr EXP expr .)
    OTHERWISE       reduce using rule 122 (expr2 -> expr EXP expr .)
    END             reduce using rule 122 (expr2 -> expr EXP expr .)
    error           reduce using rule 122 (expr2 -> expr EXP expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! TRANSPOSE       [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! LBRACE          [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! LBRACKET        [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! AND             [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! LDIV            [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! COLON           [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! DIV             [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! DOT             [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! DOTDIV          [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! DOTEXP          [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! DOTMUL          [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! EQUALEQUAL      [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! EXP             [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! GREATEREQUAL    [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! GREATERTHAN     [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! LESSEQUAL       [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! LESSTHAN        [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! MINUS           [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! TIMES           [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! NOTEQUAL        [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! OR              [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! OROR            [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! PLUS            [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! EQUALS          [ reduce using rule 122 (expr2 -> expr EXP expr .) ]
  ! OREQUALS        [ reduce using rule 122 (expr2 -> expr EXP expr .) ]


state 152

    (134) expr2 -> expr OREQUALS expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 134 (expr2 -> expr OREQUALS expr .)
    SEMI            reduce using rule 134 (expr2 -> expr OREQUALS expr .)
    RBRACKET        reduce using rule 134 (expr2 -> expr OREQUALS expr .)
    RBRACE          reduce using rule 134 (expr2 -> expr OREQUALS expr .)
    CASE            reduce using rule 134 (expr2 -> expr OREQUALS expr .)
    OTHERWISE       reduce using rule 134 (expr2 -> expr OREQUALS expr .)
    END             reduce using rule 134 (expr2 -> expr OREQUALS expr .)
    error           reduce using rule 134 (expr2 -> expr OREQUALS expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! TRANSPOSE       [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! LBRACE          [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! LBRACKET        [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! AND             [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! LDIV            [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! COLON           [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! DIV             [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! DOT             [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! DOTDIV          [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! DOTEXP          [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! DOTMUL          [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! EQUALEQUAL      [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! EXP             [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! GREATEREQUAL    [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! GREATERTHAN     [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! LESSEQUAL       [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! LESSTHAN        [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! MINUS           [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! TIMES           [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! NOTEQUAL        [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! OR              [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! OROR            [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! PLUS            [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! EQUALS          [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]
  ! OREQUALS        [ reduce using rule 134 (expr2 -> expr OREQUALS expr .) ]


state 153

    (34) foo_stmt -> expr OROR expr . SEMI
    (131) expr2 -> expr OROR expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    SEMI            shift and go to state 197
    COMMA           reduce using rule 131 (expr2 -> expr OROR expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! OROR            [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! FIELD           [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! TRANSPOSE       [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LBRACE          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LBRACKET        [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! AND             [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LDIV            [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! COLON           [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DIV             [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DOT             [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DOTDIV          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DOTEXP          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DOTMUL          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! EQUALEQUAL      [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! EXP             [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! GREATEREQUAL    [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! GREATERTHAN     [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LESSEQUAL       [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LESSTHAN        [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! MINUS           [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! TIMES           [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! NOTEQUAL        [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! OR              [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! PLUS            [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! EQUALS          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! OREQUALS        [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! SEMI            [ reduce using rule 131 (expr2 -> expr OROR expr .) ]


state 154

    (126) expr2 -> expr LESSTHAN expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    FIELD           reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    LBRACE          reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    LBRACKET        reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    AND             reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    LDIV            reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    COLON           reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    DOT             reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    DOTDIV          reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    DOTEXP          reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    DOTMUL          reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    EQUALEQUAL      reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    EXP             reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    GREATEREQUAL    reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    GREATERTHAN     reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    LESSEQUAL       reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    LESSTHAN        reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    NOTEQUAL        reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    OR              reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    OROR            reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    EQUALS          reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    OREQUALS        reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    COMMA           reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    SEMI            reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    RBRACKET        reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    RBRACE          reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    CASE            reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    OTHERWISE       reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    END             reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    error           reduce using rule 126 (expr2 -> expr LESSTHAN expr .)
    TRANSPOSE       shift and go to state 89
    DIV             shift and go to state 73
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    PLUS            shift and go to state 77

  ! TRANSPOSE       [ reduce using rule 126 (expr2 -> expr LESSTHAN expr .) ]
  ! DIV             [ reduce using rule 126 (expr2 -> expr LESSTHAN expr .) ]
  ! MINUS           [ reduce using rule 126 (expr2 -> expr LESSTHAN expr .) ]
  ! TIMES           [ reduce using rule 126 (expr2 -> expr LESSTHAN expr .) ]
  ! PLUS            [ reduce using rule 126 (expr2 -> expr LESSTHAN expr .) ]
  ! FIELD           [ shift and go to state 94 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 155

    (129) expr2 -> expr NOTEQUAL expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 129 (expr2 -> expr NOTEQUAL expr .)
    SEMI            reduce using rule 129 (expr2 -> expr NOTEQUAL expr .)
    RBRACKET        reduce using rule 129 (expr2 -> expr NOTEQUAL expr .)
    RBRACE          reduce using rule 129 (expr2 -> expr NOTEQUAL expr .)
    CASE            reduce using rule 129 (expr2 -> expr NOTEQUAL expr .)
    OTHERWISE       reduce using rule 129 (expr2 -> expr NOTEQUAL expr .)
    END             reduce using rule 129 (expr2 -> expr NOTEQUAL expr .)
    error           reduce using rule 129 (expr2 -> expr NOTEQUAL expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! TRANSPOSE       [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! LBRACE          [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! LBRACKET        [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! AND             [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! LDIV            [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! COLON           [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! DIV             [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! DOT             [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! DOTDIV          [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! DOTEXP          [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! DOTMUL          [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! EQUALEQUAL      [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! EXP             [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! GREATEREQUAL    [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! GREATERTHAN     [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! LESSEQUAL       [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! LESSTHAN        [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! MINUS           [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! TIMES           [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! NOTEQUAL        [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! OR              [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! OROR            [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! PLUS            [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! EQUALS          [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]
  ! OREQUALS        [ reduce using rule 129 (expr2 -> expr NOTEQUAL expr .) ]


state 156

    (117) expr2 -> expr DOT expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 117 (expr2 -> expr DOT expr .)
    SEMI            reduce using rule 117 (expr2 -> expr DOT expr .)
    RBRACKET        reduce using rule 117 (expr2 -> expr DOT expr .)
    RBRACE          reduce using rule 117 (expr2 -> expr DOT expr .)
    CASE            reduce using rule 117 (expr2 -> expr DOT expr .)
    OTHERWISE       reduce using rule 117 (expr2 -> expr DOT expr .)
    END             reduce using rule 117 (expr2 -> expr DOT expr .)
    error           reduce using rule 117 (expr2 -> expr DOT expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! TRANSPOSE       [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! LBRACE          [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! LBRACKET        [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! AND             [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! LDIV            [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! COLON           [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! DIV             [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! DOT             [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! DOTDIV          [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! DOTEXP          [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! DOTMUL          [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! EQUALEQUAL      [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! EXP             [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! GREATEREQUAL    [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! GREATERTHAN     [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! LESSEQUAL       [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! LESSTHAN        [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! MINUS           [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! TIMES           [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! NOTEQUAL        [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! OR              [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! OROR            [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! PLUS            [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! EQUALS          [ reduce using rule 117 (expr2 -> expr DOT expr .) ]
  ! OREQUALS        [ reduce using rule 117 (expr2 -> expr DOT expr .) ]


state 157

    (125) expr2 -> expr LESSEQUAL expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    FIELD           reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    LBRACE          reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    LBRACKET        reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    AND             reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    LDIV            reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    COLON           reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    DOT             reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    DOTDIV          reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    DOTEXP          reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    DOTMUL          reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    EQUALEQUAL      reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    EXP             reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    GREATEREQUAL    reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    GREATERTHAN     reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    LESSEQUAL       reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    LESSTHAN        reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    NOTEQUAL        reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    OR              reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    OROR            reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    EQUALS          reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    OREQUALS        reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    COMMA           reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    SEMI            reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    RBRACKET        reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    RBRACE          reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    CASE            reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    OTHERWISE       reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    END             reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    error           reduce using rule 125 (expr2 -> expr LESSEQUAL expr .)
    TRANSPOSE       shift and go to state 89
    DIV             shift and go to state 73
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    PLUS            shift and go to state 77

  ! TRANSPOSE       [ reduce using rule 125 (expr2 -> expr LESSEQUAL expr .) ]
  ! DIV             [ reduce using rule 125 (expr2 -> expr LESSEQUAL expr .) ]
  ! MINUS           [ reduce using rule 125 (expr2 -> expr LESSEQUAL expr .) ]
  ! TIMES           [ reduce using rule 125 (expr2 -> expr LESSEQUAL expr .) ]
  ! PLUS            [ reduce using rule 125 (expr2 -> expr LESSEQUAL expr .) ]
  ! FIELD           [ shift and go to state 94 ]
  ! LBRACE          [ shift and go to state 93 ]
  ! LBRACKET        [ shift and go to state 80 ]
  ! AND             [ shift and go to state 71 ]
  ! LDIV            [ shift and go to state 78 ]
  ! COLON           [ shift and go to state 95 ]
  ! DOT             [ shift and go to state 90 ]
  ! DOTDIV          [ shift and go to state 83 ]
  ! DOTEXP          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 82 ]
  ! EQUALEQUAL      [ shift and go to state 92 ]
  ! EXP             [ shift and go to state 84 ]
  ! GREATEREQUAL    [ shift and go to state 74 ]
  ! GREATERTHAN     [ shift and go to state 72 ]
  ! LESSEQUAL       [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 87 ]
  ! NOTEQUAL        [ shift and go to state 88 ]
  ! OR              [ shift and go to state 70 ]
  ! OROR            [ shift and go to state 127 ]
  ! EQUALS          [ shift and go to state 79 ]
  ! OREQUALS        [ shift and go to state 85 ]


state 158

    (121) expr2 -> expr EQUALEQUAL expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .)
    SEMI            reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .)
    RBRACKET        reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .)
    RBRACE          reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .)
    CASE            reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .)
    OTHERWISE       reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .)
    END             reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .)
    error           reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! TRANSPOSE       [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! LBRACE          [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! LBRACKET        [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! AND             [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! LDIV            [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! COLON           [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! DIV             [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! DOT             [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! DOTDIV          [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! DOTEXP          [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! DOTMUL          [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! EQUALEQUAL      [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! EXP             [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! GREATEREQUAL    [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! GREATERTHAN     [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! LESSEQUAL       [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! LESSTHAN        [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! MINUS           [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! TIMES           [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! NOTEQUAL        [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! OR              [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! OROR            [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! PLUS            [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! EQUALS          [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]
  ! OREQUALS        [ reduce using rule 121 (expr2 -> expr EQUALEQUAL expr .) ]


state 159

    (110) expr -> expr LBRACE RBRACE .

    FIELD           reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    TRANSPOSE       reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    LBRACE          reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    LBRACKET        reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    AND             reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    LDIV            reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    COLON           reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    DIV             reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    DOT             reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    DOTDIV          reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    DOTEXP          reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    DOTMUL          reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    EQUALEQUAL      reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    EXP             reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    GREATEREQUAL    reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    GREATERTHAN     reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    LESSEQUAL       reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    LESSTHAN        reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    MINUS           reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    TIMES           reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    NOTEQUAL        reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    OR              reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    OROR            reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    PLUS            reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    EQUALS          reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    OREQUALS        reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    COMMA           reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    SEMI            reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    CASE            reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    OTHERWISE       reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    END             reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    error           reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    RBRACKET        reduce using rule 110 (expr -> expr LBRACE RBRACE .)
    RBRACE          reduce using rule 110 (expr -> expr LBRACE RBRACE .)


state 160

    (109) expr -> expr LBRACE expr_list . RBRACE

    RBRACE          shift and go to state 198


state 161

    (115) expr2 -> expr COLON expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 115 (expr2 -> expr COLON expr .)
    SEMI            reduce using rule 115 (expr2 -> expr COLON expr .)
    RBRACKET        reduce using rule 115 (expr2 -> expr COLON expr .)
    RBRACE          reduce using rule 115 (expr2 -> expr COLON expr .)
    CASE            reduce using rule 115 (expr2 -> expr COLON expr .)
    OTHERWISE       reduce using rule 115 (expr2 -> expr COLON expr .)
    END             reduce using rule 115 (expr2 -> expr COLON expr .)
    error           reduce using rule 115 (expr2 -> expr COLON expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! TRANSPOSE       [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! LBRACE          [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! LBRACKET        [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! AND             [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! LDIV            [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! COLON           [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! DIV             [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! DOT             [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! DOTDIV          [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! DOTEXP          [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! DOTMUL          [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! EQUALEQUAL      [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! EXP             [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! GREATEREQUAL    [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! GREATERTHAN     [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! LESSEQUAL       [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! LESSTHAN        [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! MINUS           [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! TIMES           [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! NOTEQUAL        [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! OR              [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! OROR            [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! PLUS            [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! EQUALS          [ reduce using rule 115 (expr2 -> expr COLON expr .) ]
  ! OREQUALS        [ reduce using rule 115 (expr2 -> expr COLON expr .) ]


state 162

    (68) exprs -> exprs COMMA expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    COMMA           reduce using rule 68 (exprs -> exprs COMMA expr .)
    SEMI            reduce using rule 68 (exprs -> exprs COMMA expr .)
    RBRACKET        reduce using rule 68 (exprs -> exprs COMMA expr .)
    RBRACE          reduce using rule 68 (exprs -> exprs COMMA expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85


state 163

    (102) matrix -> LBRACKET concat_list RBRACKET .

    SEMI            reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    FIELD           reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    TRANSPOSE       reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    LBRACE          reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    LBRACKET        reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    AND             reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    LDIV            reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    COLON           reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    DIV             reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    DOT             reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    DOTDIV          reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    DOTEXP          reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    DOTMUL          reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    EQUALEQUAL      reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    EXP             reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    GREATEREQUAL    reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    GREATERTHAN     reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    LESSEQUAL       reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    LESSTHAN        reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    MINUS           reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    TIMES           reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    NOTEQUAL        reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    OR              reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    OROR            reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    PLUS            reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    EQUALS          reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    OREQUALS        reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    COMMA           reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    CASE            reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    OTHERWISE       reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    END             reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    error           reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    RBRACKET        reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)
    RBRACE          reduce using rule 102 (matrix -> LBRACKET concat_list RBRACKET .)


state 164

    (103) matrix -> LBRACKET concat_list SEMI . RBRACKET
    (64) concat_list -> concat_list SEMI . expr_list
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    RBRACKET        shift and go to state 199
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    exprs                          shift and go to state 31
    cellarray                      shift and go to state 25
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    expr_list                      shift and go to state 200
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    matrix                         shift and go to state 43
    expr                           shift and go to state 107

state 165

    (106) expr -> LBRACKET expr RBRACKET .

    FIELD           reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    TRANSPOSE       reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    LBRACE          reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    LBRACKET        reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    AND             reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    LDIV            reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    COLON           reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    DIV             reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    DOT             reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    DOTDIV          reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    DOTEXP          reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    DOTMUL          reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    EQUALEQUAL      reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    EXP             reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    GREATEREQUAL    reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    GREATERTHAN     reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    LESSEQUAL       reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    LESSTHAN        reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    TIMES           reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    NOTEQUAL        reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    OR              reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    OROR            reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    EQUALS          reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    OREQUALS        reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    SEMI            reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    CASE            reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    OTHERWISE       reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    END             reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    error           reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)
    RBRACE          reduce using rule 106 (expr -> LBRACKET expr RBRACKET .)


state 166

    (104) matrix -> LBRACKET expr_list RBRACKET .

    SEMI            reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    FIELD           reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    TRANSPOSE       reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    LBRACE          reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    LBRACKET        reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    AND             reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    LDIV            reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    COLON           reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    DIV             reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    DOT             reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    DOTDIV          reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    DOTEXP          reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    DOTMUL          reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    EQUALEQUAL      reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    EXP             reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    GREATEREQUAL    reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    GREATERTHAN     reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    LESSEQUAL       reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    LESSTHAN        reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    MINUS           reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    TIMES           reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    NOTEQUAL        reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    OR              reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    OROR            reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    PLUS            reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    EQUALS          reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    OREQUALS        reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    COMMA           reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    CASE            reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    OTHERWISE       reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    END             reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    error           reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    RBRACKET        reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)
    RBRACE          reduce using rule 104 (matrix -> LBRACKET expr_list RBRACKET .)


state 167

    (105) matrix -> LBRACKET expr_list SEMI . RBRACKET
    (63) concat_list -> expr_list SEMI . expr_list
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    RBRACKET        shift and go to state 201
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    exprs                          shift and go to state 31
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    expr_list                      shift and go to state 202
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    expr                           shift and go to state 107

state 168

    (33) global_stmt -> GLOBAL IDENTIFIER EQUALS . expr SEMI
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    string                         shift and go to state 42
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    expr2                          shift and go to state 16
    colon                          shift and go to state 28
    expr                           shift and go to state 203

state 169

    (32) global_stmt -> GLOBAL global_list SEMI .

    CONTINUE        reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    BREAK           reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    GLOBAL          reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    PERSISTENT      reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    IDENTIFIER      reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    FOR             reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    IF              reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    SEMI            reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    COMMA           reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    RETURN          reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    SWITCH          reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    TRY             reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    WHILE           reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    NOTEQUAL        reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    LBRACKET        reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    NUMBER          reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    STRING          reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    COLON           reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    LBRACE          reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    MINUS           reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    PLUS            reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    END             reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    FUNCTION        reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    $end            reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    CATCH           reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    CASE            reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    OTHERWISE       reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    ELSE            reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)
    ELSEIF          reduce using rule 32 (global_stmt -> GLOBAL global_list SEMI .)


state 170

    (100) cellarray -> LBRACE concat_list SEMI . RBRACE
    (64) concat_list -> concat_list SEMI . expr_list
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    RBRACE          shift and go to state 204
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    exprs                          shift and go to state 31
    cellarray                      shift and go to state 25
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    expr_list                      shift and go to state 200
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    matrix                         shift and go to state 43
    expr                           shift and go to state 107

state 171

    (99) cellarray -> LBRACE concat_list RBRACE .

    FIELD           reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    TRANSPOSE       reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    LBRACE          reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    LBRACKET        reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    AND             reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    LDIV            reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    COLON           reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    DIV             reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    DOT             reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    DOTDIV          reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    DOTEXP          reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    DOTMUL          reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    EQUALEQUAL      reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    EXP             reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    GREATEREQUAL    reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    GREATERTHAN     reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    LESSEQUAL       reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    LESSTHAN        reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    MINUS           reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    TIMES           reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    NOTEQUAL        reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    OR              reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    OROR            reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    PLUS            reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    EQUALS          reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    OREQUALS        reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    COMMA           reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    SEMI            reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    CASE            reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    OTHERWISE       reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    END             reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    error           reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    RBRACKET        reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)
    RBRACE          reduce using rule 99 (cellarray -> LBRACE concat_list RBRACE .)


state 172

    (63) concat_list -> expr_list SEMI . expr_list
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    exprs                          shift and go to state 31
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    expr_list                      shift and go to state 202
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    expr                           shift and go to state 107

state 173

    (98) cellarray -> LBRACE expr_list RBRACE .

    FIELD           reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    TRANSPOSE       reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    LBRACE          reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    LBRACKET        reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    AND             reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    LDIV            reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    COLON           reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    DIV             reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    DOT             reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    DOTDIV          reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    DOTEXP          reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    DOTMUL          reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    EQUALEQUAL      reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    EXP             reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    GREATEREQUAL    reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    GREATERTHAN     reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    LESSEQUAL       reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    LESSTHAN        reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    MINUS           reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    TIMES           reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    NOTEQUAL        reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    OR              reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    OROR            reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    PLUS            reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    EQUALS          reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    OREQUALS        reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    COMMA           reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    SEMI            reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    CASE            reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    OTHERWISE       reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    END             reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    error           reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    RBRACKET        reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)
    RBRACE          reduce using rule 98 (cellarray -> LBRACE expr_list RBRACE .)


state 174

    (45) try_catch -> TRY stmt_list CATCH stmt_list . end
    (62) stmt_list -> stmt_list . stmt
    (91) end -> . END
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    END             shift and go to state 112
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    end                            shift and go to state 205
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    persistent_stmt                shift and go to state 23
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 175

    (80) for_stmt -> FOR matrix EQUALS expr . SEMI stmt_list end
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    SEMI            shift and go to state 206
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85


state 176

    (78) for_stmt -> FOR IDENTIFIER EQUALS expr . SEMI stmt_list end
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    SEMI            shift and go to state 207
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85


state 177

    (79) for_stmt -> FOR LBRACKET IDENTIFIER EQUALS . expr RBRACKET SEMI stmt_list end
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    expr2                          shift and go to state 16
    string                         shift and go to state 42
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    colon                          shift and go to state 28
    expr                           shift and go to state 208

state 178

    (5) top -> top func_decl stmt_list end . semi_opt
    (6) semi_opt -> .
    (7) semi_opt -> . semi_opt SEMI
    (8) semi_opt -> . semi_opt COMMA

    SEMI            reduce using rule 6 (semi_opt -> .)
    COMMA           reduce using rule 6 (semi_opt -> .)
    FUNCTION        reduce using rule 6 (semi_opt -> .)
    $end            reduce using rule 6 (semi_opt -> .)

    semi_opt                       shift and go to state 209

state 179

    (4) top -> top func_decl end semi_opt .
    (7) semi_opt -> semi_opt . SEMI
    (8) semi_opt -> semi_opt . COMMA

    FUNCTION        reduce using rule 4 (top -> top func_decl end semi_opt .)
    $end            reduce using rule 4 (top -> top func_decl end semi_opt .)
    SEMI            shift and go to state 191
    COMMA           shift and go to state 187


state 180

    (49) func_decl -> FUNCTION IDENTIFIER args_opt . SEMI

    SEMI            shift and go to state 210


state 181

    (52) args_opt -> LBRACKET . RBRACKET
    (53) args_opt -> LBRACKET . expr_list RBRACKET
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    RBRACKET        shift and go to state 211
    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    exprs                          shift and go to state 31
    cellarray                      shift and go to state 25
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    string                         shift and go to state 42
    expr_list                      shift and go to state 212
    colon                          shift and go to state 28
    expr2                          shift and go to state 16
    expr                           shift and go to state 107

state 182

    (57) ret -> LBRACKET RBRACKET .

    EQUALS          reduce using rule 57 (ret -> LBRACKET RBRACKET .)


state 183

    (58) ret -> LBRACKET expr_list . RBRACKET

    RBRACKET        shift and go to state 213


state 184

    (50) func_decl -> FUNCTION ret EQUALS . IDENTIFIER args_opt SEMI

    IDENTIFIER      shift and go to state 214


state 185

    (36) persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr . SEMI
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    SEMI            shift and go to state 215
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85


state 186

    (131) expr2 -> expr OROR expr .
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

  ! shift/reduce conflict for FIELD resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LDIV resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for DOTEXP resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OREQUALS resolved as shift
    COMMA           reduce using rule 131 (expr2 -> expr OROR expr .)
    SEMI            reduce using rule 131 (expr2 -> expr OROR expr .)
    RBRACKET        reduce using rule 131 (expr2 -> expr OROR expr .)
    RBRACE          reduce using rule 131 (expr2 -> expr OROR expr .)
    CASE            reduce using rule 131 (expr2 -> expr OROR expr .)
    OTHERWISE       reduce using rule 131 (expr2 -> expr OROR expr .)
    END             reduce using rule 131 (expr2 -> expr OROR expr .)
    error           reduce using rule 131 (expr2 -> expr OROR expr .)
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85

  ! FIELD           [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! TRANSPOSE       [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LBRACE          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LBRACKET        [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! AND             [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LDIV            [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! COLON           [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DIV             [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DOT             [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DOTDIV          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DOTEXP          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! DOTMUL          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! EQUALEQUAL      [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! EXP             [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! GREATEREQUAL    [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! GREATERTHAN     [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LESSEQUAL       [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! LESSTHAN        [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! MINUS           [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! TIMES           [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! NOTEQUAL        [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! OR              [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! OROR            [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! PLUS            [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! EQUALS          [ reduce using rule 131 (expr2 -> expr OROR expr .) ]
  ! OREQUALS        [ reduce using rule 131 (expr2 -> expr OROR expr .) ]


state 187

    (8) semi_opt -> semi_opt COMMA .

    SEMI            reduce using rule 8 (semi_opt -> semi_opt COMMA .)
    COMMA           reduce using rule 8 (semi_opt -> semi_opt COMMA .)
    FUNCTION        reduce using rule 8 (semi_opt -> semi_opt COMMA .)
    $end            reduce using rule 8 (semi_opt -> semi_opt COMMA .)
    CASE            reduce using rule 8 (semi_opt -> semi_opt COMMA .)
    OTHERWISE       reduce using rule 8 (semi_opt -> semi_opt COMMA .)
    END             reduce using rule 8 (semi_opt -> semi_opt COMMA .)


state 188

    (44) case_list -> OTHERWISE . stmt_list
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    for_stmt                       shift and go to state 13
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list                      shift and go to state 216
    persistent_stmt                shift and go to state 23
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 189

    (40) switch_stmt -> SWITCH expr semi_opt case_list . end
    (91) end -> . END

    END             shift and go to state 112

    end                            shift and go to state 217

state 190

    (42) case_list -> CASE . expr sep stmt_list_opt case_list
    (43) case_list -> CASE . expr error stmt_list_opt case_list
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    expr2                          shift and go to state 16
    string                         shift and go to state 42
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    colon                          shift and go to state 28
    expr                           shift and go to state 218

state 191

    (7) semi_opt -> semi_opt SEMI .

    SEMI            reduce using rule 7 (semi_opt -> semi_opt SEMI .)
    COMMA           reduce using rule 7 (semi_opt -> semi_opt SEMI .)
    FUNCTION        reduce using rule 7 (semi_opt -> semi_opt SEMI .)
    $end            reduce using rule 7 (semi_opt -> semi_opt SEMI .)
    CASE            reduce using rule 7 (semi_opt -> semi_opt SEMI .)
    OTHERWISE       reduce using rule 7 (semi_opt -> semi_opt SEMI .)
    END             reduce using rule 7 (semi_opt -> semi_opt SEMI .)


state 192

    (60) stmt_list_opt -> stmt_list .
    (62) stmt_list -> stmt_list . stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CASE            reduce using rule 60 (stmt_list_opt -> stmt_list .)
    OTHERWISE       reduce using rule 60 (stmt_list_opt -> stmt_list .)
    END             reduce using rule 60 (stmt_list_opt -> stmt_list .)
    ELSE            reduce using rule 60 (stmt_list_opt -> stmt_list .)
    ELSEIF          reduce using rule 60 (stmt_list_opt -> stmt_list .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    for_stmt                       shift and go to state 13
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    persistent_stmt                shift and go to state 23
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 193

    (74) if_stmt -> IF expr error stmt_list_opt . elseif_stmt end
    (75) elseif_stmt -> .
    (76) elseif_stmt -> . ELSE stmt_list_opt
    (77) elseif_stmt -> . ELSEIF expr sep stmt_list_opt elseif_stmt

    END             reduce using rule 75 (elseif_stmt -> .)
    ELSE            shift and go to state 220
    ELSEIF          shift and go to state 219

    elseif_stmt                    shift and go to state 221

state 194

    (73) if_stmt -> IF expr sep stmt_list_opt . elseif_stmt end
    (75) elseif_stmt -> .
    (76) elseif_stmt -> . ELSE stmt_list_opt
    (77) elseif_stmt -> . ELSEIF expr sep stmt_list_opt elseif_stmt

    END             reduce using rule 75 (elseif_stmt -> .)
    ELSE            shift and go to state 220
    ELSEIF          shift and go to state 219

    elseif_stmt                    shift and go to state 222

state 195

    (70) while_stmt -> WHILE expr SEMI stmt_list . end
    (62) stmt_list -> stmt_list . stmt
    (91) end -> . END
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    END             shift and go to state 112
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    end                            shift and go to state 223
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 196

    (111) expr -> expr LBRACKET expr_list RBRACKET .

    FIELD           reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    TRANSPOSE       reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    LBRACE          reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    LBRACKET        reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    AND             reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    LDIV            reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    COLON           reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    DIV             reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    DOT             reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    DOTDIV          reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    DOTEXP          reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    DOTMUL          reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    EQUALEQUAL      reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    EXP             reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    GREATEREQUAL    reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    GREATERTHAN     reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    LESSEQUAL       reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    LESSTHAN        reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    MINUS           reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    TIMES           reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    NOTEQUAL        reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    OR              reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    OROR            reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    PLUS            reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    EQUALS          reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    OREQUALS        reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    COMMA           reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    SEMI            reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    CASE            reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    OTHERWISE       reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    END             reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    error           reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    RBRACKET        reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)
    RBRACE          reduce using rule 111 (expr -> expr LBRACKET expr_list RBRACKET .)


state 197

    (34) foo_stmt -> expr OROR expr SEMI .

    END             reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    CONTINUE        reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    BREAK           reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    GLOBAL          reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    PERSISTENT      reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    IDENTIFIER      reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    FOR             reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    IF              reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    SEMI            reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    COMMA           reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    RETURN          reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    SWITCH          reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    TRY             reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    WHILE           reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    NOTEQUAL        reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    LBRACKET        reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    NUMBER          reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    STRING          reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    COLON           reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    LBRACE          reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    MINUS           reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    PLUS            reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    FUNCTION        reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    $end            reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    CATCH           reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    ELSE            reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    ELSEIF          reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    CASE            reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)
    OTHERWISE       reduce using rule 34 (foo_stmt -> expr OROR expr SEMI .)


state 198

    (109) expr -> expr LBRACE expr_list RBRACE .

    FIELD           reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    TRANSPOSE       reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    LBRACE          reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    LBRACKET        reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    AND             reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    LDIV            reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    COLON           reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    DIV             reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    DOT             reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    DOTDIV          reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    DOTEXP          reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    DOTMUL          reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    EQUALEQUAL      reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    EXP             reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    GREATEREQUAL    reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    GREATERTHAN     reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    LESSEQUAL       reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    LESSTHAN        reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    MINUS           reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    TIMES           reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    NOTEQUAL        reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    OR              reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    OROR            reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    PLUS            reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    EQUALS          reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    OREQUALS        reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    COMMA           reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    SEMI            reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    CASE            reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    OTHERWISE       reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    END             reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    error           reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    RBRACKET        reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)
    RBRACE          reduce using rule 109 (expr -> expr LBRACE expr_list RBRACE .)


state 199

    (103) matrix -> LBRACKET concat_list SEMI RBRACKET .

    SEMI            reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    FIELD           reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    TRANSPOSE       reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    LBRACE          reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    LBRACKET        reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    AND             reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    LDIV            reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    COLON           reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    DIV             reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    DOT             reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    DOTDIV          reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    DOTEXP          reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    DOTMUL          reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    EQUALEQUAL      reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    EXP             reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    GREATEREQUAL    reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    GREATERTHAN     reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    LESSEQUAL       reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    LESSTHAN        reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    MINUS           reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    TIMES           reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    NOTEQUAL        reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    OR              reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    OROR            reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    PLUS            reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    EQUALS          reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    OREQUALS        reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    COMMA           reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    CASE            reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    OTHERWISE       reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    END             reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    error           reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    RBRACKET        reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)
    RBRACE          reduce using rule 103 (matrix -> LBRACKET concat_list SEMI RBRACKET .)


state 200

    (64) concat_list -> concat_list SEMI expr_list .

    RBRACKET        reduce using rule 64 (concat_list -> concat_list SEMI expr_list .)
    SEMI            reduce using rule 64 (concat_list -> concat_list SEMI expr_list .)
    RBRACE          reduce using rule 64 (concat_list -> concat_list SEMI expr_list .)


state 201

    (105) matrix -> LBRACKET expr_list SEMI RBRACKET .

    SEMI            reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    FIELD           reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    TRANSPOSE       reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    LBRACE          reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    LBRACKET        reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    AND             reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    LDIV            reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    COLON           reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    DIV             reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    DOT             reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    DOTDIV          reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    DOTEXP          reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    DOTMUL          reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    EQUALEQUAL      reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    EXP             reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    GREATEREQUAL    reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    GREATERTHAN     reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    LESSEQUAL       reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    LESSTHAN        reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    MINUS           reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    TIMES           reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    NOTEQUAL        reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    OR              reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    OROR            reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    PLUS            reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    EQUALS          reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    OREQUALS        reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    COMMA           reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    CASE            reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    OTHERWISE       reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    END             reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    error           reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    RBRACKET        reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)
    RBRACE          reduce using rule 105 (matrix -> LBRACKET expr_list SEMI RBRACKET .)


state 202

    (63) concat_list -> expr_list SEMI expr_list .

    RBRACKET        reduce using rule 63 (concat_list -> expr_list SEMI expr_list .)
    SEMI            reduce using rule 63 (concat_list -> expr_list SEMI expr_list .)
    RBRACE          reduce using rule 63 (concat_list -> expr_list SEMI expr_list .)


state 203

    (33) global_stmt -> GLOBAL IDENTIFIER EQUALS expr . SEMI
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    SEMI            shift and go to state 224
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85


state 204

    (100) cellarray -> LBRACE concat_list SEMI RBRACE .

    FIELD           reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    TRANSPOSE       reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    LBRACE          reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    LBRACKET        reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    AND             reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    LDIV            reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    COLON           reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    DIV             reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    DOT             reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    DOTDIV          reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    DOTEXP          reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    DOTMUL          reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    EQUALEQUAL      reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    EXP             reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    GREATEREQUAL    reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    GREATERTHAN     reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    LESSEQUAL       reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    LESSTHAN        reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    MINUS           reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    TIMES           reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    NOTEQUAL        reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    OR              reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    OROR            reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    PLUS            reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    EQUALS          reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    OREQUALS        reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    COMMA           reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    SEMI            reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    CASE            reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    OTHERWISE       reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    END             reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    error           reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    RBRACKET        reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)
    RBRACE          reduce using rule 100 (cellarray -> LBRACE concat_list SEMI RBRACE .)


state 205

    (45) try_catch -> TRY stmt_list CATCH stmt_list end .

    END             reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    CONTINUE        reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    BREAK           reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    GLOBAL          reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    PERSISTENT      reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    IDENTIFIER      reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    FOR             reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    IF              reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    SEMI            reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    COMMA           reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    RETURN          reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    SWITCH          reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    TRY             reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    WHILE           reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    NOTEQUAL        reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    LBRACKET        reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    NUMBER          reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    STRING          reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    COLON           reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    LBRACE          reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    MINUS           reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    PLUS            reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    ELSE            reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    ELSEIF          reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    FUNCTION        reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    $end            reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    CATCH           reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    CASE            reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)
    OTHERWISE       reduce using rule 45 (try_catch -> TRY stmt_list CATCH stmt_list end .)


state 206

    (80) for_stmt -> FOR matrix EQUALS expr SEMI . stmt_list end
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list                      shift and go to state 225
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 207

    (78) for_stmt -> FOR IDENTIFIER EQUALS expr SEMI . stmt_list end
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list                      shift and go to state 226
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 208

    (79) for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr . RBRACKET SEMI stmt_list end
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr

    RBRACKET        shift and go to state 227
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85


state 209

    (5) top -> top func_decl stmt_list end semi_opt .
    (7) semi_opt -> semi_opt . SEMI
    (8) semi_opt -> semi_opt . COMMA

    FUNCTION        reduce using rule 5 (top -> top func_decl stmt_list end semi_opt .)
    $end            reduce using rule 5 (top -> top func_decl stmt_list end semi_opt .)
    SEMI            shift and go to state 191
    COMMA           shift and go to state 187


state 210

    (49) func_decl -> FUNCTION IDENTIFIER args_opt SEMI .

    END             reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    CONTINUE        reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    BREAK           reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    GLOBAL          reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    PERSISTENT      reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    IDENTIFIER      reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    FOR             reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    IF              reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    SEMI            reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    COMMA           reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    RETURN          reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    SWITCH          reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    TRY             reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    WHILE           reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    NOTEQUAL        reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    LBRACKET        reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    NUMBER          reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    STRING          reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    COLON           reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    LBRACE          reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    MINUS           reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    PLUS            reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    FUNCTION        reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)
    $end            reduce using rule 49 (func_decl -> FUNCTION IDENTIFIER args_opt SEMI .)


state 211

    (52) args_opt -> LBRACKET RBRACKET .

    SEMI            reduce using rule 52 (args_opt -> LBRACKET RBRACKET .)


state 212

    (53) args_opt -> LBRACKET expr_list . RBRACKET

    RBRACKET        shift and go to state 228


state 213

    (58) ret -> LBRACKET expr_list RBRACKET .

    EQUALS          reduce using rule 58 (ret -> LBRACKET expr_list RBRACKET .)


state 214

    (50) func_decl -> FUNCTION ret EQUALS IDENTIFIER . args_opt SEMI
    (51) args_opt -> .
    (52) args_opt -> . LBRACKET RBRACKET
    (53) args_opt -> . LBRACKET expr_list RBRACKET

    SEMI            reduce using rule 51 (args_opt -> .)
    LBRACKET        shift and go to state 181

    args_opt                       shift and go to state 229

state 215

    (36) persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .

    CONTINUE        reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    BREAK           reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    GLOBAL          reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    PERSISTENT      reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    IDENTIFIER      reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    FOR             reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    IF              reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    SEMI            reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    COMMA           reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    RETURN          reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    SWITCH          reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    TRY             reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    WHILE           reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    NOTEQUAL        reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    LBRACKET        reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    NUMBER          reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    STRING          reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    COLON           reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    LBRACE          reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    MINUS           reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    PLUS            reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    END             reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    FUNCTION        reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    $end            reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    ELSE            reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    ELSEIF          reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    CATCH           reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    CASE            reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)
    OTHERWISE       reduce using rule 36 (persistent_stmt -> PERSISTENT IDENTIFIER EQUALS expr SEMI .)


state 216

    (44) case_list -> OTHERWISE stmt_list .
    (62) stmt_list -> stmt_list . stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    END             reduce using rule 44 (case_list -> OTHERWISE stmt_list .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    for_stmt                       shift and go to state 13
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    persistent_stmt                shift and go to state 23
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 217

    (40) switch_stmt -> SWITCH expr semi_opt case_list end .

    END             reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    CONTINUE        reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    BREAK           reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    GLOBAL          reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    PERSISTENT      reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    IDENTIFIER      reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    FOR             reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    IF              reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    SEMI            reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    COMMA           reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    RETURN          reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    SWITCH          reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    TRY             reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    WHILE           reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    NOTEQUAL        reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    LBRACKET        reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    NUMBER          reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    STRING          reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    COLON           reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    LBRACE          reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    MINUS           reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    PLUS            reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    FUNCTION        reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    $end            reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    CASE            reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    OTHERWISE       reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    CATCH           reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    ELSE            reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)
    ELSEIF          reduce using rule 40 (switch_stmt -> SWITCH expr semi_opt case_list end .)


state 218

    (42) case_list -> CASE expr . sep stmt_list_opt case_list
    (43) case_list -> CASE expr . error stmt_list_opt case_list
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr
    (71) sep -> . COMMA
    (72) sep -> . SEMI

    error           shift and go to state 230
    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85
    COMMA           shift and go to state 129
    SEMI            shift and go to state 131

    sep                            shift and go to state 231

state 219

    (77) elseif_stmt -> ELSEIF . expr sep stmt_list_opt elseif_stmt
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    IDENTIFIER      shift and go to state 57
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    cellarray                      shift and go to state 25
    expr2                          shift and go to state 16
    string                         shift and go to state 42
    matrix                         shift and go to state 43
    number                         shift and go to state 46
    expr1                          shift and go to state 21
    colon                          shift and go to state 28
    expr                           shift and go to state 232

state 220

    (76) elseif_stmt -> ELSE . stmt_list_opt
    (59) stmt_list_opt -> .
    (60) stmt_list_opt -> . stmt_list
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    END             reduce using rule 59 (stmt_list_opt -> .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    for_stmt                       shift and go to state 13
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list_opt                  shift and go to state 233
    stmt_list                      shift and go to state 192
    if_stmt                        shift and go to state 47
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 221

    (74) if_stmt -> IF expr error stmt_list_opt elseif_stmt . end
    (91) end -> . END

    END             shift and go to state 112

    end                            shift and go to state 234

state 222

    (73) if_stmt -> IF expr sep stmt_list_opt elseif_stmt . end
    (91) end -> . END

    END             shift and go to state 112

    end                            shift and go to state 235

state 223

    (70) while_stmt -> WHILE expr SEMI stmt_list end .

    CONTINUE        reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    BREAK           reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    GLOBAL          reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    PERSISTENT      reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    IDENTIFIER      reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    FOR             reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    IF              reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    SEMI            reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    COMMA           reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    RETURN          reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    SWITCH          reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    TRY             reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    WHILE           reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    NOTEQUAL        reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    LBRACKET        reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    NUMBER          reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    STRING          reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    COLON           reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    LBRACE          reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    MINUS           reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    PLUS            reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    END             reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    FUNCTION        reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    $end            reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    ELSE            reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    ELSEIF          reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    CASE            reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    OTHERWISE       reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)
    CATCH           reduce using rule 70 (while_stmt -> WHILE expr SEMI stmt_list end .)


state 224

    (33) global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .

    CONTINUE        reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    BREAK           reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    GLOBAL          reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    PERSISTENT      reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    IDENTIFIER      reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    FOR             reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    IF              reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    SEMI            reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    COMMA           reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    RETURN          reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    SWITCH          reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    TRY             reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    WHILE           reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    NOTEQUAL        reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    LBRACKET        reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    NUMBER          reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    STRING          reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    COLON           reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    LBRACE          reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    MINUS           reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    PLUS            reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    END             reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    FUNCTION        reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    $end            reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    CATCH           reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    CASE            reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    OTHERWISE       reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    ELSE            reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)
    ELSEIF          reduce using rule 33 (global_stmt -> GLOBAL IDENTIFIER EQUALS expr SEMI .)


state 225

    (80) for_stmt -> FOR matrix EQUALS expr SEMI stmt_list . end
    (62) stmt_list -> stmt_list . stmt
    (91) end -> . END
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    END             shift and go to state 112
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    end                            shift and go to state 236
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 226

    (78) for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list . end
    (62) stmt_list -> stmt_list . stmt
    (91) end -> . END
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    END             shift and go to state 112
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    end                            shift and go to state 237
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 227

    (79) for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET . SEMI stmt_list end

    SEMI            shift and go to state 238


state 228

    (53) args_opt -> LBRACKET expr_list RBRACKET .

    SEMI            reduce using rule 53 (args_opt -> LBRACKET expr_list RBRACKET .)


state 229

    (50) func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt . SEMI

    SEMI            shift and go to state 239


state 230

    (43) case_list -> CASE expr error . stmt_list_opt case_list
    (59) stmt_list_opt -> .
    (60) stmt_list_opt -> . stmt_list
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CASE            reduce using rule 59 (stmt_list_opt -> .)
    OTHERWISE       reduce using rule 59 (stmt_list_opt -> .)
    END             reduce using rule 59 (stmt_list_opt -> .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    for_stmt                       shift and go to state 13
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list_opt                  shift and go to state 240
    stmt_list                      shift and go to state 192
    persistent_stmt                shift and go to state 23
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    expr_list                      shift and go to state 27
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 231

    (42) case_list -> CASE expr sep . stmt_list_opt case_list
    (59) stmt_list_opt -> .
    (60) stmt_list_opt -> . stmt_list
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CASE            reduce using rule 59 (stmt_list_opt -> .)
    OTHERWISE       reduce using rule 59 (stmt_list_opt -> .)
    END             reduce using rule 59 (stmt_list_opt -> .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    for_stmt                       shift and go to state 13
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list_opt                  shift and go to state 241
    stmt_list                      shift and go to state 192
    persistent_stmt                shift and go to state 23
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    expr_list                      shift and go to state 27
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 232

    (77) elseif_stmt -> ELSEIF expr . sep stmt_list_opt elseif_stmt
    (107) expr -> expr . FIELD
    (108) expr -> expr . TRANSPOSE
    (109) expr -> expr . LBRACE expr_list RBRACE
    (110) expr -> expr . LBRACE RBRACE
    (111) expr -> expr . LBRACKET expr_list RBRACKET
    (112) expr -> expr . LBRACKET RBRACKET
    (113) expr2 -> expr . AND expr
    (114) expr2 -> expr . LDIV expr
    (115) expr2 -> expr . COLON expr
    (116) expr2 -> expr . DIV expr
    (117) expr2 -> expr . DOT expr
    (118) expr2 -> expr . DOTDIV expr
    (119) expr2 -> expr . DOTEXP expr
    (120) expr2 -> expr . DOTMUL expr
    (121) expr2 -> expr . EQUALEQUAL expr
    (122) expr2 -> expr . EXP expr
    (123) expr2 -> expr . GREATEREQUAL expr
    (124) expr2 -> expr . GREATERTHAN expr
    (125) expr2 -> expr . LESSEQUAL expr
    (126) expr2 -> expr . LESSTHAN expr
    (127) expr2 -> expr . MINUS expr
    (128) expr2 -> expr . TIMES expr
    (129) expr2 -> expr . NOTEQUAL expr
    (130) expr2 -> expr . OR expr
    (131) expr2 -> expr . OROR expr
    (132) expr2 -> expr . PLUS expr
    (133) expr2 -> expr . EQUALS expr
    (134) expr2 -> expr . OREQUALS expr
    (71) sep -> . COMMA
    (72) sep -> . SEMI

    FIELD           shift and go to state 94
    TRANSPOSE       shift and go to state 89
    LBRACE          shift and go to state 93
    LBRACKET        shift and go to state 80
    AND             shift and go to state 71
    LDIV            shift and go to state 78
    COLON           shift and go to state 95
    DIV             shift and go to state 73
    DOT             shift and go to state 90
    DOTDIV          shift and go to state 83
    DOTEXP          shift and go to state 76
    DOTMUL          shift and go to state 82
    EQUALEQUAL      shift and go to state 92
    EXP             shift and go to state 84
    GREATEREQUAL    shift and go to state 74
    GREATERTHAN     shift and go to state 72
    LESSEQUAL       shift and go to state 91
    LESSTHAN        shift and go to state 87
    MINUS           shift and go to state 81
    TIMES           shift and go to state 75
    NOTEQUAL        shift and go to state 88
    OR              shift and go to state 70
    OROR            shift and go to state 127
    PLUS            shift and go to state 77
    EQUALS          shift and go to state 79
    OREQUALS        shift and go to state 85
    COMMA           shift and go to state 129
    SEMI            shift and go to state 131

    sep                            shift and go to state 242

state 233

    (76) elseif_stmt -> ELSE stmt_list_opt .

    END             reduce using rule 76 (elseif_stmt -> ELSE stmt_list_opt .)


state 234

    (74) if_stmt -> IF expr error stmt_list_opt elseif_stmt end .

    CATCH           reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    END             reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    CONTINUE        reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    BREAK           reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    GLOBAL          reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    PERSISTENT      reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    IDENTIFIER      reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    FOR             reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    IF              reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    SEMI            reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    COMMA           reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    RETURN          reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    SWITCH          reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    TRY             reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    WHILE           reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    NOTEQUAL        reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    LBRACKET        reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    NUMBER          reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    STRING          reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    COLON           reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    LBRACE          reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    MINUS           reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    PLUS            reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    FUNCTION        reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    $end            reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    ELSE            reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    ELSEIF          reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    CASE            reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)
    OTHERWISE       reduce using rule 74 (if_stmt -> IF expr error stmt_list_opt elseif_stmt end .)


state 235

    (73) if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .

    CATCH           reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    END             reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    CONTINUE        reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    BREAK           reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    GLOBAL          reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    PERSISTENT      reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    IDENTIFIER      reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    FOR             reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    IF              reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    SEMI            reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    COMMA           reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    RETURN          reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    SWITCH          reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    TRY             reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    WHILE           reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    NOTEQUAL        reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    LBRACKET        reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    NUMBER          reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    STRING          reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    COLON           reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    LBRACE          reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    MINUS           reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    PLUS            reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    FUNCTION        reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    $end            reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    ELSE            reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    ELSEIF          reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    CASE            reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)
    OTHERWISE       reduce using rule 73 (if_stmt -> IF expr sep stmt_list_opt elseif_stmt end .)


state 236

    (80) for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .

    END             reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    CONTINUE        reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    BREAK           reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    GLOBAL          reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    PERSISTENT      reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    IDENTIFIER      reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    FOR             reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    IF              reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    SEMI            reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    COMMA           reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    RETURN          reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    SWITCH          reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    TRY             reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    WHILE           reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    NOTEQUAL        reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    LBRACKET        reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    NUMBER          reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    STRING          reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    COLON           reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    LBRACE          reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    MINUS           reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    PLUS            reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    FUNCTION        reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    $end            reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    CATCH           reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    CASE            reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    OTHERWISE       reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    ELSE            reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)
    ELSEIF          reduce using rule 80 (for_stmt -> FOR matrix EQUALS expr SEMI stmt_list end .)


state 237

    (78) for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .

    END             reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    CONTINUE        reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    BREAK           reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    GLOBAL          reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    PERSISTENT      reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    IDENTIFIER      reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    FOR             reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    IF              reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    SEMI            reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    COMMA           reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    RETURN          reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    SWITCH          reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    TRY             reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    WHILE           reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    NOTEQUAL        reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    LBRACKET        reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    NUMBER          reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    STRING          reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    COLON           reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    LBRACE          reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    MINUS           reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    PLUS            reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    FUNCTION        reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    $end            reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    CATCH           reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    CASE            reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    OTHERWISE       reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    ELSE            reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)
    ELSEIF          reduce using rule 78 (for_stmt -> FOR IDENTIFIER EQUALS expr SEMI stmt_list end .)


state 238

    (79) for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI . stmt_list end
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list                      shift and go to state 243
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 239

    (50) func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .

    END             reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    CONTINUE        reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    BREAK           reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    GLOBAL          reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    PERSISTENT      reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    IDENTIFIER      reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    FOR             reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    IF              reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    SEMI            reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    COMMA           reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    RETURN          reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    SWITCH          reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    TRY             reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    WHILE           reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    NOTEQUAL        reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    LBRACKET        reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    NUMBER          reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    STRING          reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    COLON           reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    LBRACE          reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    MINUS           reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    PLUS            reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    FUNCTION        reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)
    $end            reduce using rule 50 (func_decl -> FUNCTION ret EQUALS IDENTIFIER args_opt SEMI .)


state 240

    (43) case_list -> CASE expr error stmt_list_opt . case_list
    (41) case_list -> .
    (42) case_list -> . CASE expr sep stmt_list_opt case_list
    (43) case_list -> . CASE expr error stmt_list_opt case_list
    (44) case_list -> . OTHERWISE stmt_list

    END             reduce using rule 41 (case_list -> .)
    CASE            shift and go to state 190
    OTHERWISE       shift and go to state 188

    case_list                      shift and go to state 244

state 241

    (42) case_list -> CASE expr sep stmt_list_opt . case_list
    (41) case_list -> .
    (42) case_list -> . CASE expr sep stmt_list_opt case_list
    (43) case_list -> . CASE expr error stmt_list_opt case_list
    (44) case_list -> . OTHERWISE stmt_list

    END             reduce using rule 41 (case_list -> .)
    CASE            shift and go to state 190
    OTHERWISE       shift and go to state 188

    case_list                      shift and go to state 245

state 242

    (77) elseif_stmt -> ELSEIF expr sep . stmt_list_opt elseif_stmt
    (59) stmt_list_opt -> .
    (60) stmt_list_opt -> . stmt_list
    (61) stmt_list -> . stmt
    (62) stmt_list -> . stmt_list stmt
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    ELSE            reduce using rule 59 (stmt_list_opt -> .)
    ELSEIF          reduce using rule 59 (stmt_list_opt -> .)
    END             reduce using rule 59 (stmt_list_opt -> .)
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    for_stmt                       shift and go to state 13
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    stmt_list_opt                  shift and go to state 246
    stmt_list                      shift and go to state 192
    persistent_stmt                shift and go to state 23
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 19
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    if_stmt                        shift and go to state 47
    expr                           shift and go to state 24

state 243

    (79) for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list . end
    (62) stmt_list -> stmt_list . stmt
    (91) end -> . END
    (9) stmt -> . continue_stmt
    (10) stmt -> . break_stmt
    (11) stmt -> . expr_stmt
    (12) stmt -> . global_stmt
    (13) stmt -> . persistent_stmt
    (14) stmt -> . command
    (15) stmt -> . for_stmt
    (16) stmt -> . if_stmt
    (17) stmt -> . null_stmt
    (18) stmt -> . return_stmt
    (19) stmt -> . switch_stmt
    (20) stmt -> . try_catch
    (21) stmt -> . while_stmt
    (22) stmt -> . foo_stmt
    (38) continue_stmt -> . CONTINUE SEMI
    (39) break_stmt -> . BREAK SEMI
    (69) expr_stmt -> . expr_list SEMI
    (32) global_stmt -> . GLOBAL global_list SEMI
    (33) global_stmt -> . GLOBAL IDENTIFIER EQUALS expr SEMI
    (35) persistent_stmt -> . PERSISTENT global_list SEMI
    (36) persistent_stmt -> . PERSISTENT IDENTIFIER EQUALS expr SEMI
    (29) command -> . IDENTIFIER args SEMI
    (78) for_stmt -> . FOR IDENTIFIER EQUALS expr SEMI stmt_list end
    (79) for_stmt -> . FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end
    (80) for_stmt -> . FOR matrix EQUALS expr SEMI stmt_list end
    (73) if_stmt -> . IF expr sep stmt_list_opt elseif_stmt end
    (74) if_stmt -> . IF expr error stmt_list_opt elseif_stmt end
    (47) null_stmt -> . SEMI
    (48) null_stmt -> . COMMA
    (37) return_stmt -> . RETURN SEMI
    (40) switch_stmt -> . SWITCH expr semi_opt case_list end
    (45) try_catch -> . TRY stmt_list CATCH stmt_list end
    (46) try_catch -> . TRY stmt_list end
    (70) while_stmt -> . WHILE expr SEMI stmt_list end
    (34) foo_stmt -> . expr OROR expr SEMI
    (65) expr_list -> . exprs
    (66) expr_list -> . exprs COMMA
    (81) expr -> . IDENTIFIER
    (82) expr -> . number
    (83) expr -> . string
    (84) expr -> . colon
    (85) expr -> . NOTEQUAL
    (86) expr -> . matrix
    (87) expr -> . cellarray
    (88) expr -> . expr2
    (89) expr -> . expr1
    (106) expr -> . LBRACKET expr RBRACKET
    (107) expr -> . expr FIELD
    (108) expr -> . expr TRANSPOSE
    (109) expr -> . expr LBRACE expr_list RBRACE
    (110) expr -> . expr LBRACE RBRACE
    (111) expr -> . expr LBRACKET expr_list RBRACKET
    (112) expr -> . expr LBRACKET RBRACKET
    (67) exprs -> . expr
    (68) exprs -> . exprs COMMA expr
    (90) number -> . NUMBER
    (92) string -> . STRING
    (93) colon -> . COLON
    (101) matrix -> . LBRACKET RBRACKET
    (102) matrix -> . LBRACKET concat_list RBRACKET
    (103) matrix -> . LBRACKET concat_list SEMI RBRACKET
    (104) matrix -> . LBRACKET expr_list RBRACKET
    (105) matrix -> . LBRACKET expr_list SEMI RBRACKET
    (97) cellarray -> . LBRACE RBRACE
    (98) cellarray -> . LBRACE expr_list RBRACE
    (99) cellarray -> . LBRACE concat_list RBRACE
    (100) cellarray -> . LBRACE concat_list SEMI RBRACE
    (113) expr2 -> . expr AND expr
    (114) expr2 -> . expr LDIV expr
    (115) expr2 -> . expr COLON expr
    (116) expr2 -> . expr DIV expr
    (117) expr2 -> . expr DOT expr
    (118) expr2 -> . expr DOTDIV expr
    (119) expr2 -> . expr DOTEXP expr
    (120) expr2 -> . expr DOTMUL expr
    (121) expr2 -> . expr EQUALEQUAL expr
    (122) expr2 -> . expr EXP expr
    (123) expr2 -> . expr GREATEREQUAL expr
    (124) expr2 -> . expr GREATERTHAN expr
    (125) expr2 -> . expr LESSEQUAL expr
    (126) expr2 -> . expr LESSTHAN expr
    (127) expr2 -> . expr MINUS expr
    (128) expr2 -> . expr TIMES expr
    (129) expr2 -> . expr NOTEQUAL expr
    (130) expr2 -> . expr OR expr
    (131) expr2 -> . expr OROR expr
    (132) expr2 -> . expr PLUS expr
    (133) expr2 -> . expr EQUALS expr
    (134) expr2 -> . expr OREQUALS expr
    (94) expr1 -> . MINUS expr
    (95) expr1 -> . PLUS expr
    (96) expr1 -> . NOTEQUAL expr

    END             shift and go to state 112
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 17
    GLOBAL          shift and go to state 36
    PERSISTENT      shift and go to state 5
    IDENTIFIER      shift and go to state 10
    FOR             shift and go to state 3
    IF              shift and go to state 8
    SEMI            shift and go to state 44
    COMMA           shift and go to state 35
    RETURN          shift and go to state 20
    SWITCH          shift and go to state 6
    TRY             shift and go to state 2
    WHILE           shift and go to state 15
    NOTEQUAL        shift and go to state 40
    LBRACKET        shift and go to state 33
    NUMBER          shift and go to state 7
    STRING          shift and go to state 39
    COLON           shift and go to state 45
    LBRACE          shift and go to state 38
    MINUS           shift and go to state 26
    PLUS            shift and go to state 48

    switch_stmt                    shift and go to state 1
    end                            shift and go to state 247
    expr_list                      shift and go to state 27
    colon                          shift and go to state 28
    command                        shift and go to state 37
    break_stmt                     shift and go to state 29
    global_stmt                    shift and go to state 30
    exprs                          shift and go to state 31
    continue_stmt                  shift and go to state 9
    while_stmt                     shift and go to state 32
    foo_stmt                       shift and go to state 11
    if_stmt                        shift and go to state 47
    for_stmt                       shift and go to state 13
    cellarray                      shift and go to state 25
    return_stmt                    shift and go to state 14
    expr_stmt                      shift and go to state 34
    string                         shift and go to state 42
    expr2                          shift and go to state 16
    try_catch                      shift and go to state 18
    stmt                           shift and go to state 66
    matrix                         shift and go to state 43
    expr1                          shift and go to state 21
    null_stmt                      shift and go to state 22
    number                         shift and go to state 46
    persistent_stmt                shift and go to state 23
    expr                           shift and go to state 24

state 244

    (43) case_list -> CASE expr error stmt_list_opt case_list .

    END             reduce using rule 43 (case_list -> CASE expr error stmt_list_opt case_list .)


state 245

    (42) case_list -> CASE expr sep stmt_list_opt case_list .

    END             reduce using rule 42 (case_list -> CASE expr sep stmt_list_opt case_list .)


state 246

    (77) elseif_stmt -> ELSEIF expr sep stmt_list_opt . elseif_stmt
    (75) elseif_stmt -> .
    (76) elseif_stmt -> . ELSE stmt_list_opt
    (77) elseif_stmt -> . ELSEIF expr sep stmt_list_opt elseif_stmt

    END             reduce using rule 75 (elseif_stmt -> .)
    ELSE            shift and go to state 220
    ELSEIF          shift and go to state 219

    elseif_stmt                    shift and go to state 248

state 247

    (79) for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .

    END             reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    CONTINUE        reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    BREAK           reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    GLOBAL          reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    PERSISTENT      reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    IDENTIFIER      reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    FOR             reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    IF              reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    SEMI            reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    COMMA           reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    RETURN          reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    SWITCH          reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    TRY             reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    WHILE           reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    NOTEQUAL        reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    LBRACKET        reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    NUMBER          reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    STRING          reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    COLON           reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    LBRACE          reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    MINUS           reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    PLUS            reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    FUNCTION        reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    $end            reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    CATCH           reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    CASE            reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    OTHERWISE       reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    ELSE            reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)
    ELSEIF          reduce using rule 79 (for_stmt -> FOR LBRACKET IDENTIFIER EQUALS expr RBRACKET SEMI stmt_list end .)


state 248

    (77) elseif_stmt -> ELSEIF expr sep stmt_list_opt elseif_stmt .

    END             reduce using rule 77 (elseif_stmt -> ELSEIF expr sep stmt_list_opt elseif_stmt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NOTEQUAL in state 40 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 40 resolved as shift
WARNING: shift/reduce conflict for COLON in state 40 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 101 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 109 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 109 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 109 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 109 resolved as shift
WARNING: shift/reduce conflict for COLON in state 109 resolved as shift
WARNING: shift/reduce conflict for DIV in state 109 resolved as shift
WARNING: shift/reduce conflict for DOT in state 109 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 109 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 109 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 109 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for EXP in state 109 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 109 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 109 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for OR in state 109 resolved as shift
WARNING: shift/reduce conflict for OROR in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 109 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 109 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 117 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 136 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 136 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 136 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 136 resolved as shift
WARNING: shift/reduce conflict for AND in state 136 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 136 resolved as shift
WARNING: shift/reduce conflict for COLON in state 136 resolved as shift
WARNING: shift/reduce conflict for DIV in state 136 resolved as shift
WARNING: shift/reduce conflict for DOT in state 136 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 136 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 136 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 136 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for EXP in state 136 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 136 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 136 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for OR in state 136 resolved as shift
WARNING: shift/reduce conflict for OROR in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 136 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 136 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 137 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 137 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 137 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 137 resolved as shift
WARNING: shift/reduce conflict for AND in state 137 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 137 resolved as shift
WARNING: shift/reduce conflict for COLON in state 137 resolved as shift
WARNING: shift/reduce conflict for DIV in state 137 resolved as shift
WARNING: shift/reduce conflict for DOT in state 137 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 137 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 137 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 137 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for EXP in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 137 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 137 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for OR in state 137 resolved as shift
WARNING: shift/reduce conflict for OROR in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 137 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 137 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 142 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 142 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 142 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 142 resolved as shift
WARNING: shift/reduce conflict for AND in state 142 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 142 resolved as shift
WARNING: shift/reduce conflict for COLON in state 142 resolved as shift
WARNING: shift/reduce conflict for DIV in state 142 resolved as shift
WARNING: shift/reduce conflict for DOT in state 142 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 142 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 142 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 142 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for EXP in state 142 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 142 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 142 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for OR in state 142 resolved as shift
WARNING: shift/reduce conflict for OROR in state 142 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 142 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 142 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 144 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 144 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 144 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 144 resolved as shift
WARNING: shift/reduce conflict for AND in state 144 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 144 resolved as shift
WARNING: shift/reduce conflict for COLON in state 144 resolved as shift
WARNING: shift/reduce conflict for DIV in state 144 resolved as shift
WARNING: shift/reduce conflict for DOT in state 144 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 144 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 144 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 144 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for EXP in state 144 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 144 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 144 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for OR in state 144 resolved as shift
WARNING: shift/reduce conflict for OROR in state 144 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 144 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 144 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 144 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 145 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 145 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 145 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 145 resolved as shift
WARNING: shift/reduce conflict for AND in state 145 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 145 resolved as shift
WARNING: shift/reduce conflict for COLON in state 145 resolved as shift
WARNING: shift/reduce conflict for DIV in state 145 resolved as shift
WARNING: shift/reduce conflict for DOT in state 145 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 145 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 145 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 145 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 145 resolved as shift
WARNING: shift/reduce conflict for EXP in state 145 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 145 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 145 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 145 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 145 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 145 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 145 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 145 resolved as shift
WARNING: shift/reduce conflict for OR in state 145 resolved as shift
WARNING: shift/reduce conflict for OROR in state 145 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 145 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 145 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 145 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 149 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 149 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 149 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 149 resolved as shift
WARNING: shift/reduce conflict for AND in state 149 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 149 resolved as shift
WARNING: shift/reduce conflict for COLON in state 149 resolved as shift
WARNING: shift/reduce conflict for DIV in state 149 resolved as shift
WARNING: shift/reduce conflict for DOT in state 149 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 149 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 149 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 149 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for EXP in state 149 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 149 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 149 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 149 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 149 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for OR in state 149 resolved as shift
WARNING: shift/reduce conflict for OROR in state 149 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 149 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 149 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 149 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 150 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 150 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 150 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 150 resolved as shift
WARNING: shift/reduce conflict for AND in state 150 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 150 resolved as shift
WARNING: shift/reduce conflict for COLON in state 150 resolved as shift
WARNING: shift/reduce conflict for DIV in state 150 resolved as shift
WARNING: shift/reduce conflict for DOT in state 150 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 150 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 150 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 150 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for EXP in state 150 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 150 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 150 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 150 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 150 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for OR in state 150 resolved as shift
WARNING: shift/reduce conflict for OROR in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 150 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 150 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 151 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 151 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 151 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 151 resolved as shift
WARNING: shift/reduce conflict for AND in state 151 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 151 resolved as shift
WARNING: shift/reduce conflict for COLON in state 151 resolved as shift
WARNING: shift/reduce conflict for DIV in state 151 resolved as shift
WARNING: shift/reduce conflict for DOT in state 151 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 151 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 151 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 151 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for EXP in state 151 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 151 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 151 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 151 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 151 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for OR in state 151 resolved as shift
WARNING: shift/reduce conflict for OROR in state 151 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 151 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 151 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 151 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 152 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 152 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 152 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 152 resolved as shift
WARNING: shift/reduce conflict for AND in state 152 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 152 resolved as shift
WARNING: shift/reduce conflict for COLON in state 152 resolved as shift
WARNING: shift/reduce conflict for DIV in state 152 resolved as shift
WARNING: shift/reduce conflict for DOT in state 152 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 152 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 152 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 152 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for EXP in state 152 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 152 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 152 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 152 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 152 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for OR in state 152 resolved as shift
WARNING: shift/reduce conflict for OROR in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 152 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 152 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 152 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 153 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 153 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 153 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 153 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 153 resolved as shift
WARNING: shift/reduce conflict for AND in state 153 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 153 resolved as shift
WARNING: shift/reduce conflict for COLON in state 153 resolved as shift
WARNING: shift/reduce conflict for DIV in state 153 resolved as shift
WARNING: shift/reduce conflict for DOT in state 153 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 153 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 153 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 153 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for EXP in state 153 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 153 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 153 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 153 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 153 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for OR in state 153 resolved as shift
WARNING: shift/reduce conflict for OROR in state 153 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 153 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 153 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 153 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 155 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 155 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 155 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 155 resolved as shift
WARNING: shift/reduce conflict for AND in state 155 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 155 resolved as shift
WARNING: shift/reduce conflict for COLON in state 155 resolved as shift
WARNING: shift/reduce conflict for DIV in state 155 resolved as shift
WARNING: shift/reduce conflict for DOT in state 155 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 155 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 155 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 155 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for EXP in state 155 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 155 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 155 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 155 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 155 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for OR in state 155 resolved as shift
WARNING: shift/reduce conflict for OROR in state 155 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 155 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 155 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 155 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 156 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 156 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 156 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 156 resolved as shift
WARNING: shift/reduce conflict for AND in state 156 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 156 resolved as shift
WARNING: shift/reduce conflict for COLON in state 156 resolved as shift
WARNING: shift/reduce conflict for DIV in state 156 resolved as shift
WARNING: shift/reduce conflict for DOT in state 156 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 156 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 156 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 156 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for EXP in state 156 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 156 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 156 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for OR in state 156 resolved as shift
WARNING: shift/reduce conflict for OROR in state 156 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 156 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 156 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 156 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 158 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 158 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 158 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 158 resolved as shift
WARNING: shift/reduce conflict for AND in state 158 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 158 resolved as shift
WARNING: shift/reduce conflict for COLON in state 158 resolved as shift
WARNING: shift/reduce conflict for DIV in state 158 resolved as shift
WARNING: shift/reduce conflict for DOT in state 158 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 158 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 158 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 158 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 158 resolved as shift
WARNING: shift/reduce conflict for EXP in state 158 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 158 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 158 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 158 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 158 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 158 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 158 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 158 resolved as shift
WARNING: shift/reduce conflict for OR in state 158 resolved as shift
WARNING: shift/reduce conflict for OROR in state 158 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 158 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 158 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 158 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 161 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 161 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 161 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 161 resolved as shift
WARNING: shift/reduce conflict for AND in state 161 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 161 resolved as shift
WARNING: shift/reduce conflict for COLON in state 161 resolved as shift
WARNING: shift/reduce conflict for DIV in state 161 resolved as shift
WARNING: shift/reduce conflict for DOT in state 161 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 161 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 161 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 161 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for EXP in state 161 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 161 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 161 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 161 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 161 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for OR in state 161 resolved as shift
WARNING: shift/reduce conflict for OROR in state 161 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 161 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 161 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 161 resolved as shift
WARNING: shift/reduce conflict for FIELD in state 186 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 186 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 186 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 186 resolved as shift
WARNING: shift/reduce conflict for AND in state 186 resolved as shift
WARNING: shift/reduce conflict for LDIV in state 186 resolved as shift
WARNING: shift/reduce conflict for COLON in state 186 resolved as shift
WARNING: shift/reduce conflict for DIV in state 186 resolved as shift
WARNING: shift/reduce conflict for DOT in state 186 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 186 resolved as shift
WARNING: shift/reduce conflict for DOTEXP in state 186 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 186 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 186 resolved as shift
WARNING: shift/reduce conflict for EXP in state 186 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 186 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 186 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 186 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 186 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 186 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 186 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 186 resolved as shift
WARNING: shift/reduce conflict for OR in state 186 resolved as shift
WARNING: shift/reduce conflict for OROR in state 186 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 186 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 186 resolved as shift
WARNING: shift/reduce conflict for OREQUALS in state 186 resolved as shift
